'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomButton = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ButtonTypes = require('./ButtonTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CustomButton = exports.CustomButton = function CustomButton(_ref) {
  var type = _ref.type,
      style = _ref.style,
      size = _ref.size,
      icon = _ref.icon,
      label = _ref.label,
      onClick = _ref.onClick,
      align = _ref.align,
      isButtonGroup = _ref.isButtonGroup,
      isMarginRequired = _ref.isMarginRequired,
      width = _ref.width,
      color = _ref.color,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === undefined ? false : _ref$disabled,
      css = _ref.css;


  var getStyleClass = function getStyleClass() {
    switch (style) {
      case _ButtonTypes.BUTTON_STYLE.BRICK:
        return 'btn-block-c';
        break;
      case _ButtonTypes.BUTTON_STYLE.ROUNDED:
        return 'btn-round';
        break;
      default:
        return 'btn';
        break;
    }
  };
  var getTypeClass = function getTypeClass() {
    switch (type) {
      case _ButtonTypes.BUTTON_TYPE.PRIMARY:
        return 'custom-btn-primary';
        break;
      case _ButtonTypes.BUTTON_TYPE.SECONDARY:
        return 'custom-btn-secondary';
        break;
      case _ButtonTypes.BUTTON_TYPE.ALERT_PRIMARY:
        return 'btn-alert-primary';
        break;
      case _ButtonTypes.BUTTON_TYPE.ALERT_SECONDARY:
        return 'btn-alert-secondary';
        break;
      default:
        return '';
        break;
    }
  };
  var getSizeClass = function getSizeClass() {
    switch (size) {
      case _ButtonTypes.BUTTON_SIZE.SMALL:
        return 'btn-sm';
        break;
      case _ButtonTypes.BUTTON_SIZE.MEDIUM:
        return 'btn-md';
        break;
      case _ButtonTypes.BUTTON_SIZE.LARGE:
        return 'btn-lg';
        break;
      case _ButtonTypes.BUTTON_SIZE.MEDIUM_LARGE:
        return 'btn-md-lg';
        break;
      default:
        return '';
        break;
    }
  };
  var getButtonWidth = function getButtonWidth() {
    switch (width) {
      case _ButtonTypes.BUTTON_ALIGN.INHERIT:
        return 'btn-width-inherit';
        break;
      default:
        return '';
        break;
    }
  };
  var getIcon = function getIcon() {
    if (icon) {
      return _react2.default.createElement('i', { className: 'fa ' + icon });
    } else {
      return null;
    }
  };
  var baseClass = 'custom-btn';
  var getColor = function getColor() {
    switch (color) {
      case _ButtonTypes.COLOR.PRIMARY:
        return 'color-primary';
        break;
      case _ButtonTypes.COLOR.SECONDARY:
        return 'color-secondary';
        break;
      default:
        return '';
        break;
    }
  };
  return _react2.default.createElement(
    'div',
    { onClick: onClick, className: baseClass + ' ' + getStyleClass() + ' ' + getTypeClass() + ' ' + getColor() + ' ' + getSizeClass() + ' ' + ('float-' + align + (isButtonGroup ? ' margin-' + (align && align === "left" ? 'right' : 'left') : '')) + (isMarginRequired ? ' addMargin' : '') + ' ' + getButtonWidth() + (disabled ? ' btn-disabled' : ''), style: css },
    getIcon(),
    ' ' + label
  );
};