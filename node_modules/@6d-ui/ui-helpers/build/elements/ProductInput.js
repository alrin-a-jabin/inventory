'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactstrap = require('reactstrap');

var _fields = require('@6d-ui/fields');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PRODUCT_WITH_MSISDN = void 0;

var getEnabledOption = function getEnabledOption(options, products) {
    var selectedOpts = products.map(function (product) {
        return product && product.productId ? product.productId.value : null;
    });
    return options ? options.map(function (option) {
        option.disabled = selectedOpts.indexOf(option.value) >= 0;
        return option;
    }) : [];
};

var ProductRow = function ProductRow(props) {
    var product = props.product,
        options = props.options,
        onSelectChange = props.onSelectChange,
        onInputChange = props.onInputChange,
        onRemove = props.onRemove,
        index = props.index;

    var handleSelectChange = function handleSelectChange(value, obj) {
        var _ref = obj || { isTouched: false },
            isTouched = _ref.isTouched;

        if (isTouched) return;
        onSelectChange(value, index);
    };
    return _react2.default.createElement(
        _reactstrap.Row,
        { className: 'mx-0 mb-2' },
        _react2.default.createElement(
            _reactstrap.Col,
            null,
            _react2.default.createElement(_fields.FieldItem, {
                type: '1',
                values: options,
                value: product.productId && (product.productId.label ? product.productId : product.productId.value),
                getOnlyInput: true,
                onChange: handleSelectChange
            })
        ),
        _react2.default.createElement(
            _reactstrap.Col,
            null,
            _react2.default.createElement(_reactstrap.Input, { className: 'mandatory-field', disabled: props.isView, value: product.threshold, onChange: function onChange(e) {
                    return onInputChange(e.target.value, index, "threshold");
                } })
        ),
        _react2.default.createElement(
            _reactstrap.Col,
            null,
            product && product.productId && PRODUCT_WITH_MSISDN === product.productId.type && _react2.default.createElement(_reactstrap.Input, { disabled: props.isView, onChange: function onChange(e) {
                    return onInputChange(e.target.value, index, "msisdn");
                }, value: product.msisdn })
        ),
        _react2.default.createElement(
            _reactstrap.Col,
            null,
            product && product.productId && PRODUCT_WITH_MSISDN === product.productId.type && _react2.default.createElement(_reactstrap.Input, { disabled: props.isView, onChange: function onChange(e) {
                    return onInputChange(e.target.value, index, "simNo");
                }, value: product.simNo })
        ),
        _react2.default.createElement(
            _reactstrap.Col,
            { style: { flex: '0 0 60px' } },
            !props.isView && _react2.default.createElement(
                _reactstrap.Button,
                { className: 'close custom-close', onClick: function onClick() {
                        return onRemove(index);
                    } },
                _react2.default.createElement(
                    'span',
                    { 'aria-hidden': 'true' },
                    '\xD7'
                )
            )
        )
    );
};

var ProductInput = function ProductInput(props) {
    var _props$products = props.products,
        products = _props$products === undefined ? [] : _props$products,
        handleProductSelect = props.handleProductSelect,
        handleProductRemove = props.handleProductRemove,
        onInputChange = props.onInputChange,
        isView = props.isView;

    var productOptions = getEnabledOption(props.productOptions, products);
    PRODUCT_WITH_MSISDN = props.productWithMsisdn;
    return _react2.default.createElement(
        _reactstrap.Container,
        { className: 'form-Brick-body mb-3' },
        _react2.default.createElement(
            _reactstrap.Row,
            { className: 'mx-0' },
            _react2.default.createElement(
                _reactstrap.Col,
                null,
                _react2.default.createElement(
                    'label',
                    null,
                    'Product'
                )
            ),
            _react2.default.createElement(
                _reactstrap.Col,
                null,
                _react2.default.createElement(
                    'label',
                    null,
                    'Threshold'
                )
            ),
            _react2.default.createElement(
                _reactstrap.Col,
                null,
                _react2.default.createElement(
                    'label',
                    null,
                    'MSISDN'
                )
            ),
            _react2.default.createElement(
                _reactstrap.Col,
                null,
                _react2.default.createElement(
                    'label',
                    null,
                    'Sim Serial No'
                )
            ),
            _react2.default.createElement(_reactstrap.Col, { style: { flex: '0 0 60px' } })
        ),
        products && products.map(function (product, index) {
            return _react2.default.createElement(ProductRow, {
                key: index,
                product: product,
                index: index,
                options: productOptions,
                onSelectChange: handleProductSelect,
                onRemove: handleProductRemove,
                onInputChange: onInputChange,
                isView: isView });
        }),
        _react2.default.createElement(
            _reactstrap.Row,
            null,
            _react2.default.createElement(
                _reactstrap.Col,
                { className: 'clearfix mt-3 mr-4' },
                !props.isView && _react2.default.createElement(
                    _reactstrap.Button,
                    {
                        color: 'primary',
                        className: 'btn-dataTable float-right',
                        onClick: props.addProductInput,
                        disabled: productOptions.length <= products.length },
                    'Add'
                )
            )
        )
    );
};

exports.default = ProductInput;