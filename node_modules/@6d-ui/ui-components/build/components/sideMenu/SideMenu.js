'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactstrap = require('reactstrap');

var _NavLink = require('./link/NavLink');

var _NavLink2 = _interopRequireDefault(_NavLink);

var _reactRouterDom = require('react-router-dom');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SideMenu = function (_Component) {
  _inherits(SideMenu, _Component);

  function SideMenu(props) {
    _classCallCheck(this, SideMenu);

    var _this = _possibleConstructorReturn(this, (SideMenu.__proto__ || Object.getPrototypeOf(SideMenu)).call(this, props));

    _this.toggle = _this.toggle.bind(_this);
    _this.renderMenus = _this.renderMenus.bind(_this);
    _this.checkPrivilages = _this.checkPrivilages.bind(_this);
    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_this);
    var currentPath = _this.props.currentPath;
    var selectedMenu = _lodash2.default.find(_lodash2.default.union.apply(_lodash2.default, [_this.props.menus].concat(_toConsumableArray(_lodash2.default.map(_this.props.menus, 'submenus')))), function (o) {
      if (!o.linkTo) return false;return currentPath.substring(0, o.linkTo.length) === o.linkTo;
    }) ? _lodash2.default.find(_lodash2.default.union.apply(_lodash2.default, [_this.props.menus].concat(_toConsumableArray(_lodash2.default.map(_this.props.menus, 'submenus')))), function (o) {
      if (!o.linkTo) return false;return currentPath.substring(0, o.linkTo.length) === o.linkTo;
    }).id : 1;

    _this.state = { "windowHeight": 0, selectedMenu: selectedMenu, openedMenu: null, firstLoad: true };
    _this.redirect = _this.redirect.bind(_this);
    return _this;
  }

  _createClass(SideMenu, [{
    key: 'redirect',
    value: function redirect(id, link) {
      this.setState({ selectedMenu: id });
      this.props.route(id, link);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.updateWindowDimensions();
      window.addEventListener('resize', this.updateWindowDimensions);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this.updateWindowDimensions);
    }
  }, {
    key: 'updateWindowDimensions',
    value: function updateWindowDimensions() {
      this.setState({ "windowHeight": window.innerHeight });
    }
  }, {
    key: 'toggle',
    value: function toggle(id) {
      var openedMenu = this.state.openedMenu === id ? null : id;
      this.setState({ openedMenu: openedMenu, firstLoad: false });
    }
  }, {
    key: 'checkPrivilages',
    value: function checkPrivilages(menuPrivilages) {
      if (menuPrivilages && menuPrivilages.length > 0) {
        var diff = _lodash2.default.difference(menuPrivilages, this.props.privilages, _lodash2.default.isEqual);
        if (_lodash2.default.isEqual(diff.sort(), menuPrivilages.sort())) {
          //No Privilages available for this menu
          return false;
        }
      }
      return true;
    }
  }, {
    key: 'renderMenus',
    value: function renderMenus(menus, isSubmenu) {
      var _this2 = this;

      return menus && Array.isArray(menus) ? menus.map(function (menu) {
        if (menu.privilages && menu.privilages.length > 0) {
          if (_this2.checkPrivilages(menu.privilages) === false) return false;
        }
        var isSelectParent = false;
        if (menu.submenus && menu.submenus.length > 0) {
          var subMenuPrivilages = [];
          menu.submenus.forEach(function (submenu) {
            if (submenu.privilages) {
              subMenuPrivilages.push.apply(subMenuPrivilages, _toConsumableArray(submenu.privilages));
            }
            if (window.location.pathname.substring(0, submenu.linkTo.length) === submenu.linkTo) {
              isSelectParent = true;
            }
          });
          if (_this2.checkPrivilages(subMenuPrivilages) === false) return false;
        }

        return _react2.default.createElement(
          _reactstrap.ListGroupItem,
          { key: menu.id },
          menu.submenus && Array.isArray(menu.submenus) ? [_react2.default.createElement(
            'a',
            { className: _this2.state.firstLoad && isSelectParent ? "selected opened" : _this2.state.openedMenu === menu.id ? "opened" : "", onClick: function onClick() {
                return _this2.toggle(menu.id);
              }, key: 'anchor-' + menu.id },
            _react2.default.createElement(
              'span',
              null,
              _react2.default.createElement('i', { className: 'fa ' + menu.icon + ' menu-icon' }),
              menu.label
            ),
            _react2.default.createElement('i', _extends({ className: 'fa fa-angle-right submenu-icon'
            }, _this2.state.firstLoad && isSelectParent || _this2.state.openedMenu === menu.id ? { style: { transform: 'rotate(90deg)' } } : {}))
          ), _react2.default.createElement(
            _reactstrap.Collapse,
            { isOpen: _this2.state.firstLoad && isSelectParent || _this2.state.openedMenu === menu.id, key: 'submenu-' + menu.id },
            _react2.default.createElement(
              _reactstrap.ListGroup,
              { className: 'side-submenu-item' },
              _this2.renderMenus(menu.submenus, true)
            )
          )] : _react2.default.createElement(_NavLink2.default, { menu: menu, redirect: _this2.redirect, selectedMenu: _this2.state.selectedMenu, isSubmenu: isSubmenu })
        );
      }) : false;
    }
  }, {
    key: 'render',
    value: function render() {
      var sideNavSubStyle = {
        height: this.state.windowHeight - 118
      };
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'div',
          { className: 'logo-div primary-color text-center' },
          _react2.default.createElement(
            _reactRouterDom.Link,
            { to: this.props.redirectPath || "/" },
            _react2.default.createElement('img', { src: this.props.logo, alt: '6d Technlogies' })
          )
        ),
        _react2.default.createElement(
          'div',
          { style: sideNavSubStyle, className: 'side-nav-menu-in scrollbar' },
          _react2.default.createElement(
            _reactstrap.ListGroup,
            { className: 'side-menu-item' },
            this.renderMenus(this.props.menus, false)
          )
        ),
        _react2.default.createElement('div', { style: { height: '10px' } }),
        this.props.isFooterDiv ? _react2.default.createElement(
          'div',
          { className: 'menu_footer text-center' },
          this.props.footerText
        ) : _react2.default.createElement('div', { className: 'menu_footer text-center', style: { display: 'none' } })
      );
    }
  }]);

  return SideMenu;
}(_react.Component);

exports.default = SideMenu;