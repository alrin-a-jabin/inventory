'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _fields = require('@6d-ui/fields');

var _reactstrap = require('reactstrap');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _buttons = require('@6d-ui/buttons');

var _ajax = require('@6d-ui/ajax');

var _reactPager = require('react-pager');

var _reactPager2 = _interopRequireDefault(_reactPager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ComplexSelectorModal = function (_Component) {
  _inherits(ComplexSelectorModal, _Component);

  function ComplexSelectorModal(props) {
    _classCallCheck(this, ComplexSelectorModal);

    var _this = _possibleConstructorReturn(this, (ComplexSelectorModal.__proto__ || Object.getPrototypeOf(ComplexSelectorModal)).call(this, props));

    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_this);
    var selectedItems = [];
    if (_this.props.selectedItems) {
      _this.props.selectedItems.forEach(function (item, index) {
        selectedItems.push(item);
      });
    }
    _this.state = {
      windowHeight: 0,
      selectedItems: selectedItems,
      searchParam: '',
      listItems: _this.props.listItems,
      allListItems: [],
      ROW_COUNT: 10,
      pageNumber: 1,
      totalPages: 0,
      view: _this.props.listItems && _this.props.listItems.length > 0 ? { value: 1,
        label: 'Selected' } : { value: 3,
        label: 'Initial Pagination' }
    };
    _this.searchAllList = _this.searchAllList.bind(_this);
    _this.searchAllListDeb = _lodash2.default.debounce(function (isReset) {
      _this.searchAllList(isReset);
    }, 500);
    return _this;
  }

  _createClass(ComplexSelectorModal, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.updateWindowDimensions();
      window.addEventListener('resize', this.updateWindowDimensions);
      if (this.state.view.value === 3) this.searchAllList();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this.updateWindowDimensions);
    }
  }, {
    key: 'updateWindowDimensions',
    value: function updateWindowDimensions() {
      this.setState({ windowHeight: window.innerHeight });
    }
  }, {
    key: 'handleSelect',
    value: function handleSelect(name, value) {
      if (this.props.isView) return false;

      var selectedItems = this.state.selectedItems;
      if (_lodash2.default.some(selectedItems, value)) {
        selectedItems = [];
        this.state.selectedItems.forEach(function (item) {
          if (item.value !== value.value) selectedItems.push(item);
        });
      } else {
        if (this.props.isRadioButton) {
          selectedItems = [];
          selectedItems.push(value);
        } else {
          selectedItems.push(value);
        }
      }
      this.setState({ selectedItems: selectedItems });
    }
  }, {
    key: 'onSearch',
    value: function onSearch(name, value, obj) {
      var _this2 = this,
          _setState;

      var _ref = obj || { isTouched: false },
          isTouched = _ref.isTouched;

      if (isTouched) {
        return false;
      }
      switch (name) {
        case 'searchParam':
          if (this.state.view.value !== 1) {
            //API Search
            this.setState({ searchParam: value }, function () {
              _this2.searchAllListDeb(true);
            });
          } else {
            //Selected Items Search
            var searchList = [];
            if (_lodash2.default.isNull(value)) {
              this.setState({ listItems: this.props.listItems, searchParam: value });
            } else {
              if (this.props.listItems) {
                this.props.listItems.forEach(function (item, index) {
                  if (_lodash2.default.toLower(item.label).indexOf(_lodash2.default.toLower(value)) >= 0) {
                    var temp = {
                      "label": item.label,
                      "value": item.value
                    };
                    searchList.push(temp);
                  }
                });
                this.setState({ listItems: searchList, searchParam: value });
              } else {
                this.setState({ searchParam: value });
              }
            }
          }
          break;
        case 'view':
          this.setState((_setState = {}, _defineProperty(_setState, name, value), _defineProperty(_setState, 'searchParam', ''), _setState), function () {
            if (value.value !== 1) _this2.searchAllList(true);else {
              _this2.setState({ listItems: _this2.props.listItems });
            }
          });

          break;
        default:
          this.setState(_defineProperty({}, name, value));
          break;
      }
    }
  }, {
    key: 'searchAllList',
    value: function searchAllList(isReset) {
      var request = {
        pageNumber: isReset === true ? 1 : this.state.pageNumber || 1,
        rowCount: this.state.ROW_COUNT,
        totalRecords: this.state.totalRecords || "",
        keyword: this.state.searchParam
      };
      var api_request = this.props.buildRequest(request);
      (0, _ajax.ajax)(this.props.url, api_request, this.props.ajaxUtil.makeCallBack, this.populateList.bind(this), this.loadingFunction.bind(this), {
        isShowSuccess: false,
        authKey: this.props.authKey,
        isProceedOnError: false,
        firstLoad: false
      });
      this.setState({ allListItems: [] });
    }
  }, {
    key: 'populateList',
    value: function populateList(response, hasError) {
      var parsedResponse = this.props.parseResponse(response);
      if (!parsedResponse) return false;

      var totalPages = parsedResponse.totalRecords && parsedResponse.totalRecords !== 0 && this.state.ROW_COUNT && this.state.ROW_COUNT !== 0 ? Math.ceil(parsedResponse.totalRecords / this.state.ROW_COUNT) : this.state.totalPages || 0;
      this.setState({ allListItems: parsedResponse.data, totalPages: totalPages, totalRecords: parsedResponse.totalRecords });
    }
  }, {
    key: 'loadingFunction',
    value: function loadingFunction(obj) {
      this.setState(obj);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var height = {
        height: this.state.windowHeight - 136
      };
      var getFooter = function getFooter() {
        return _react2.default.createElement(
          'div',
          { className: 'clearfix' },
          getPagination(),
          submitButton()
        );
      };
      var submitButton = function submitButton() {
        if (!_this3.props.isView) {
          return _react2.default.createElement(_buttons.CustomButton, {
            style: _buttons.BUTTON_STYLE.BRICK,
            type: _buttons.BUTTON_TYPE.PRIMARY,
            size: _buttons.BUTTON_SIZE.LARGE,
            align: 'right',
            label: 'Select' + (_this3.props.isRadioButton ? '' : _this3.state.selectedItems ? ' (' + _this3.state.selectedItems.length + ')' : ' (0)'),
            onClick: function onClick() {
              _this3.props.onSubmitClick(_this3.state.selectedItems);
            }
          });
        }
      };
      var getPagination = function getPagination() {
        if (_this3.state.view.value !== 1 && !_this3.state.isLoading) {
          if (_this3.state.allListItems && _this3.state.allListItems.length > 0) {
            return _react2.default.createElement(
              'div',
              { className: 'float-left' },
              _react2.default.createElement(_reactPager2.default, {
                total: _this3.state.totalPages ? _this3.state.totalPages : 0,
                current: _this3.state.pageNumber ? _this3.state.pageNumber - 1 : 0,
                visiblePages: 1,
                titles: { first: '<<', last: '>>', prev: '<', next: '>' },
                className: 'pagination-SelectorModal',
                onPageChanged: function onPageChanged(pageNumber) {
                  return _this3.setState({ pageNumber: pageNumber + 1 }, function () {
                    return _this3.searchAllList(false);
                  });
                }
              })
            );
          }
        }
      };
      var getItems = function getItems(listItems) {
        if (!listItems || listItems.length === 0) {
          return _react2.default.createElement(
            'div',
            { className: 'text-center' },
            'No data !'
          );
        } else {
          var _React$createElement;

          return _react2.default.createElement(_fields.FieldItem, (_React$createElement = {
            isListedInput: true,
            listedClassName: 'selectModalList',
            value: _this3.state.selectedItems,
            type: _this3.props.isRadioButton ? _fields.FIELD_TYPES.RADIO_BUTTON : _fields.FIELD_TYPES.CHECK_BOX,
            values: listItems
          }, _defineProperty(_React$createElement, 'value', _this3.props.isRadioButton ? _this3.state.selectedItems ? _this3.state.selectedItems[0] : '' : _this3.state.selectedItems), _defineProperty(_React$createElement, 'onChange', _this3.handleSelect.bind(_this3, "selectedItems")), _React$createElement));
        }
      };
      var getViewKeys = function getViewKeys() {
        if (_this3.state.view.value !== 3) {
          return _react2.default.createElement(
            _reactstrap.Row,
            { className: 'mx-0' },
            _react2.default.createElement(
              'div',
              { style: { width: '100%', padding: '10px 0px 0px 0px' } },
              _react2.default.createElement(_fields.FieldItem, {
                getOnlyInput: true,
                value: _this3.state.view,
                type: _fields.FIELD_TYPES.RADIO_BUTTON,
                values: [{
                  value: 1,
                  label: 'Selected'
                }, {
                  value: 2,
                  label: 'All'
                }],
                onChange: _this3.onSearch.bind(_this3, "view")
              })
            )
          );
        }
      };
      var getListItems = function getListItems() {
        if (_this3.state.isLoading) {
          return _react2.default.createElement(
            'div',
            { className: 'text-center' },
            'Loading..'
          );
        } else {
          if (_this3.state.view.value === 1) {
            return getItems(_this3.state.listItems);
          } else {
            return getItems(_this3.state.allListItems);
          }
        }
      };
      return _react2.default.createElement(
        _reactstrap.ModalBody,
        null,
        _react2.default.createElement(
          'div',
          { className: 'overlay_position scrollbar', style: height },
          _react2.default.createElement(
            _reactstrap.Row,
            { className: 'mx-0' },
            _react2.default.createElement(
              'div',
              { style: { width: '100%', padding: '10px 0px 0px 0px' } },
              _react2.default.createElement(_fields.FieldItem, {
                placeholder: 'Search Here',
                value: this.state.searchParam,
                getOnlyInput: true,
                onChange: this.onSearch.bind(this, 'searchParam')
              })
            )
          ),
          getViewKeys(),
          _react2.default.createElement(
            _reactstrap.Row,
            { className: 'mx-0' },
            _react2.default.createElement(
              'div',
              { style: { width: '100%', padding: '10px 0px 0px 0px' } },
              getListItems()
            )
          )
        ),
        _react2.default.createElement(
          _reactstrap.ModalFooter,
          null,
          getFooter()
        )
      );
    }
  }]);

  return ComplexSelectorModal;
}(_react.Component);

exports.default = ComplexSelectorModal;