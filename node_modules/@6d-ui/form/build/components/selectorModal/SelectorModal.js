'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _fields = require('@6d-ui/fields');

var _reactstrap = require('reactstrap');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _buttons = require('@6d-ui/buttons');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SelectorModal = function (_Component) {
  _inherits(SelectorModal, _Component);

  function SelectorModal(props) {
    _classCallCheck(this, SelectorModal);

    var _this = _possibleConstructorReturn(this, (SelectorModal.__proto__ || Object.getPrototypeOf(SelectorModal)).call(this, props));

    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_this);
    var selectedItems = [];
    if (_this.props.selectedItems) {
      _this.props.selectedItems.forEach(function (item, index) {
        selectedItems.push(item);
      });
    }
    _this.state = {
      windowHeight: 0,
      selectedItems: selectedItems,
      searchParam: '',
      listItems: _this.props.listItems
    };
    return _this;
  }

  _createClass(SelectorModal, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.updateWindowDimensions();
      window.addEventListener('resize', this.updateWindowDimensions);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this.updateWindowDimensions);
    }
  }, {
    key: 'updateWindowDimensions',
    value: function updateWindowDimensions() {
      this.setState({ windowHeight: window.innerHeight });
    }
  }, {
    key: 'handleSelect',
    value: function handleSelect(name, value) {
      if (this.props.isView) return false;

      var selectedItems = this.state.selectedItems;
      if (_lodash2.default.includes(selectedItems, value)) {
        _lodash2.default.pull(selectedItems, value);
      } else {
        if (this.props.isRadioButton) {
          selectedItems.length = 0;
          selectedItems.push(value);
        } else {
          selectedItems.push(value);
        }
      }
      this.setState({ selectedItems: selectedItems });
    }
  }, {
    key: 'onSearch',
    value: function onSearch(name, value, obj) {
      var _ref = obj || { isTouched: false },
          isTouched = _ref.isTouched;

      if (isTouched) {
        return false;
      }
      this.setState({ searchParam: value });
      var searchList = [];
      if (_lodash2.default.isNull(value)) {
        this.setState({ listItems: this.props.listItems });
      } else {
        if (this.props.listItems) {
          this.props.listItems.forEach(function (item, index) {
            if (_lodash2.default.toLower(item.label).indexOf(_lodash2.default.toLower(value)) >= 0) {
              var temp = {
                "label": item.label,
                "value": item.value
              };
              searchList.push(temp);
            }
          });
          this.setState({ listItems: searchList });
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var height = {
        height: this.state.windowHeight - 136
      };
      var submitButton = function submitButton() {
        if (!_this2.props.isView) return _react2.default.createElement(_buttons.CustomButton, {
          style: _buttons.BUTTON_STYLE.BRICK,
          type: _buttons.BUTTON_TYPE.PRIMARY,
          size: _buttons.BUTTON_SIZE.LARGE,
          align: 'right',
          label: 'Select (' + (_this2.state.selectedItems ? _this2.state.selectedItems.length : '0') + ')',
          onClick: function onClick() {
            _this2.props.onSubmitClick(_this2.state.selectedItems);
          }
        });
      };
      var getItems = function getItems(listItems) {
        if (!listItems || listItems.length === 0) {
          return _react2.default.createElement(
            'div',
            { className: 'text-center' },
            'No data !'
          );
        } else {
          var _React$createElement;

          return _react2.default.createElement(_fields.FieldItem, (_React$createElement = {
            isListedInput: true,
            listedClassName: 'selectModalList',
            value: _this2.state.selectedItems,
            type: _this2.props.isRadioButton ? _fields.FIELD_TYPES.RADIO_BUTTON : _fields.FIELD_TYPES.CHECK_BOX,
            values: listItems
          }, _defineProperty(_React$createElement, 'value', _this2.props.isRadioButton ? _this2.state.selectedItems ? _this2.state.selectedItems[0] : '' : _this2.state.selectedItems), _defineProperty(_React$createElement, 'onChange', _this2.handleSelect.bind(_this2, "selectedItems")), _React$createElement));
        }
      };
      return _react2.default.createElement(
        _reactstrap.ModalBody,
        null,
        _react2.default.createElement(
          'div',
          { className: 'overlay_position scrollbar', style: height },
          _react2.default.createElement(
            _reactstrap.Row,
            { className: 'mx-0' },
            _react2.default.createElement(_fields.FieldItem, {
              placeholder: 'Search Here',
              value: this.state.searchParam,
              getOnlyInput: true,
              onChange: this.onSearch.bind(this, 'searchParam')
            })
          ),
          _react2.default.createElement(
            _reactstrap.Row,
            { className: 'mx-0' },
            _react2.default.createElement(
              'div',
              { style: { width: '100%', padding: '10px 0px 0px 0px' } },
              getItems(this.state.listItems)
            )
          )
        ),
        _react2.default.createElement(
          _reactstrap.ModalFooter,
          null,
          submitButton()
        )
      );
    }
  }]);

  return SelectorModal;
}(_react.Component);

exports.default = SelectorModal;