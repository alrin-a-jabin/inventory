'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _IconDropDownMenu = require('../../elements/dropDownMenu/IconDropDownMenu');

var _IconDropDownMenu2 = _interopRequireDefault(_IconDropDownMenu);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListData = function (_Component) {
    _inherits(ListData, _Component);

    function ListData(props) {
        _classCallCheck(this, ListData);

        var _this = _possibleConstructorReturn(this, (ListData.__proto__ || Object.getPrototypeOf(ListData)).call(this, props));

        _this.state = {
            menuList: []
        };
        _this.getMenus = _this.getMenus.bind(_this);
        return _this;
    }

    _createClass(ListData, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            if (this.props.dropDwnMenuList) this.getMenus();
        }
    }, {
        key: 'getMenus',
        value: function getMenus() {
            var _this2 = this;

            var menuList = [];
            this.props.dropDwnMenuList.forEach(function (menu) {
                var temp = {
                    label: menu.label,
                    handleClick: function handleClick() {
                        return _this2.props.triggerFunc({ type: menu.type, data: _this2.props.selectedItem });
                    }
                };
                menuList.push(temp);
            });
            this.setState({ menuList: menuList });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                'div',
                { className: 'list-data-div' },
                _react2.default.createElement(
                    'div',
                    { className: 'px-2 py-2 list-title-header' },
                    _react2.default.createElement(
                        'div',
                        { style: { display: "flex" } },
                        _react2.default.createElement(
                            'div',
                            { className: 'list-title' },
                            this.props.title,
                            ' '
                        ),
                        _react2.default.createElement(
                            'div',
                            { className: 'ml-2 list-data-count' },
                            _react2.default.createElement(
                                'div',
                                { className: 'list-count' },
                                this.props.count
                            )
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'px-3 py-2 list-search' },
                    _react2.default.createElement(
                        'div',
                        { style: { display: "flex" } },
                        _react2.default.createElement(
                            'div',
                            { style: { display: "flex" }, className: 'px-2 py-1 list-search-box' },
                            _react2.default.createElement(
                                'div',
                                { className: 'search-text' },
                                'Search'
                            ),
                            _react2.default.createElement(
                                'div',
                                { className: 'search-icon' },
                                _react2.default.createElement('i', { 'class': 'fa fa-search', 'aria-hidden': 'true' })
                            )
                        ),
                        this.props.hasCreate && _react2.default.createElement(
                            'div',
                            { className: 'c-pointer list-add',
                                onClick: function onClick() {
                                    return _this3.props.triggerFunc({ type: 2, data: null });
                                } },
                            _react2.default.createElement('i', { 'class': 'fa fa-plus-circle ' })
                        )
                    )
                ),
                _react2.default.createElement(
                    'div',
                    { className: 'list-view list-scrollbar' },
                    this.props.count > 0 ? _react2.default.createElement(
                        'ul',
                        { className: 'm-0', style: { height: '510px' } },
                        this.props.values && this.props.values.map(function (obj) {
                            return _react2.default.createElement(
                                'li',
                                {
                                    key: obj.id,
                                    onClick: function onClick() {
                                        _this3.props.triggerFunc({ type: 1, data: obj });
                                    },
                                    className: _this3.props.selectedItem && _this3.props.selectedItem.id === obj.id ? 'list-data-selected' : 'list-data'
                                },
                                _react2.default.createElement(
                                    'div',
                                    { className: 'c-pointer px-3' },
                                    _react2.default.createElement(
                                        'table',
                                        { className: 'w-100' },
                                        _react2.default.createElement(
                                            'tbody',
                                            null,
                                            _react2.default.createElement(
                                                'tr',
                                                null,
                                                _react2.default.createElement(
                                                    'td',
                                                    null,
                                                    _react2.default.createElement(
                                                        'div',
                                                        null,
                                                        _react2.default.createElement(
                                                            'span',
                                                            { className: _this3.props.selectedItem && _this3.props.selectedItem.id === obj.id ? 'data-selected' : 'data-list' },
                                                            obj.label
                                                        )
                                                    ),
                                                    obj.subLabel && _react2.default.createElement(
                                                        'div',
                                                        null,
                                                        _react2.default.createElement(
                                                            'span',
                                                            { className: 'fs-10', style: { lineHeight: 1 } },
                                                            obj.subLabel
                                                        )
                                                    )
                                                ),
                                                _react2.default.createElement(
                                                    'td',
                                                    null,
                                                    _this3.state.menuList.length > 0 ? _react2.default.createElement(
                                                        'span',
                                                        { className: 'float-right c-pointer' },
                                                        _react2.default.createElement(_IconDropDownMenu2.default, {
                                                            menus: _this3.state.menuList,
                                                            color: 'primary'
                                                        })
                                                    ) : ''
                                                )
                                            )
                                        )
                                    )
                                )
                            );
                        })
                    ) : _react2.default.createElement(
                        'div',
                        { 'class': 'text-center' },
                        'No Data!'
                    )
                )
            );
        }
    }]);

    return ListData;
}(_react.Component);

exports.default = ListData;