{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/kmsdashboard/Quiz/ParticipantView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CONSTANTS } from '../../../util/Constants';\nimport Chart from 'react-apexcharts';\n\nclass ParticipantView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ParticipantData: {\n        score: {},\n        questions: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getParticipantData();\n  }\n\n  async getParticipantData() {\n    this.props.ajaxUtil.sendRequest(CONSTANTS.PARTICIPANTS.VIEW, {\n      assessment_id: this.props.currentParticipantId\n    }, response => {\n      if (response.hasOwnProperty('data')) {\n        if (response.data != null && response.statusCode == 200) {\n          this.setState({\n            ParticipantData: response.data\n          });\n        }\n      }\n    }, this.props.loadingFunction, {\n      method: 'POST',\n      isShowSuccess: false\n    });\n  }\n\n  render() {\n    const {\n      ParticipantData\n    } = this.state;\n    const options = {\n      chart: {\n        type: \"radialBar\"\n      },\n      colors: [\"#419CA0\"],\n      series: [67],\n      plotOptions: {\n        radialBar: {\n          hollow: {\n            margin: 50,\n            size: \"35%\"\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              offsetY: 15,\n              color: \"#111\",\n              fontSize: \"50px\",\n              show: true\n            }\n          }\n        }\n      },\n      labels: [\" \"]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `modal cus-Syllabus-modal fade addquiz  ${this.props.popup ? 'show custom-modal-open' : ''}`,\n      style: {\n        display: `${this.props.popup ? 'block' : 'none'}`\n      },\n      id: \"ScoreBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog row \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 col-lg-2 cusoverlay opacityPartcipan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content col-md-10 col-lg-10 pzero h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"modal-title font_weight_5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Score board\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      onClick: () => {\n        this.props.closePopup();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/images/close.svg\",\n      alt: \"close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 103\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body nopads\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modalPadding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-9 col-lg-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ParticipantName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 35\n      }\n    }, \"Participant Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"participatename\",\n      placeholder: \"Manav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 35\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"PickerRange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 35\n      }\n    }, \"Scheduled Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: \"01/01/2018 - 01/15/2018\",\n      name: \"scoreboardDate\",\n      className: \"form-control\",\n      value: ParticipantData.score.scheduled_date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 35\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"GroupName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 35\n      }\n    }, \"Group Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"participategroup\",\n      placeholder: \"Team1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 35\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Attempted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 35\n      }\n    }, \"Attempted date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"birthday\",\n      className: \"form-control\",\n      id: \"participatedate\",\n      placeholder: \"29/01/2019 to 03/02/2019\",\n      value: ParticipantData.score.attempted_date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 35\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 35\n      }\n    }, \"Score\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"participatescore\",\n      placeholder: \"60 out of 100\",\n      value: ParticipantData.score.score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 35\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 col-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, ParticipantData.score.percentage && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      options: options,\n      series: [ParticipantData.score.percentage],\n      type: \"radialBar\",\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center mt-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 27\n      }\n    }, \"Quiz Percentage\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scoreBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"scoreBoardtxt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }\n    }, \"Score board | \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font_weight_5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 66\n      }\n    }, ParticipantData.questions.length ? ParticipantData.questions.length : 0)), ParticipantData.questions.length > 0 && ParticipantData.questions.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scoreboard_question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"secorboardQus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questionFirst\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"question1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, \"Question \", index + 1), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control scorBoardQueninput\",\n      value: item.question_content,\n      placeholder: \"Do you know what is your ICP? (Ideal Customer Profile) ?\",\n      \"aria-label\": \"Do you know what is your ICP? (Ideal Customer Profile) ?\",\n      \"aria-describedby\": \"basic-addon2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text scorBoardQueninputspan\",\n      id: \"basic-addon2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, item.correct == 1 ? \"+1\" : \"+0\")))), item.optionList.length > 0 && item.optionList.map((_item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questionFirst\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"answerlbl\",\n      htmlFor: \"question1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, \"Answer \", index + 1), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text noborderbgaddon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"radiocontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"radio1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control greenInput scorBoardQueninput\",\n      placeholder: \"Enter Answer Choice\",\n      \"aria-label\": \"Amount (to the nearest dollar)\",\n      value: _item.option_content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 31\n      }\n    }, item.correct == 1 && _item.option_answer == 1 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text greenrighaddon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-check-circle greenfacircle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 84\n      }\n    }), \" RIGHT\"), item.correct == 0 && _item.option_answer == 1 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text redighaddon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-window-close greenfacircle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 78\n      }\n    }), \" Wrong\")))))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentParticipantId: state.dashboard.currentParticipantId\n  };\n};\n\nexport default connect(mapStateToProps, null)(ParticipantView);","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/kmsdashboard/Quiz/ParticipantView.js"],"names":["React","Component","connect","CONSTANTS","Chart","ParticipantView","constructor","props","state","ParticipantData","score","questions","componentDidMount","getParticipantData","ajaxUtil","sendRequest","PARTICIPANTS","VIEW","assessment_id","currentParticipantId","response","hasOwnProperty","data","statusCode","setState","loadingFunction","method","isShowSuccess","render","options","chart","type","colors","series","plotOptions","radialBar","hollow","margin","size","dataLabels","name","show","value","offsetY","color","fontSize","labels","popup","display","closePopup","process","env","PUBLIC_URL","scheduled_date","attempted_date","percentage","length","map","item","index","question_content","correct","optionList","_item","option_content","option_answer","mapStateToProps","dashboard"],"mappings":"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","sourcesContent":["  import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { CONSTANTS } from '../../../util/Constants'\nimport Chart from 'react-apexcharts'\n\nclass ParticipantView extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      ParticipantData:{\n        score:{},\n        questions:[]\n      }\n    }\n  }\n\n  componentDidMount(){\n    this.getParticipantData()\n  }\n\n  async getParticipantData() {\n    this.props.ajaxUtil.sendRequest(CONSTANTS.PARTICIPANTS.VIEW, {assessment_id:this.props.currentParticipantId}, response => {\n      if (response.hasOwnProperty('data')) {\n        if (response.data != null && response.statusCode == 200) {\n          this.setState({ ParticipantData: response.data });\n        }\n      }\n    }, this.props.loadingFunction,  { method: 'POST', isShowSuccess: false });\n  }\n\n  render() {\n        const { ParticipantData } = this.state\n        const options = {\n          chart: {\n            type: \"radialBar\"\n          },\n          colors: [\"#419CA0\"],\n          series: [67],\n          plotOptions: {\n            radialBar: {\n              hollow: {\n                margin: 50,\n                size: \"35%\",\n              },\n              dataLabels: {\n                name: {\n                  show: false,\n                },\n                value: {\n                  offsetY: 15,\n                  color: \"#111\",\n                  fontSize: \"50px\", \n                  show: true\n                }\n              }\n            }\n          },\n          labels: [\" \"]\n        };\n      \n        \n        return (\n            <div className={`modal cus-Syllabus-modal fade addquiz  ${this.props.popup ? 'show custom-modal-open' : ''}`} style={{ display: `${this.props.popup ? 'block' : 'none'}` }} id=\"ScoreBoard\">\n              <div className=\"modal-dialog row \">\n                <div className=\"col-md-2 col-lg-2 cusoverlay opacityPartcipan\">\n                </div>\n                <div className=\"modal-content col-md-10 col-lg-10 pzero h-100\">\n                  <div className=\"modal-header\">\n                    <h4 className=\"modal-title font_weight_5\">Score board</h4>\n                    <button type=\"button\" className=\"close\" onClick={() => {this.props.closePopup()}}><img src={process.env.PUBLIC_URL + \"/images/close.svg\"} alt=\"close\" /></button>\n                  </div>\n                  <div className=\"modal-body nopads\">\n                    <div className=\"modalPadding\">\n                      <div className=\"row\">\n                        <div className=\"col-md-9 col-lg-9\">\n                          <form action>\n                            <div className=\"row\">\n                              <div className=\"col-md-6 col-lg-6\">\n                                <div className=\"form-group\">\n                                  <label htmlFor=\"ParticipantName\">Participant Name</label>\n                                  <input type=\"text\" className=\"form-control\" id=\"participatename\" placeholder=\"Manav\" />\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 col-lg-6\">\n                                <div className=\"form-group\">\n                                  <label htmlFor=\"PickerRange\">Scheduled Date</label>\n                                  <input type=\"text\" defaultValue=\"01/01/2018 - 01/15/2018\" name=\"scoreboardDate\" className=\"form-control\"  value={ParticipantData.score.scheduled_date}/>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 col-lg-6\">\n                                <div className=\"form-group\">\n                                  <label htmlFor=\"GroupName\">Group Name</label>\n                                  <input type=\"text\" className=\"form-control\" id=\"participategroup\" placeholder=\"Team1\" />\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 col-lg-6\">\n                                <div className=\"form-group\">\n                                  <label htmlFor=\"Attempted\">Attempted date</label>\n                                  <input type=\"text\" name=\"birthday\" className=\"form-control\" id=\"participatedate\" placeholder=\"29/01/2019 to 03/02/2019\" \n                                  value={ParticipantData.score.attempted_date} />\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 col-lg-6\">\n                                <div className=\"form-group\">\n                                  <label htmlFor=\"Score\">Score</label>\n                                  <input type=\"text\" className=\"form-control\" id=\"participatescore\" placeholder=\"60 out of 100\" value={ParticipantData.score.score} />\n                                </div>\n                              </div>\n                            </div>\n                          </form>\n                        </div>\n                        <div className=\"col-md-3 col-lg-3\">\n                        {ParticipantData.score.percentage &&\n                          <div id=\"chart\">\n                              <Chart options={options}  series={[ParticipantData.score.percentage]} type=\"radialBar\" height={400} />\n                          </div>\n                        }\n                          <p className=\"text-center mt-10\">Quiz Percentage</p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"scoreBoard\">\n                      <p className=\"scoreBoardtxt\">Score board | <span className=\"font_weight_5\">{ParticipantData.questions.length ? ParticipantData.questions.length : 0}</span></p>\n                      {ParticipantData.questions.length > 0 && \n\n                        ParticipantData.questions.map((item, index) => (\n                          <div className=\"scoreboard_question\">\n                        <div className=\"secorboardQus\">\n                          <div className=\"questionFirst\">\n                        <label htmlFor=\"question1\">Question {index+1}</label>\n                            <div className=\"input-group mb-3\">\n                              <input type=\"text\" className=\"form-control scorBoardQueninput\" \n                              value={item.question_content}\n                              placeholder=\"Do you know what is your ICP? (Ideal Customer Profile) ?\" aria-label=\"Do you know what is your ICP? (Ideal Customer Profile) ?\" aria-describedby=\"basic-addon2\" />\n                              <div className=\"input-group-append\">\n                                <span className=\"input-group-text scorBoardQueninputspan\" id=\"basic-addon2\">{item.correct==1 ? \"+1\" : \"+0\"}</span>\n                              </div>\n                            </div>\n                          </div>\n                          {item.optionList.length > 0 && \n\n                          item.optionList.map( (_item,index) =>(\n\n                          <div className=\"questionFirst\">\n                            <label className=\"answerlbl\" htmlFor=\"question1\">Answer {index+1}</label>\n                            <div className=\"input-group mb-3\">\n                              <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text noborderbgaddon\">\n                                  <label className=\"radiocontainer\">\n                                    <input type=\"radio\" name=\"radio1\" />\n                                    <span className=\"checkmark\" />\n                                  </label>\n                                </span>\n                              </div>\n                              <input type=\"text\" className=\"form-control greenInput scorBoardQueninput\" placeholder=\"Enter Answer Choice\" aria-label=\"Amount (to the nearest dollar)\" \n                              value={_item.option_content} />\n                              <div className=\"input-group-append\">\n                                {item.correct == 1 && _item.option_answer == 1 &&\n                                <span className=\"input-group-text greenrighaddon\"> <i className=\"fa fa-check-circle greenfacircle\" /> RIGHT</span>\n                              }\n                             {item.correct == 0 && _item.option_answer == 1 &&\n                              <span className=\"input-group-text redighaddon\"><i className=\"fa fa-window-close greenfacircle\"></i> Wrong</span>\n                             }\n                              </div>\n                            </div>\n                          </div>\n                            ))\n                          \n                          }\n                        </div>\n                      </div>\n                        ))\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    currentParticipantId: state.dashboard.currentParticipantId,\n  }\n}\n\nexport default connect(mapStateToProps, null)(ParticipantView)"]},"metadata":{},"sourceType":"module"}