{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/data-table/elements/dataTable/DataTableContainer.js\";\nimport React, { Component, Fragment } from 'react';\nimport _ from 'lodash';\nimport { DataTable } from './DataTable';\nimport DataTableUtilsV3 from './util/DataTableUtilsV3';\nimport { Popup, POPUP_ALIGN } from '@6d-ui/popup';\nimport { FORM_MODAL } from '../../constants/ModalTypes';\nexport default class DataTableContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSearch = data => {\n      this.setState({ ...data\n      });\n      this.dataTable.load(true, {\n        \"isAdvanceSearch\": true,\n        \"keyword\": \"\",\n        ...data\n      }, false, this.state);\n    };\n\n    this.loadDataTable = (isReset, data, firstLoad) => {\n      this.dataTable.load(isReset, data, firstLoad, this.state);\n    };\n\n    this.togglePopup = (...popupArgs) => {\n      const responseList = this.dataTable.getResponseList();\n      if (popupArgs[0] === FORM_MODAL.SearchFilter) this.setState({\n        isSearchPopupOpen: true\n      });else this.setState({\n        isSearchPopupOpen: false\n      });\n      this.props.togglePopup(...popupArgs, responseList);\n    };\n\n    this.handleExtraButtonClick = (buttonClickFn, ...btnArgs) => {\n      const responseList = this.dataTable.getResponseList();\n      buttonClickFn(responseList, ...btnArgs);\n    };\n\n    this.deleteRow = (obj, message) => this.props.deleteRow(obj, message, this.deleteCallBack);\n\n    this.deleteCallBack = () => {\n      if (this.state.rowData && this.state.rowData.length === 1 && this.state.pageNumber !== 1) {\n        this.dataTable.load(false, {\n          \"pageNumber\": this.state.pageNumber - 1\n        }, false, this.state);\n      } else {\n        this.dataTable.load(false, {\n          \"pageNumber\": this.state.pageNumber\n        }, false, this.state);\n      }\n    };\n\n    this.validateExportFunctionality = () => {\n      if (this.props.exportTypes) {\n        let hasErrorLabel = false;\n        let hasErrorURL = false;\n        this.props.exportTypes.map(item => {\n          if (!item.label) hasErrorLabel = true;\n          if (!item.url) hasErrorURL = true;\n        });\n        if (hasErrorLabel) console.warn(\"Please provide :label key for each object in :exportType prop to show export buttons.\");\n        if (hasErrorURL) console.warn(\"Please provide :url key for each object in :exportType prop for export buttons to work properly.\");\n      } else {\n        console.warn(\"Please provide :exportType prop as array to show export buttons.\");\n      }\n\n      if (!this.props.exportResponseHandler) console.warn(\"Please provide :exportResponseHandler prop as function to handle export response.\");\n      if (!this.props.setNotification) console.warn(\"Please provide :setNotification prop as function to handle export notification.\");\n      if (!this.props.exportFileName) console.warn(\"Please provide :exportFileName prop as string to set exporting file name. NOTE: Extension is not needed!\");\n    };\n\n    const {\n      tabPriv\n    } = props;\n    const tabPrivConst = props.menuPrivilages ? {\n      \"create\": _.includes(props.privilages, props.menuPrivilages.create),\n      \"edit\": _.includes(props.privilages, props.menuPrivilages.edit),\n      \"delete\": _.includes(props.privilages, props.menuPrivilages.delete),\n      \"download\": _.includes(props.privilages, props.menuPrivilages.download),\n      \"info\": _.includes(props.privilages, props.menuPrivilages.info)\n    } : {};\n    this.tabPriv = Object.assign(tabPrivConst, tabPriv);\n    const dtOpts = {\n      'listUrl': props.listUrl,\n      'isInfiniteScroll': props.isInfiniteScroll,\n      'searchFilters': props.tableSearchFilters,\n      'setState': data => this.setState(data),\n      'listName': props.listName,\n      'rowIdParam': props.rowIdParam,\n      'labelList': props.tableHeaderLabels,\n      'loadingFunction': props.loadingFunction,\n      'makeCallBack': props.ajaxUtil.makeCallBack,\n      'authKey': props.ajaxUtil.getAuthKey(),\n      'channel': props.ajaxUtil.getChannel(),\n      'entity': props.ajaxUtil.getEntity(),\n      'deleteMessage': props.deleteMessage,\n      'deleteMessageParam': props.deleteMessageParam,\n      'apiVersion': props.apiVersion,\n      'postRequestCallback': props.postRequestCallback\n    };\n    this.dataTable = new DataTableUtilsV3(dtOpts);\n    this.state = !props.previousState ? {\n      'keyword': '',\n      'rowCount': props.defaultRowCount || 10,\n      'orderByCol': props.orderByCol,\n      'sort': \"desc\",\n      'modal': 0,\n      'filterParams': {}\n    } : {\n      'modal': 0,\n      'keyword': props.previousState.keyword,\n      'rowCount': props.previousState.rowCount,\n      'orderByCol': props.previousState.orderByCol,\n      'sort': props.previousState.sort,\n      'filterParams': props.previousState.filterParams,\n      \"userChannelType\": props.previousState.userChannelType,\n      \"userEntityType\": props.previousState.userEntityType\n    };\n  }\n\n  componentDidMount() {\n    this.dataTable.load(true, null, true, this.state);\n  }\n\n  componentWillUnmount() {\n    this.props.saveState && this.props.saveState(this.state);\n  }\n\n  render() {\n    let exportProps = {};\n\n    if (this.props.hasExport && this.props.apiVersion == 3) {\n      this.validateExportFunctionality();\n      exportProps = {\n        exportCall: this.dataTable.exportDetails.bind(this, this.state),\n        exportTypes: this.props.exportTypes,\n        exportResponseHandler: this.props.exportResponseHandler,\n        setNotification: this.props.setNotification,\n        exportFileName: this.props.exportFileName,\n        exportLimit: this.props.exportLimit\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, Object.assign({\n      commonSearch: this.state.keyword,\n      changeAttributes: this.dataTable.changeAttributes.bind(this, this.state),\n      totalPages: this.state.totalPages,\n      startRow: this.state.startRow,\n      endRow: this.state.endRow,\n      rowData: this.state.rowData,\n      currentPage: this.state.pageNumber,\n      totalRecords: this.state.totalRecords,\n      labelList: this.props.tableHeaderLabels,\n      isInfiniteScroll: this.props.isInfiniteScroll,\n      actions: this.tabPriv,\n      orderByCol: this.state.orderByCol,\n      sort: this.state.sort,\n      filters: this.state.filters,\n      rowCount: this.state.rowCount,\n      currentRow: this.state.currentRow,\n      highlightRow: this.dataTable.highlightRow,\n      toggleAction: this.togglePopup,\n      searchHelpText: \"Search\",\n      deleteRow: this.deleteRow,\n      filterLabelList: this.props.filterLabelList,\n      header: this.props.header,\n      setPageState: data => this.setState(data),\n      hasExport: this.props.hasExport,\n      tableButtons: this.props.tableButtons,\n      extraButtons: this.props.extraButtons,\n      removeSearch: this.props.removeSearch ? true : false,\n      isInfoFirst: this.props.isInfoFirst ? true : false,\n      onExtraButtonClick: this.handleExtraButtonClick\n    }, exportProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    })), this.props.renderSearchFilter && /*#__PURE__*/React.createElement(Popup, {\n      type: POPUP_ALIGN.CENTER,\n      title: \"Advanced Search\",\n      isOpen: this.state.isSearchPopupOpen,\n      close: this.togglePopup,\n      component: this.props.renderSearchFilter({\n        togglePopup: this.togglePopup,\n        onSearch: this.onSearch,\n        filterParams: this.state.filterParams\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 54\n      }\n    }), this.props.children && this.props.children({\n      loadDataTable: this.loadDataTable\n    }));\n  }\n\n}\nDataTableContainer.defaultProps = {\n  listName: 'content'\n};","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/data-table/elements/dataTable/DataTableContainer.js"],"names":["React","Component","Fragment","_","DataTable","DataTableUtilsV3","Popup","POPUP_ALIGN","FORM_MODAL","DataTableContainer","constructor","props","onSearch","data","setState","dataTable","load","state","loadDataTable","isReset","firstLoad","togglePopup","popupArgs","responseList","getResponseList","SearchFilter","isSearchPopupOpen","handleExtraButtonClick","buttonClickFn","btnArgs","deleteRow","obj","message","deleteCallBack","rowData","length","pageNumber","validateExportFunctionality","exportTypes","hasErrorLabel","hasErrorURL","map","item","label","url","console","warn","exportResponseHandler","setNotification","exportFileName","tabPriv","tabPrivConst","menuPrivilages","includes","privilages","create","edit","delete","download","info","Object","assign","dtOpts","listUrl","isInfiniteScroll","tableSearchFilters","listName","rowIdParam","tableHeaderLabels","loadingFunction","ajaxUtil","makeCallBack","getAuthKey","getChannel","getEntity","deleteMessage","deleteMessageParam","apiVersion","postRequestCallback","previousState","defaultRowCount","orderByCol","keyword","rowCount","sort","filterParams","userChannelType","userEntityType","componentDidMount","componentWillUnmount","saveState","render","exportProps","hasExport","exportCall","exportDetails","bind","exportLimit","changeAttributes","totalPages","startRow","endRow","totalRecords","filters","currentRow","highlightRow","filterLabelList","header","tableButtons","extraButtons","removeSearch","isInfoFirst","renderSearchFilter","CENTER","children","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport { DataTable } from './DataTable';\r\nimport DataTableUtilsV3 from './util/DataTableUtilsV3';\r\nimport { Popup, POPUP_ALIGN } from '@6d-ui/popup';\r\nimport { FORM_MODAL } from '../../constants/ModalTypes';\r\n\r\n\r\nexport default class DataTableContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        \r\n\r\n        const { tabPriv } = props;\r\n\r\n        const tabPrivConst = props.menuPrivilages ? {\r\n            \"create\": _.includes(props.privilages, props.menuPrivilages.create),\r\n            \"edit\": _.includes(props.privilages, props.menuPrivilages.edit),\r\n            \"delete\": _.includes(props.privilages, props.menuPrivilages.delete),\r\n            \"download\": _.includes(props.privilages, props.menuPrivilages.download),\r\n            \"info\": _.includes(props.privilages, props.menuPrivilages.info)\r\n        } : {};\r\n\r\n        this.tabPriv = Object.assign(tabPrivConst, tabPriv);\r\n\r\n        const dtOpts = {\r\n            'listUrl': props.listUrl,\r\n            'isInfiniteScroll': props.isInfiniteScroll,\r\n            'searchFilters': props.tableSearchFilters,\r\n            'setState': data => this.setState(data),\r\n            'listName': props.listName,\r\n            'rowIdParam': props.rowIdParam,\r\n            'labelList': props.tableHeaderLabels,\r\n            'loadingFunction': props.loadingFunction,\r\n            'makeCallBack': props.ajaxUtil.makeCallBack,\r\n            'authKey': props.ajaxUtil.getAuthKey(),\r\n            'channel': props.ajaxUtil.getChannel(),\r\n            'entity':props.ajaxUtil.getEntity(),\r\n            'deleteMessage': props.deleteMessage,\r\n            'deleteMessageParam': props.deleteMessageParam,\r\n            'apiVersion': props.apiVersion,\r\n            'postRequestCallback': props.postRequestCallback\r\n        }\r\n\r\n        this.dataTable = new DataTableUtilsV3(dtOpts) ;\r\n\r\n        this.state = !props.previousState ? {\r\n            'keyword': '',\r\n            'rowCount': props.defaultRowCount || 10,\r\n            'orderByCol': props.orderByCol,\r\n            'sort': \"desc\",\r\n            'modal': 0,\r\n            'filterParams': {}\r\n        } : {\r\n                'modal': 0,\r\n                'keyword': props.previousState.keyword,\r\n                'rowCount': props.previousState.rowCount,\r\n                'orderByCol': props.previousState.orderByCol,\r\n                'sort': props.previousState.sort,\r\n                'filterParams': props.previousState.filterParams,\r\n                \"userChannelType\": props.previousState.userChannelType,\r\n                \"userEntityType\": props.previousState.userEntityType\r\n            };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dataTable.load(true, null, true, this.state);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.saveState && this.props.saveState(this.state);\r\n    }\r\n\r\n    onSearch = data => {\r\n        this.setState({...data});\r\n        this.dataTable.load(true, { \"isAdvanceSearch\": true, \"keyword\": \"\", ...data }, false, this.state);\r\n    }\r\n\r\n    loadDataTable = (isReset, data, firstLoad) => {\r\n        this.dataTable.load(isReset, data, firstLoad, this.state);\r\n    }\r\n\r\n    togglePopup = (...popupArgs) => {\r\n        const responseList = this.dataTable.getResponseList();\r\n        if (popupArgs[0] === FORM_MODAL.SearchFilter)\r\n            this.setState({ isSearchPopupOpen: true })\r\n        else\r\n            this.setState({ isSearchPopupOpen: false })\r\n        this.props.togglePopup(...popupArgs, responseList);\r\n    }\r\n\r\n    handleExtraButtonClick = (buttonClickFn, ...btnArgs) => {\r\n        const responseList = this.dataTable.getResponseList();\r\n        buttonClickFn(responseList, ...btnArgs);\r\n    }\r\n\r\n    deleteRow = (obj, message) => this.props.deleteRow(obj, message, this.deleteCallBack);\r\n\r\n    deleteCallBack = () => {\r\n        if (this.state.rowData && this.state.rowData.length === 1 && this.state.pageNumber !== 1) {\r\n            this.dataTable.load(false, { \"pageNumber\": (this.state.pageNumber - 1) }, false, this.state);\r\n        } else {\r\n            this.dataTable.load(false, { \"pageNumber\": this.state.pageNumber }, false, this.state);\r\n        }\r\n    }\r\n    validateExportFunctionality = () => {   \r\n        if (this.props.exportTypes) {\r\n            let hasErrorLabel = false;\r\n            let hasErrorURL = false;\r\n            this.props.exportTypes.map(item => {\r\n                if (!item.label)\r\n                    hasErrorLabel = true;\r\n                if (!item.url)\r\n                    hasErrorURL = true;\r\n            });\r\n            if (hasErrorLabel)\r\n                console.warn(\"Please provide :label key for each object in :exportType prop to show export buttons.\");\r\n            if (hasErrorURL)\r\n                console.warn(\"Please provide :url key for each object in :exportType prop for export buttons to work properly.\");\r\n        } else {\r\n            console.warn(\"Please provide :exportType prop as array to show export buttons.\");\r\n        }\r\n        if (!this.props.exportResponseHandler)\r\n            console.warn(\"Please provide :exportResponseHandler prop as function to handle export response.\");\r\n        if (!this.props.setNotification)\r\n            console.warn(\"Please provide :setNotification prop as function to handle export notification.\");\r\n        if (!this.props.exportFileName)\r\n            console.warn(\"Please provide :exportFileName prop as string to set exporting file name. NOTE: Extension is not needed!\");\r\n    }\r\n\r\n    render() {\r\n        let exportProps = {};\r\n        if (this.props.hasExport && this.props.apiVersion == 3) {\r\n            this.validateExportFunctionality();\r\n            exportProps = {\r\n                exportCall: this.dataTable.exportDetails.bind(this, this.state),\r\n                exportTypes: this.props.exportTypes,\r\n                exportResponseHandler: this.props.exportResponseHandler,\r\n                setNotification: this.props.setNotification,\r\n                exportFileName: this.props.exportFileName,\r\n                exportLimit:this.props.exportLimit\r\n            }\r\n        }\r\n        return (\r\n            <Fragment>\r\n\r\n                <DataTable\r\n                    commonSearch={this.state.keyword}\r\n                    changeAttributes={this.dataTable.changeAttributes.bind(this, this.state)}\r\n                    totalPages={this.state.totalPages}\r\n                    startRow={this.state.startRow}\r\n                    endRow={this.state.endRow}\r\n                    rowData={this.state.rowData}\r\n                    currentPage={this.state.pageNumber}\r\n                    totalRecords={this.state.totalRecords}\r\n                    labelList={this.props.tableHeaderLabels}\r\n                    isInfiniteScroll={this.props.isInfiniteScroll}\r\n                    actions={this.tabPriv}\r\n                    orderByCol={this.state.orderByCol}\r\n                    sort={this.state.sort}\r\n                    filters={this.state.filters}\r\n                    rowCount={this.state.rowCount}\r\n                    currentRow={this.state.currentRow}\r\n                    highlightRow={this.dataTable.highlightRow}\r\n                    toggleAction={this.togglePopup}\r\n                    searchHelpText=\"Search\"\r\n                    deleteRow={this.deleteRow}\r\n                    filterLabelList={this.props.filterLabelList}\r\n                    header={this.props.header}\r\n                    setPageState={data => this.setState(data)}\r\n                    hasExport={this.props.hasExport}\r\n                    tableButtons={this.props.tableButtons}\r\n                    extraButtons={this.props.extraButtons}\r\n                    removeSearch={this.props.removeSearch ? true : false}\r\n                    isInfoFirst={this.props.isInfoFirst? true : false}\r\n                    onExtraButtonClick={this.handleExtraButtonClick}\r\n                    {...exportProps}\r\n                />\r\n\r\n                {/* Search Filter Popup */}\r\n                {\r\n                    this.props.renderSearchFilter && <Popup\r\n                        type={POPUP_ALIGN.CENTER}\r\n                        title=\"Advanced Search\"\r\n                        isOpen={this.state.isSearchPopupOpen}\r\n                        close={this.togglePopup}\r\n                        component={\r\n                            this.props.renderSearchFilter({\r\n                                togglePopup: this.togglePopup,\r\n                                onSearch: this.onSearch,\r\n                                filterParams: this.state.filterParams\r\n                            })\r\n                        }\r\n                    />\r\n                }\r\n\r\n                {this.props.children && this.props.children({ loadDataTable: this.loadDataTable })}\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nDataTableContainer.defaultProps = {\r\n    listName: 'content'\r\n}"]},"metadata":{},"sourceType":"module"}