{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/util/EnsureLoggedInContainer.js\";\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { setCredentials } from '../components/ajax/index';\nimport { validateLogin } from '../actions';\n\nclass EnsureLoggedInContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    if (this.props.login && this.props.login.isLoggedIn) {\n      setCredentials(this.props.login.userDetails.token, this.props.login.userDetails.userId);\n    }\n  }\n\n  componentWillMount() {\n    if (!this.props.login || !this.props.login.isLoggedIn) {\n      this.props.validateLogin();\n    }\n  }\n\n  render() {\n    const {\n      login\n    } = this.props;\n\n    if (!login || !login.hasOwnProperty(\"isLoggedIn\")) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"index_loaderMain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"index_loaderSub\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sk-folding-cube\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sk-cube1 sk-cube\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sk-cube2 sk-cube\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sk-cube4 sk-cube\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sk-cube3 sk-cube\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }))));\n    }\n    /* if (login && login.userDetails && login.userDetails.forceChangePassword) {\n        return <Redirect to=\"forceChangePassword\" />\n    }else */\n\n\n    if (login.isLoggedIn) {\n      return this.props.children;\n    } else {\n      // return this.props.children\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n} // Grab a reference to the current URL. If this is a web app and you are\n// using React Router, you can use `ownProps` to find the URL. Other\n// platforms (Native) or routing libraries have similar ways to find\n// the current position in the app.\n\n\nfunction mapStateToProps(state, ownProps) {\n  const {\n    login\n  } = state;\n  return {\n    login,\n    isLoading: state.loader.isLoading\n  };\n}\n\nexport default connect(mapStateToProps, {\n  validateLogin\n})(EnsureLoggedInContainer);","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/util/EnsureLoggedInContainer.js"],"names":["connect","Redirect","React","Component","setCredentials","validateLogin","EnsureLoggedInContainer","constructor","props","login","isLoggedIn","userDetails","token","userId","componentWillMount","render","hasOwnProperty","children","mapStateToProps","state","ownProps","isLoading","loader"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,aAAT,QAA8B,YAA9B;;AAEA,MAAMC,uBAAN,SAAsCH,SAAtC,CAAgD;AAC5CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AACA,QAAI,KAAKA,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,UAAzC,EAAqD;AACjDN,MAAAA,cAAc,CAAC,KAAKI,KAAL,CAAWC,KAAX,CAAiBE,WAAjB,CAA6BC,KAA9B,EAAqC,KAAKJ,KAAL,CAAWC,KAAX,CAAiBE,WAAjB,CAA6BE,MAAlE,CAAd;AACH;AACJ;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,QAAI,CAAC,KAAKN,KAAL,CAAWC,KAAZ,IAAqB,CAAC,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,UAA3C,EAAsD;AAClD,WAAKF,KAAL,CAAWH,aAAX;AACH;AACJ;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAACN,MAAAA;AAAD,QAAU,KAAKD,KAArB;;AACA,QAAG,CAACC,KAAD,IAAU,CAACA,KAAK,CAACO,cAAN,CAAqB,YAArB,CAAd,EAAiD;AAC7C,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,eAIE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,CADF,CADF;AAYH;AACD;;;;;AAES,QAAIP,KAAK,CAACC,UAAV,EAAsB;AAC3B,aAAO,KAAKF,KAAL,CAAWS,QAAlB;AACH,KAFQ,MAEF;AACH;AAEA,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AAvC2C,C,CA0ChD;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACtC,QAAM;AAAEX,IAAAA;AAAF,MAAYU,KAAlB;AACA,SAAO;AACHV,IAAAA,KADG;AAEHY,IAAAA,SAAS,EAAEF,KAAK,CAACG,MAAN,CAAaD;AAFrB,GAAP;AAIH;;AAED,eAAerB,OAAO,CAACkB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,uBAA5C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { setCredentials } from '../components/ajax/index';\nimport { validateLogin } from '../actions';\n\nclass EnsureLoggedInContainer extends Component {\n    constructor(props) {\n        super(props);\n        if (this.props.login && this.props.login.isLoggedIn) {\n            setCredentials(this.props.login.userDetails.token, this.props.login.userDetails.userId);\n        }\n    }\n\n    componentWillMount() {\n        if (!this.props.login || !this.props.login.isLoggedIn){\n            this.props.validateLogin();\n        }\n    }\n\n    render() {\n        const {login} = this.props;\n        if(!login || !login.hasOwnProperty(\"isLoggedIn\")){\n            return (\n              <div className=\"index_loaderMain\">\n                <div className=\"index_loaderSub\">\n                  <div className=\"sk-folding-cube\">\n                    <div className=\"sk-cube1 sk-cube\"></div>\n                    <div className=\"sk-cube2 sk-cube\"></div>\n                    <div className=\"sk-cube4 sk-cube\"></div>\n                    <div className=\"sk-cube3 sk-cube\"></div>\n                  </div>\n                </div>\n              </div>\n            );\n        }\n        /* if (login && login.userDetails && login.userDetails.forceChangePassword) {\n            return <Redirect to=\"forceChangePassword\" />\n        }else */ if (login.isLoggedIn) {\n            return this.props.children\n        } else {\n            // return this.props.children\n\n            return <Redirect to=\"/login\" />;\n        }\n    }\n}\n\n// Grab a reference to the current URL. If this is a web app and you are\n// using React Router, you can use `ownProps` to find the URL. Other\n// platforms (Native) or routing libraries have similar ways to find\n// the current position in the app.\nfunction mapStateToProps(state, ownProps) {\n    const { login } = state;\n    return {\n        login,\n        isLoading: state.loader.isLoading\n    }\n}\n\nexport default connect(mapStateToProps, { validateLogin })(EnsureLoggedInContainer)\n"]},"metadata":{},"sourceType":"module"}