{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/module/Modal/SyllabusAdd.js\";\nimport React, { Component } from 'react';\nimport { CONSTANTS } from '../../../util/Constants';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { get, post } from 'axios';\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nconst url_syllabus = CONSTANTS.SYLLABUS;\nexport default class SyllabusAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(e) {\n    e.preventDefault();\n    const isFormValid = this.props.formValidate();\n\n    if (isFormValid) {\n      const response = (await trackPromise(post(url_syllabus.CREATE_URL, this.props.newRecord))).data;\n\n      if (response.status) {\n        this.props.updatePosts();\n        this.props.reset();\n        this.cancelButton.click();\n        toast.success('Success: ' + response.message);\n      } else {\n        toast.success('Error: ' + response.message);\n      } //failure message\n      //  this.props.ajaxUtil.sendRequest(url_syllabus.CREATE_URL, this.props.newRecord, response => {\n      //   if(response.status){\n      //     this.props.updatePosts();\n      //     this.reset();\n      //     this.cancelButton.click()\n      //     toast.success('Success: ' + response.message);\n      //   }else{\n      //     toast.success('Error: ' + response.message);\n      //   }\n      // }, this.props.loadingFunction, { method: 'POST', isShowSuccess: false });\n\n    }\n  }\n\n  render() {\n    const {\n      showAddSyllabusModal,\n      type,\n      subject_name,\n      parent_subject,\n      subject_type_id,\n      description,\n      formRef,\n      isModalDismiss,\n      subject_id\n    } = this.props; // consol.el=${isModalDismiss ? `cancel`: ``}\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `modal cus-Syllabus-modal fade`,\n      \"data-keyboard\": \"false\",\n      \"data-backdrop\": \"static\",\n      id: \"Syllabus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-7 cusoverlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content col-md-5 pzero\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, \"Add Syllabus\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      onClick: () => this.props.cancelModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/images/close.svg\",\n      alt: \"close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"addSyllabusForm\",\n      ref: formRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"formGroupExampleInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, \"Syllabus Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control required\",\n      id: \"formGroupExampleInput\",\n      placeholder: \"Name\",\n      name: \"subject_name\",\n      onChange: this.props.changeHandler.bind(this),\n      value: subject_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control required\",\n      id: \"type\",\n      name: \"type\",\n      onChange: this.props.changeHandler.bind(this),\n      value: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n      key: \"1\",\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"Salesforce\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"hidden\",\n      className: \"form-control required\",\n      id: \"formGroupExampleInput\",\n      placeholder: \"Name\",\n      name: \"parent_subject\",\n      onChange: this.props.changeHandler,\n      value: parent_subject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group form_control_space margin_bottom_1rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"formGroupExampleInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control required custom_textarea\",\n      id: \"formGroupExampleInput\",\n      placeholder: \"Add Description\",\n      name: \"description\",\n      onChange: this.props.changeHandler.bind(this),\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer modal-custom-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger cancel hide\",\n      \"data-dismiss\": \"modal\" // onClick={()=>this.props.cancelModal()}\n      ,\n      ref: cancel => this.cancelButton = cancel,\n      onClick: this.props.reset.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger reset hide\",\n      onClick: this.props.reset.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger add hide\",\n      onClick: event => this.submit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"ADD\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/module/Modal/SyllabusAdd.js"],"names":["React","Component","CONSTANTS","ToastContainer","toast","get","post","trackPromise","usePromiseTracker","url_syllabus","SYLLABUS","SyllabusAdd","constructor","props","submit","bind","e","preventDefault","isFormValid","formValidate","response","CREATE_URL","newRecord","data","status","updatePosts","reset","cancelButton","click","success","message","render","showAddSyllabusModal","type","subject_name","parent_subject","subject_type_id","description","formRef","isModalDismiss","subject_id","cancelModal","process","env","PUBLIC_URL","changeHandler","cancel","event"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { CONSTANTS } from '../../../util/Constants'\nimport { ToastContainer, toast } from 'react-toastify';\nimport { get, post } from 'axios'\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\n\nconst url_syllabus = CONSTANTS.SYLLABUS;\nexport default class SyllabusAdd extends Component {\n  constructor(props) {\n    super(props)\n    this.submit = this.submit.bind(this)\n  }\n  \n  async submit (e) {\n    e.preventDefault();\n    const isFormValid = this.props.formValidate();\n    if (isFormValid) {\n      const response = (await (trackPromise(post(url_syllabus.CREATE_URL,this.props.newRecord)))).data;\n      if(response.status){\n            this.props.updatePosts();\n            this.props.reset();\n            this.cancelButton.click()\n            toast.success('Success: ' + response.message);\n          }else{\n            toast.success('Error: ' + response.message);\n          }\n      //failure message\n      //  this.props.ajaxUtil.sendRequest(url_syllabus.CREATE_URL, this.props.newRecord, response => {\n      //   if(response.status){\n      //     this.props.updatePosts();\n      //     this.reset();\n      //     this.cancelButton.click()\n      //     toast.success('Success: ' + response.message);\n      //   }else{\n      //     toast.success('Error: ' + response.message);\n      //   }\n      // }, this.props.loadingFunction, { method: 'POST', isShowSuccess: false });\n    }\n\n  }\n  \n  \n  render() {\n    const { showAddSyllabusModal, type, subject_name, parent_subject, subject_type_id, description, formRef,isModalDismiss,subject_id } = this.props;\n    // consol.el=${isModalDismiss ? `cancel`: ``}\n    return (\n      <div className={`modal cus-Syllabus-modal fade`} data-keyboard=\"false\" data-backdrop=\"static\" id=\"Syllabus\">\n        {/* <div className={`modal cus-Syllabus-modal fade ${showAddSyllabusModal ? 'show custom-modal-open' : ''}`} style={{ display: `${showAddSyllabusModal ? 'block' : 'none'}` }} id=\"Syllabus\"> */}\n        <div className=\"modal-dialog row\">\n          <div className=\"col-md-7 cusoverlay\"  />\n          <div className=\"modal-content col-md-5 pzero\">\n            {/* Modal Header */}\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">Add Syllabus</h4>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={()=>this.props.cancelModal()}>\n                <img src={process.env.PUBLIC_URL + \"/images/close.svg\"} alt=\"close\" />\n              </button>\n            </div>\n            {/* Modal body */}\n            <div className=\"modal-body\" >\n              <form  id=\"addSyllabusForm\" ref={formRef}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"formGroupExampleInput\">Syllabus Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control required\"\n                    id=\"formGroupExampleInput\"\n                    placeholder=\"Name\" name=\"subject_name\" onChange={this.props.changeHandler.bind(this)} value={subject_name}\n                  />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"type\">Type</label>\n                    <select className=\"form-control required\" id='type' name=\"type\" \n                      onChange={this.props.changeHandler.bind(this)} \n                      value={type}>\n                        <option>Select</option>\n                        <option key=\"1\" value=\"1\">Salesforce</option>\n                        {/* <option key=\"2\" value=\"2\"> HR Training</option> */}\n                    </select>\n                </div>\n      \n                <div className=\"form-group\">\n                  <input\n                    type=\"hidden\"\n                    className=\"form-control required\"\n                    id=\"formGroupExampleInput\"\n                    placeholder=\"Name\" name=\"parent_subject\" onChange={this.props.changeHandler} value={parent_subject}\n                  />\n                </div>\n                <div className=\"form-group form_control_space margin_bottom_1rem\">\n                  <label htmlFor=\"formGroupExampleInput\">Description</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control required custom_textarea\"\n                    id=\"formGroupExampleInput\"\n                    placeholder=\"Add Description\" name=\"description\" onChange={this.props.changeHandler.bind(this)} value={description}\n                  />\n                </div>\n\n                {/* Modal footer */}\n\n              </form>\n            </div>\n            <div className=\"modal-footer modal-custom-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-danger cancel hide\"\n                data-dismiss=\"modal\"\n                // onClick={()=>this.props.cancelModal()}\n                ref={cancel => this.cancelButton = cancel}\n                onClick = {this.props.reset.bind(this)}\n              >\n                Cancel\n              </button>\n              <button type=\"button\" className=\"btn btn-danger reset hide\" onClick={this.props.reset.bind(this)}>\n                Reset\n              </button>\n              <button type=\"button\" className=\"btn btn-danger add hide\" onClick={(event) => this.submit(event)}>\n                ADD\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}