{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/reward/Components/TargetConfiguration.js\";\nimport React, { Fragment, Component, useState, useEffect } from 'react';\nimport { Popup, POPUP_ALIGN } from '@6d-ui/popup';\nimport index from '../../module';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nexport default function TargetConfiguration(props) {\n  const [modalStatus, setModalStatus] = useState(false);\n  const [targetList, setTargetList] = useState([]);\n  const [selectedList, setSelectedList] = useState({});\n\n  const closeModal = () => {\n    setSelectedList({});\n    getTargetConfigurationList();\n    setModalStatus(false);\n  };\n\n  useEffect(() => {\n    getTargetConfigurationList();\n  }, []);\n\n  const openModal = list => {\n    if (list) {\n      setSelectedList(list);\n    }\n\n    setModalStatus(true);\n    getTargetConfigurationList();\n  };\n\n  const deleteConfigList = list => {\n    confirmAlert({\n      title: 'Are you Sure ?',\n      message: '',\n      buttons: [{\n        label: 'Yes',\n        onClick: () => performDelete(list)\n      }, {\n        label: 'No',\n        onClick: () => {}\n      }]\n    });\n  };\n\n  const performDelete = list => {\n    const url = props.url_reward.DELETE_LEVEL_API;\n    props.ajaxUtil.sendRequest(url, {\n      \"config_id\": list.id,\n      \"status\": \"2\"\n    }, response => {\n      props.setNotification({\n        message: response.message,\n        hasError: !response.status,\n        timestamp: new Date().getTime()\n      });\n      getTargetConfigurationList();\n    }, props.loadingFunction, {\n      method: 'POST',\n      isShowSuccess: false\n    });\n  };\n\n  const getTargetConfigurationList = () => {\n    const url = props.url_reward.GET_TARGET_LIST;\n    props.ajaxUtil.sendRequest(url, {}, response => {\n      if (response.hasOwnProperty('data')) {\n        if (response.data != null && response.data.length > 0) {\n          setTargetList(response.data);\n        }\n      }\n    }, props.loadingFunction, {\n      method: 'POST',\n      isShowSuccess: false\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Sub__tab__header mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sub__header__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"All Entries | \", targetList.length), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: openModal,\n    className: \" mr-2 ml-2 add__training__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"+ Add  Level\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sub__header__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchbox \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    placeholder: \"What are you looking for ?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 41\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive training__participant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \" dtable display w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, \"S.No\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, \"Level\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, \"Scoring Parameter\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, targetList.map((list, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, list.reward_levels), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, list.reward_scoring_parameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => openModal(list),\n    className: \"btn btn-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/dms/images/edit.svg\",\n    alt: \"edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deleteConfigList(list),\n    className: \"btn btn-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/dms/images/delete.svg\",\n    alt: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  })))))))))), /*#__PURE__*/React.createElement(Popup, {\n    type: POPUP_ALIGN.RIGHT,\n    title: selectedList.hasOwnProperty(\"id\") ? \"Update Level\" : \"Add Level\",\n    isOpen: modalStatus,\n    close: closeModal,\n    minWidth: \"70%\",\n    component: /*#__PURE__*/React.createElement(AddLevel, {\n      selectedList: selectedList,\n      closeModal: closeModal,\n      ajaxUtil: props.ajaxUtil,\n      loadingFunction: props.loadingFunction,\n      setNotification: props.setNotification,\n      url_reward: props.url_reward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }));\n}\n\nclass AddLevel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reset = () => {\n      this.setState({\n        selectedLevel: \"\",\n        selectedScoringParam: \"\",\n        details: [{\n          type: \"\",\n          value: \"\",\n          data: \"\"\n        }]\n      });\n    };\n\n    this.getLevelData = () => {\n      const url = this.props.url_reward.GET_LEVEL_LIST;\n      this.props.ajaxUtil.sendRequest(url, {}, response => {\n        if (response.hasOwnProperty('data')) {\n          if (response.data != null && response.data.length > 0) {\n            this.setState({\n              levelList: response.data\n            });\n          }\n        }\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.getScoreParams = () => {\n      const url = this.props.url_reward.GET_SCORING_PARAM;\n      this.props.ajaxUtil.sendRequest(url, {}, response => {\n        if (response.hasOwnProperty('data')) {\n          if (response.data != null && response.data.length > 0) {\n            this.setState({\n              scoringParamList: response.data\n            });\n          }\n        }\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.getLeaveTypes = () => {\n      const url = this.props.url_reward.GET_LEVEL_TYPE;\n      this.props.ajaxUtil.sendRequest(url, {}, response => {\n        if (response.hasOwnProperty('data')) {\n          if (response.data != null && response.data.length > 0) {\n            this.setState({\n              levelTypeList: response.data\n            });\n          }\n        }\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.getValue = (id, index) => {\n      const url = this.props.url_reward.GET_VALUE_LIST;\n      this.props.ajaxUtil.sendRequest(url, {\n        \"configuration_id\": id\n      }, response => {\n        if (response.hasOwnProperty('data')) {\n          if (response.data != null && response.data.length > 0) {\n            let valueList = { ...this.state.valueList\n            };\n            valueList[index] = response.data;\n            this.setState({\n              valueList\n            });\n          }\n        }\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.saveForm = () => {\n      let error = false;\n\n      if (this.state.selectedLevel.trim().length <= 0 || this.state.selectedScoringParam.trim().length <= 0) {\n        error = true;\n      }\n\n      this.state.details.forEach(data => {\n        Object.keys(data).forEach(key => {\n          if (data[key].trim().length <= 0) {\n            error = true;\n          }\n        });\n      });\n\n      if (error) {\n        this.props.setNotification({\n          message: 'Please Fill up',\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n        return;\n      }\n\n      let data = {\n        level_id: this.state.selectedLevel,\n        scoring_paramter_id: this.state.selectedScoringParam,\n        value_type: this.state.details.map(data => data.type),\n        value: this.state.details.map(data => data.value),\n        configure_type: this.state.details.map(data => data.data)\n      };\n\n      if (this.props.selectedList.hasOwnProperty(\"id\")) {\n        data['config_id'] = this.props.selectedList[\"id\"];\n      }\n\n      const url = this.props.url_reward.LEVEL_SAVE_API;\n      this.props.ajaxUtil.sendRequest(url, data, response => {\n        this.props.setNotification({\n          message: response.message,\n          hasError: !response.status,\n          timestamp: new Date().getTime()\n        });\n        this.props.closeModal();\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.addRow = () => {\n      let row = [...this.state.details, {\n        type: \"\",\n        value: \"\",\n        data: \"\"\n      }];\n      this.setState({\n        details: row\n      });\n    };\n\n    this.handleData = event => {\n      this.setState({\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    };\n\n    this.removeRow = index => {\n      let row = [...this.state.details];\n      row.splice(index, 1);\n      this.setState({\n        details: row\n      });\n    };\n\n    this.handleRowData = (event, index) => {\n      let row = [...this.state.details];\n      row[index][event.currentTarget.name] = event.currentTarget.value;\n\n      if (event.currentTarget.name == 'type') {\n        this.getValue(event.currentTarget.value, index);\n      }\n\n      this.setState({\n        details: row\n      });\n    };\n\n    this.state = {\n      levelList: [],\n      levelTypeList: [],\n      scoringParamList: [],\n      leaveTypeList: [],\n      valueList: {},\n      selectedLevel: \"\",\n      selectedScoringParam: \"\",\n      details: [{\n        type: \"\",\n        value: \"\",\n        data: \"\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.getLevelData();\n    this.getScoreParams();\n    this.getLeaveTypes();\n\n    if (this.props.selectedList) {\n      if (this.props.selectedList.hasOwnProperty(\"reward_scoring_parameter_id\") && this.props.selectedList.hasOwnProperty(\"reward_levels_id\")) {\n        this.setState({\n          selectedScoringParam: this.props.selectedList['reward_scoring_parameter_id'],\n          selectedLevel: this.props.selectedList['reward_levels_id']\n        });\n      }\n    }\n  } // static getDerivedStateFromProps(nextProps, prevState) {\n  //     if (nextProps.selectedList) {\n  //       console.log(nextProps.selectedList)\n  //       if (nextProps.selectedList.hasOwnProperty(\"reward_scoring_parameter_id\") && nextProps.selectedList.hasOwnProperty(\"reward_levels_id\")) {\n  //         return {\n  //           selectedScoringParam: nextProps.selectedList['reward_scoring_parameter_id'],\n  //           selectedLevel: nextProps.selectedList['reward_levels_id']\n  //         }\n  //       }\n  //   } return {}\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid d-flex flex-column h-100 justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 15\n      }\n    }, \"Add Level\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: e => this.handleData(e),\n      value: this.state.selectedLevel,\n      name: \"selectedLevel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }\n    }, \"Select\"), this.state.levelList.map((level, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: level.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 62\n      }\n    }, level.level))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }, \"Scoring Parameter\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: e => this.handleData(e),\n      value: this.state.selectedScoringParam,\n      name: \"selectedScoringParam\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }\n    }, \"Select\"), this.state.scoringParamList.map((level, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: level.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 69\n      }\n    }, level.parameter))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-md-12 row no-gutter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }\n    }, this.state.details.map((data, index) => /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, \"Level Type\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.handleRowData(e, index),\n      value: data.type,\n      name: \"type\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 23\n      }\n    }, \"Select\"), this.state.levelTypeList.map((level, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: level.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 72\n      }\n    }, level.parameter))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 21\n      }\n    }, \"Value\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: e => this.handleRowData(e, index),\n      value: data.value,\n      name: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 23\n      }\n    }, \"Select\"), this.state.valueList[index] ? this.state.valueList[index].map((level, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: level.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 107\n      }\n    }, level.label)) : /*#__PURE__*/React.createElement(React.Fragment, null)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }\n    }, \"Scoring Data\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      onChange: e => this.handleRowData(e, index),\n      value: data.data,\n      name: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 d-flex justify-content-start align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn ml-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: this.addRow,\n      src: \"/dms/images/plus.svg\",\n      alt: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: () => this.removeRow(index),\n      src: \"/dms/images/minus.svg\",\n      alt: \"remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex text-right justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.closeModal,\n      type: \"button\",\n      className: \"btn btn-danger cancel hide mr-2 ml-2\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.reset,\n      type: \"button\",\n      className: \"btn btn-danger reset hide mr-2 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.saveForm,\n      type: \"button\",\n      className: \"btn btn-danger add hide mr-2 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }\n    }, this.props.selectedList.hasOwnProperty(\"id\") ? \"Update \" : \"Add \")));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/reward/Components/TargetConfiguration.js"],"names":["React","Fragment","Component","useState","useEffect","Popup","POPUP_ALIGN","index","confirmAlert","TargetConfiguration","props","modalStatus","setModalStatus","targetList","setTargetList","selectedList","setSelectedList","closeModal","getTargetConfigurationList","openModal","list","deleteConfigList","title","message","buttons","label","onClick","performDelete","url","url_reward","DELETE_LEVEL_API","ajaxUtil","sendRequest","id","response","setNotification","hasError","status","timestamp","Date","getTime","loadingFunction","method","isShowSuccess","GET_TARGET_LIST","hasOwnProperty","data","length","map","reward_levels","reward_scoring_parameter","RIGHT","AddLevel","constructor","reset","setState","selectedLevel","selectedScoringParam","details","type","value","getLevelData","GET_LEVEL_LIST","levelList","getScoreParams","GET_SCORING_PARAM","scoringParamList","getLeaveTypes","GET_LEVEL_TYPE","levelTypeList","getValue","GET_VALUE_LIST","valueList","state","saveForm","error","trim","forEach","Object","keys","key","level_id","scoring_paramter_id","value_type","configure_type","LEVEL_SAVE_API","addRow","row","handleData","event","currentTarget","name","removeRow","splice","handleRowData","leaveTypeList","componentDidMount","render","e","level","parameter"],"mappings":"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","sourcesContent":["import React, { Fragment, Component, useState, useEffect } from 'react';\nimport { Popup, POPUP_ALIGN } from '@6d-ui/popup';\nimport index from '../../module';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nexport default function TargetConfiguration(props) {\n\n  const [modalStatus, setModalStatus] = useState(false)\n  const [targetList, setTargetList] = useState([])\n  const [selectedList, setSelectedList] = useState({})\n\n  const closeModal = () => {\n    setSelectedList({})\n    getTargetConfigurationList();\n    setModalStatus(false);\n  }\n  useEffect(() => {\n    getTargetConfigurationList();\n  }, [])\n\n  const openModal = (list) => {\n    if (list) {\n      setSelectedList(list)\n    }\n    setModalStatus(true);\n    getTargetConfigurationList();\n  }\n  const deleteConfigList = (list) => {\n    confirmAlert({\n      title: 'Are you Sure ?',\n      message: '',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => performDelete(list)\n        },\n        {\n          label: 'No',\n          onClick: () => { }\n        }\n      ]\n    });\n    \n  }\n  const performDelete = (list) => {\n    const url = props.url_reward.DELETE_LEVEL_API;\n    props.ajaxUtil.sendRequest(url, {\n      \"config_id\": list.id,\n      \"status\": \"2\"\n    }, response => {\n      props.setNotification({\n        message: response.message,\n        hasError: !response.status,\n        timestamp: new Date().getTime()\n      });\n      getTargetConfigurationList();\n    }, props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  const getTargetConfigurationList = () => {\n\n    const url = props.url_reward.GET_TARGET_LIST;\n    props.ajaxUtil.sendRequest(url, {}, response => {\n      if (response.hasOwnProperty('data')) {\n        if (response.data != null && response.data.length > 0) {\n          setTargetList(response.data)\n        }\n      }\n    }, props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"Sub__tab__header mt-3\">\n            <div className=\"sub__header__left\">\n              <h6>All Entries | {targetList.length}</h6>\n              <button\n                onClick={openModal}\n                className=\" mr-2 ml-2 add__training__btn\">\n                + Add \tLevel\n                </button>\n            </div>\n\n            <div className=\"sub__header__right\">\n              <div className=\"searchbox \">\n                <input type=\"search\" placeholder=\"What are you looking for ?\" />\n                <button className=\"btn\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-12\">\n          <div className=\"table-responsive training__participant\">\n            <table className=\" dtable display w-100\">\n              <thead>\n                <tr>\n                  <th>S.No</th>\n                  <th>Level</th>\n                  <th>Scoring Parameter</th>\n                  <th>Edit</th>\n                  <th>Delete</th>\n                </tr>\n              </thead>\n              <tbody>\n                {targetList.map((list, index) => (\n                  <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{list.reward_levels}</td>\n                    <td>{list.reward_scoring_parameter}</td>\n                    <td>\n                      <button\n                        onClick={() => openModal(list)}\n                        className=\"btn btn-action\">\n                        <img src=\"/dms/images/edit.svg\" alt=\"edit\" />\n                      </button>\n                    </td>\n                    <td>\n                      <button onClick={() => deleteConfigList(list)} className=\"btn btn-action\">\n                        <img src=\"/dms/images/delete.svg\" alt=\"delete\" />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <Popup\n        type={POPUP_ALIGN.RIGHT}\n        title={selectedList.hasOwnProperty(\"id\") ? \"Update Level\" : \"Add Level\"}\n        isOpen={modalStatus}\n        close={closeModal}\n        minWidth=\"70%\"\n        component={\n          <AddLevel\n            selectedList={selectedList}\n            closeModal={closeModal}\n            ajaxUtil={props.ajaxUtil}\n            loadingFunction={props.loadingFunction}\n            setNotification={props.setNotification}\n            url_reward={props.url_reward}\n          />\n        }\n\n      />\n    </div>\n  )\n}\n\nclass AddLevel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      levelList: [],\n      levelTypeList: [],\n      scoringParamList: [],\n      leaveTypeList: [],\n      valueList: {},\n      selectedLevel: \"\",\n      selectedScoringParam: \"\",\n      details: [\n        {\n          type: \"\",\n          value: \"\",\n          data: \"\",\n        }\n      ]\n\n    }\n  }\n  reset = () => {\n    this.setState({\n      selectedLevel: \"\",\n      selectedScoringParam: \"\",\n      details: [\n        {\n          type: \"\",\n          value: \"\",\n          data: \"\",\n        }\n      ]\n    });\n  }\n  componentDidMount() {\n    this.getLevelData();\n    this.getScoreParams();\n    this.getLeaveTypes();\n    if (this.props.selectedList) {\n      if (this.props.selectedList.hasOwnProperty(\"reward_scoring_parameter_id\") && this.props.selectedList.hasOwnProperty(\"reward_levels_id\")) {\n        this.setState({\n          selectedScoringParam: this.props.selectedList['reward_scoring_parameter_id'],\n          selectedLevel: this.props.selectedList['reward_levels_id']\n        })\n      }\n    }\n\n  }\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //     if (nextProps.selectedList) {\n  //       console.log(nextProps.selectedList)\n  //       if (nextProps.selectedList.hasOwnProperty(\"reward_scoring_parameter_id\") && nextProps.selectedList.hasOwnProperty(\"reward_levels_id\")) {\n  //         return {\n  //           selectedScoringParam: nextProps.selectedList['reward_scoring_parameter_id'],\n  //           selectedLevel: nextProps.selectedList['reward_levels_id']\n  //         }\n  //       }\n\n  //   } return {}\n  // }\n  getLevelData = () => {\n    const url = this.props.url_reward.GET_LEVEL_LIST;\n    this.props.ajaxUtil.sendRequest(url, {}, response => {\n      if (response.hasOwnProperty('data')) {\n        if (response.data != null && response.data.length > 0) {\n          this.setState({ levelList: response.data })\n        }\n      }\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  getScoreParams = () => {\n    const url = this.props.url_reward.GET_SCORING_PARAM;\n    this.props.ajaxUtil.sendRequest(url, {}, response => {\n      if (response.hasOwnProperty('data')) {\n        if (response.data != null && response.data.length > 0) {\n          this.setState({ scoringParamList: response.data })\n        }\n      }\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  getLeaveTypes = () => {\n    const url = this.props.url_reward.GET_LEVEL_TYPE;\n    this.props.ajaxUtil.sendRequest(url, {}, response => {\n      if (response.hasOwnProperty('data')) {\n        if (response.data != null && response.data.length > 0) {\n          this.setState({ levelTypeList: response.data })\n        }\n      }\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  getValue = (id, index) => {\n    const url = this.props.url_reward.GET_VALUE_LIST;\n    this.props.ajaxUtil.sendRequest(url, {\n      \"configuration_id\": id\n    }, response => {\n      if (response.hasOwnProperty('data')) {\n        if (response.data != null && response.data.length > 0) {\n          let valueList = { ...this.state.valueList };\n          valueList[index] = response.data;\n          this.setState({ valueList })\n        }\n      }\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  saveForm = () => {\n    let error = false;\n    if (this.state.selectedLevel.trim().length <= 0 || this.state.selectedScoringParam.trim().length <= 0) {\n      error = true;\n    }\n    this.state.details.forEach((data) => {\n      Object.keys(data).forEach((key) => {\n        if (data[key].trim().length <= 0) {\n          error = true;\n        }\n      })\n    })\n    if (error) {\n      this.props.setNotification({\n        message: 'Please Fill up',\n        hasError: true,\n        timestamp: new Date().getTime()\n      });\n      return\n    }\n    let data = {\n      level_id: this.state.selectedLevel,\n      scoring_paramter_id: this.state.selectedScoringParam,\n      value_type: this.state.details.map((data) => data.type),\n      value: this.state.details.map((data) => data.value),\n      configure_type: this.state.details.map((data) => data.data),\n\n    }\n    if (this.props.selectedList.hasOwnProperty(\"id\")) {\n      data['config_id'] = this.props.selectedList[\"id\"];\n    }\n    const url = this.props.url_reward.LEVEL_SAVE_API;\n    this.props.ajaxUtil.sendRequest(url, data, response => {\n      this.props.setNotification({\n        message: response.message,\n        hasError: !response.status,\n        timestamp: new Date().getTime()\n      });\n      this.props.closeModal();\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  addRow = () => {\n    let row = [...this.state.details, {\n      type: \"\",\n      value: \"\",\n      data: \"\",\n    }];\n    this.setState({ details: row });\n\n  }\n  handleData = (event) => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value })\n  }\n\n  removeRow = (index) => {\n    let row = [...this.state.details]\n    row.splice(index, 1);\n    this.setState({ details: row });\n  }\n  handleRowData = (event, index) => {\n    let row = [...this.state.details]\n    row[index][event.currentTarget.name] = event.currentTarget.value;\n    if (event.currentTarget.name == 'type') {\n      this.getValue(event.currentTarget.value, index);\n    }\n    this.setState({ details: row });\n  }\n  render() {\n    return (\n      <div className=\"container-fluid d-flex flex-column h-100 justify-content-between\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\" form-group\">\n              <label htmlFor=\"\">Add Level</label>\n              <select\n                className=\"form-control\"\n                onChange={(e) => this.handleData(e)}\n                value={this.state.selectedLevel}\n                name=\"selectedLevel\">\n                <option value=\"\">Select</option>\n                {this.state.levelList.map((level, index) => (<option key={index} value={level.id}>{level.level}</option>))}\n              </select>\n            </div>\n          </div>\n          <div className=\"col-md-12\">\n            <div className=\" form-group\">\n              <label htmlFor=\"\">Scoring Parameter</label>\n              <select\n                className=\"form-control\"\n                onChange={(e) => this.handleData(e)}\n                value={this.state.selectedScoringParam}\n                name=\"selectedScoringParam\">\n                <option value=\"\">Select</option>\n                {this.state.scoringParamList.map((level, index) => (<option key={index} value={level.id}>{level.parameter}</option>))}\n              </select>\n            </div>\n          </div>\n          <div className=\" col-md-12 row no-gutter\">\n            {this.state.details.map((data, index) => (\n              <Fragment key={index}>\n                <div className=\"col-md-3\">\n                  <div className=\" form-group\">\n                    <label htmlFor=\"\">Level Type</label>\n                    <select\n                      onChange={(e) => this.handleRowData(e, index)}\n                      value={data.type}\n                      name=\"type\"\n                      className=\"form-control\">\n                      <option value=\"\">Select</option>\n                      {this.state.levelTypeList.map((level, index) => (<option key={index} value={level.id}>{level.parameter}</option>))}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col-md-3\">\n                  <div className=\" form-group\">\n                    <label htmlFor=\"\">Value</label>\n                    <select className=\"form-control\"\n                      onChange={(e) => this.handleRowData(e, index)}\n                      value={data.value}\n                      name=\"value\">\n                      <option value=\"\">Select</option>\n                      {(this.state.valueList[index]) ? this.state.valueList[index].map((level, index) => (<option key={index} value={level.id}>{level.label}</option>)) : <></>}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\" form-group\">\n                    <label htmlFor=\"\">Scoring Data</label>\n                    <input className=\"form-control\"\n                      onChange={(e) => this.handleRowData(e, index)}\n                      value={data.data}\n                      name=\"data\" />\n                  </div>\n                </div>\n                <div className=\"col-md-2 d-flex justify-content-start align-items-center\">\n                  <button className=\"btn ml-3 \">\n                    <img onClick={this.addRow} src=\"/dms/images/plus.svg\" alt=\"add\" />\n                  </button>\n                  <button className=\"btn\">\n                    <img onClick={() => this.removeRow(index)} src=\"/dms/images/minus.svg\" alt=\"remove\" />\n                  </button>\n                </div>\n              </Fragment>))}\n          </div>\n        </div>\n        <div className=\"d-flex text-right justify-content-end\">\n          <button onClick={this.props.closeModal} type=\"button\" className=\"btn btn-danger cancel hide mr-2 ml-2\" data-dismiss=\"modal\">Cancel</button>\n          <button onClick={this.reset} type=\"button\" className=\"btn btn-danger reset hide mr-2 ml-2\">Reset</button>\n          <button onClick={this.saveForm} type=\"button\" className=\"btn btn-danger add hide mr-2 ml-2\">{this.props.selectedList.hasOwnProperty(\"id\") ? \"Update \" : \"Add \"}</button>\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}