{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/reward/Components/LevelSetup.js\";\nimport React, { Component, Fragment } from 'react';\nexport default class LevelSetup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLevelSetup = () => {\n      const url = this.props.url_reward.GET_LEVEL_LIST;\n      this.props.ajaxUtil.sendRequest(url, {}, response => {\n        if (response.hasOwnProperty('data')) {\n          if (response.data.length >= 1) {\n            const levelDetails = response.data.map(level => ({\n              category: level.category_id,\n              name: level.level\n            }));\n            this.setState({\n              levelDetails: levelDetails,\n              numberLevel: response.data.length,\n              isEdit: true\n            });\n          }\n        }\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.getCategoryList = () => {\n      const url = this.props.url_reward.GET_CATEGORY_LIST + `?status=1`;\n      this.props.ajaxUtil.sendRequest(url, {}, categoryList => {\n        if (categoryList.hasOwnProperty('data')) {\n          if (categoryList.data != null && categoryList.data.length > 0) {\n            this.setState({\n              categoryList: categoryList.data\n            });\n          }\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.handleChange = event => {\n      if (event.currentTarget.value >= 1) {\n        this.setState({\n          numberLevel: event.currentTarget.value\n        });\n\n        if (this.state.levelDetails.length !== event.currentTarget.value) {\n          let levelDetails = [];\n\n          for (let i = 0; i < event.currentTarget.value; i++) {\n            if (typeof this.state.levelDetails[i] === 'undefined') {\n              levelDetails.push({\n                category: \"\",\n                name: \"\"\n              });\n            } else {\n              levelDetails.push(this.state.levelDetails[i]);\n            }\n          }\n\n          this.setState({\n            levelDetails\n          });\n        }\n      }\n    };\n\n    this.handleLevelDetailsChange = (event, index) => {\n      const levelDetails = [...this.state.levelDetails];\n\n      if (levelDetails[index].hasOwnProperty(event.currentTarget.name)) {\n        levelDetails[index][event.currentTarget.name] = event.currentTarget.value;\n      }\n\n      this.setState({\n        levelDetails\n      });\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        numberLevel: \"1\",\n        levelDetails: [{\n          category: \"\",\n          name: \"\"\n        }]\n      });\n    };\n\n    this.save = () => {\n      const length = this.state.numberLevel;\n      let error = false;\n\n      for (let i = 0; i < length; i++) {\n        if (typeof this.state.levelDetails[i] === 'undefined') {\n          error = true;\n        } else {\n          Object.keys(this.state.levelDetails[i]).forEach(key => {\n            if (this.state.levelDetails[i][key].trim().length <= 0) {\n              error = true;\n            }\n          });\n        }\n      }\n\n      if (error) {\n        this.props.setNotification({\n          message: 'Please Fill up',\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n        return;\n      }\n\n      const data = this.state.levelDetails.map(level => ({\n        scoring_level: level.name,\n        category_id: level.category\n      }));\n      let url = this.props.url_reward.SAVE_LEVEL;\n\n      if (this.state.isEdit) {}\n\n      this.props.ajaxUtil.sendRequest(url, data, response => {\n        this.props.setNotification({\n          message: response.message,\n          hasError: !response.status,\n          timestamp: new Date().getTime()\n        });\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.state = {\n      isEdit: false,\n      numberLevel: \"1\",\n      categoryList: [],\n      levelDetails: [{\n        category: \"\",\n        name: \"\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.getCategoryList();\n    this.getLevelSetup();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_level\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"Enter Number of levels \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-lg-6 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"numberLevel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Number of Levels\"), /*#__PURE__*/React.createElement(\"input\", {\n      min: \"1\",\n      value: this.state.numberLevel,\n      type: \"number\",\n      className: \"form-control required\",\n      name: \"numberLevel\",\n      onChange: this.handleChange,\n      placeholder: \"Enter Number of Levels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, \"Level Category\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, this.state.levelDetails.map((level, index) => /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"numberLevel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, \"Level \", index + 1), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"category\",\n      onChange: e => this.handleLevelDetailsChange(e, index),\n      className: \"form-control required Select select-paceholder\",\n      value: level.category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, \"Select\"), this.state.categoryList.map((category, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: category.catid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 74\n      }\n    }, category.level_category))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"numberLevel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, \"Name \", index + 1), /*#__PURE__*/React.createElement(\"input\", {\n      value: level.name,\n      type: \"text\",\n      className: \"form-control required\",\n      name: \"name\",\n      onChange: e => this.handleLevelDetailsChange(e, index),\n      placeholder: \"Enter Number of Levels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 text-right mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.resetForm,\n      type: \"button\",\n      className: \"btn btn-danger btn__fade reset mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.save,\n      type: \"button\",\n      className: \"btn btn-danger btn__fade add next_btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, this.state.isEdit ? 'Update' : 'Add'))));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/reward/Components/LevelSetup.js"],"names":["React","Component","Fragment","LevelSetup","constructor","props","getLevelSetup","url","url_reward","GET_LEVEL_LIST","ajaxUtil","sendRequest","response","hasOwnProperty","data","length","levelDetails","map","level","category","category_id","name","setState","numberLevel","isEdit","loadingFunction","method","isShowSuccess","getCategoryList","GET_CATEGORY_LIST","categoryList","handleChange","event","currentTarget","value","state","i","push","handleLevelDetailsChange","index","resetForm","save","error","Object","keys","forEach","key","trim","setNotification","message","hasError","timestamp","Date","getTime","scoring_level","SAVE_LEVEL","status","componentDidMount","render","e","catid","level_category"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nexport default class LevelSetup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      numberLevel: \"1\",\n      categoryList: [],\n      levelDetails: [{\n        category: \"\",\n        name: \"\",\n      }]\n    }\n  }\n\n  componentDidMount() {\n    this.getCategoryList();\n    this.getLevelSetup();\n  }\n  getLevelSetup = () => {\n    const url = this.props.url_reward.GET_LEVEL_LIST;\n    this.props.ajaxUtil.sendRequest(url, {}, response => {\n      if (response.hasOwnProperty('data')) {\n        if (response.data.length >= 1) {\n          const levelDetails = response.data.map((level) => ({\n            category: level.category_id,\n            name: level.level,\n          }))\n          this.setState({\n            levelDetails: levelDetails,\n            numberLevel: response.data.length,\n            isEdit: true\n          })\n        }\n      }\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  getCategoryList = () => {\n\n    const url = this.props.url_reward.GET_CATEGORY_LIST + `?status=1`;\n    this.props.ajaxUtil.sendRequest(url, {}, categoryList => {\n      if (categoryList.hasOwnProperty('data')) {\n        if (categoryList.data != null && categoryList.data.length > 0) {\n          this.setState({ categoryList: categoryList.data })\n        }\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  handleChange = (event) => {\n    if (event.currentTarget.value >= 1) {\n      this.setState({ numberLevel: event.currentTarget.value });\n      if (this.state.levelDetails.length !== event.currentTarget.value) {\n        let levelDetails = [];\n        for (let i = 0; i < event.currentTarget.value; i++) {\n          if (typeof this.state.levelDetails[i] === 'undefined') {\n            levelDetails.push({\n              category: \"\",\n              name: \"\",\n            })\n          } else {\n            levelDetails.push(this.state.levelDetails[i])\n          }\n        }\n        this.setState({ levelDetails })\n      }\n    }\n  }\n\n  handleLevelDetailsChange = (event, index) => {\n    const levelDetails = [...this.state.levelDetails];\n    if (levelDetails[index].hasOwnProperty(event.currentTarget.name)) {\n      levelDetails[index][event.currentTarget.name] = event.currentTarget.value;\n    }\n    this.setState({ levelDetails });\n  }\n  resetForm = () => {\n    this.setState({\n      numberLevel: \"1\",\n      levelDetails: [{\n        category: \"\",\n        name: \"\",\n      }]\n    })\n  }\n\n  save = () => {\n    const length = this.state.numberLevel;\n    let error = false;\n    for (let i = 0; i < length; i++) {\n      if (typeof this.state.levelDetails[i] === 'undefined') {\n        error = true;\n      } else {\n        Object.keys(this.state.levelDetails[i]).forEach((key) => {\n          if (this.state.levelDetails[i][key].trim().length <= 0) {\n            error = true;\n          }\n        })\n      }\n    }\n    if (error) {\n      this.props.setNotification({\n        message: 'Please Fill up',\n        hasError: true,\n        timestamp: new Date().getTime()\n      });\n      return\n    }\n    const data = this.state.levelDetails.map((level) => ({ scoring_level: level.name, category_id: level.category }))\n    let url = this.props.url_reward.SAVE_LEVEL;\n    if(this.state.isEdit) {\n      \n    }\n    this.props.ajaxUtil.sendRequest(url, data, response => {\n      this.props.setNotification({\n        message: response.message,\n        hasError: !response.status,\n        timestamp: new Date().getTime()\n      });\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"number_level\">\n              <h6>Enter Number of levels </h6>\n              <div className=\"form-group col-lg-6 p-0\">\n                <label htmlFor=\"numberLevel\">Number of Levels</label>\n                <input\n                  min=\"1\"\n                  value={this.state.numberLevel}\n                  type=\"number\" className=\"form-control required\"\n                  name=\"numberLevel\"\n                  onChange={this.handleChange}\n                  placeholder=\"Enter Number of Levels\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12\">\n            <h6>Level Category</h6>\n          </div>\n          <div className=\"col-md-12 row\">\n            {this.state.levelDetails.map((level, index) => (\n              <Fragment key={index}>\n                <div className=\"col-md-6\">\n                  <div className=\"form-group \">\n                    <label htmlFor=\"numberLevel\">Level {index + 1}</label>\n                    <select\n                      name=\"category\"\n                      onChange={(e) => this.handleLevelDetailsChange(e, index)}\n                      className=\"form-control required Select select-paceholder\"\n                      value={level.category}>\n                      <option value=\"\">Select</option>\n                      {this.state.categoryList.map((category, index) => (<option key={index} value={category.catid}>{category.level_category}</option>))}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"form-group \">\n                    <label htmlFor=\"numberLevel\">Name {index + 1}</label>\n                    <input\n                      value={level.name}\n                      type=\"text\"\n                      className=\"form-control required\"\n                      name=\"name\"\n                      onChange={(e) => this.handleLevelDetailsChange(e, index)}\n                      placeholder=\"Enter Number of Levels\" />\n                  </div>\n                </div>\n              </Fragment>\n            ))}\n\n          </div>\n          <div className=\"col-md-12 text-right mt-3\">\n            <button\n              onClick={this.resetForm}\n              type=\"button\"\n              className=\"btn btn-danger btn__fade reset mr-2\">\n              Reset\n\t\t\t\t\t\t</button>\n            <button onClick={this.save} type=\"button\" className=\"btn btn-danger btn__fade add next_btn\">\n              {this.state.isEdit ? 'Update' : 'Add'}\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}