{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/schedule/Training/Master/Components/Location/AddLocation.js\";\nimport React, { Component } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport Geosuggest from 'react-geosuggest';\nimport LocationPicker from 'react-location-picker';\nexport default class AddLocation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reset = () => {\n      this.setState({\n        selectedLocation: {\n          location: '',\n          country: '',\n          state: '',\n          area: '',\n          street: '',\n          house_no: '',\n          pincode: '',\n          lat: '0',\n          lon: '0'\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      const selectedLocation = this.state.selectedLocation;\n      selectedLocation[event.currentTarget.name] = event.currentTarget.value;\n      this.setState({\n        selectedLocation\n      });\n    };\n\n    this.onSuggestSelect = suggest => {\n      console.log(suggest);\n\n      if (suggest === undefined) {\n        return;\n      }\n\n      const selectedLocation = {\n        location: '',\n        country: '',\n        state: '',\n        area: '',\n        street: '',\n        house_no: '',\n        pincode: '',\n        lat: '',\n        lon: ''\n      };\n\n      if (suggest.hasOwnProperty('description')) {\n        selectedLocation.location = suggest.description;\n      }\n\n      if (suggest.hasOwnProperty('location')) {\n        if (suggest.location.hasOwnProperty('lat')) {\n          selectedLocation.lat = suggest.location.lat;\n        }\n\n        if (suggest.location.hasOwnProperty('lng')) {\n          selectedLocation.lon = suggest.location.lng;\n        }\n      }\n\n      if (suggest.hasOwnProperty('gmaps')) {\n        if (suggest.gmaps.hasOwnProperty('address_components')) {\n          if (suggest.gmaps.address_components.length > 0) {\n            suggest.gmaps.address_components.forEach(address => {\n              if (address.hasOwnProperty('types')) {\n                if (Array.isArray(address.types)) {\n                  if (address.types.includes('sublocality_level_1')) {\n                    selectedLocation.street = address.long_name;\n                  }\n\n                  if (address.types.includes('administrative_area_level_2')) {\n                    selectedLocation.area = address.long_name;\n                  }\n\n                  if (address.types.includes('administrative_area_level_1')) {\n                    selectedLocation.state = address.long_name;\n                  }\n\n                  if (address.types.includes('country')) {\n                    selectedLocation.country = address.long_name;\n                  }\n\n                  if (address.types.includes('postal_code')) {\n                    selectedLocation.pincode = address.long_name;\n                  }\n                }\n              }\n            });\n          }\n        }\n      }\n\n      this.setState({\n        selectedLocation\n      });\n    };\n\n    this.saveLocation = () => {\n      let selectedLocation = this.state.selectedLocation;\n      let url = this.props.url_training.ADD_LOCATION;\n\n      if (this.state.isUpdate) {\n        url = this.props.url_training.UPDATE_LOCATION;\n      }\n\n      this.props.ajaxUtil.sendRequest(url, { ...selectedLocation\n      }, status => {\n        this.props.setNotification({\n          message: status.message,\n          hasError: !status,\n          timestamp: new Date().getTime()\n        });\n        this.props.getApprovedLocationList();\n        this.props.closeAddLocationModel();\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.handleLocationChange = suggest => {\n      const selectedLocation = {\n        location: '',\n        country: '',\n        state: '',\n        area: '',\n        street: '',\n        house_no: '',\n        pincode: '',\n        lat: '',\n        lon: ''\n      };\n\n      if (suggest.hasOwnProperty('address')) {\n        selectedLocation.location = suggest.address;\n      }\n\n      if (suggest.hasOwnProperty('position')) {\n        if (suggest.position.hasOwnProperty('lat')) {\n          selectedLocation.lat = suggest.position.lat;\n        }\n\n        if (suggest.position.hasOwnProperty('lng')) {\n          selectedLocation.lon = suggest.position.lng;\n        }\n      }\n\n      if (suggest.hasOwnProperty('places')) {\n        if (Array.isArray(suggest.places) && suggest.places.length > 0) if (suggest.places[0].hasOwnProperty('address_components')) {\n          if (suggest.places[0].address_components.length > 0) {\n            suggest.places[0].address_components.forEach(address => {\n              if (address.hasOwnProperty('types')) {\n                if (Array.isArray(address.types)) {\n                  if (address.types.includes('sublocality_level_1')) {\n                    selectedLocation.street = address.long_name;\n                  }\n\n                  if (address.types.includes('administrative_area_level_2')) {\n                    selectedLocation.area = address.long_name;\n                  }\n\n                  if (address.types.includes('administrative_area_level_1')) {\n                    selectedLocation.state = address.long_name;\n                  }\n\n                  if (address.types.includes('country')) {\n                    selectedLocation.country = address.long_name;\n                  }\n\n                  if (address.types.includes('postal_code')) {\n                    selectedLocation.pincode = address.long_name;\n                  }\n                }\n              }\n            });\n          }\n        }\n      }\n\n      this.setState({\n        selectedLocation\n      });\n    };\n\n    this.state = {\n      geosuggestEl: React.createRef(),\n      isUpdate: false,\n      initialLocation: '',\n      selectedLocation: {\n        location: '',\n        country: '',\n        state: '',\n        area: '',\n        street: '',\n        house_no: '',\n        pincode: '',\n        lat: '0',\n        lon: '0'\n      }\n    };\n  }\n\n  componentDidMount() {\n    const google = window.google;\n    this.setState({\n      initialLocation: new google.maps.LatLng(53.558572, 9.9278215)\n    });\n\n    if (this.props.selectedItem.hasOwnProperty('id')) {\n      this.setState({\n        isUpdate: true\n      });\n      this.setState({\n        selectedLocation: this.props.selectedItem\n      });\n    }\n  }\n\n  render() {\n    const {\n      geosuggestEl,\n      selectedLocation,\n      isUpdate\n    } = this.state;\n    const {\n      onSuggestSelect,\n      handleChange,\n      handleLocationChange,\n      saveLocation,\n      reset\n    } = this;\n    const {\n      closeAddLocationModel\n    } = this.props;\n    const formRef = React.createRef();\n    return /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-7 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__wraper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      ref: formRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Geosuggest, {\n      ref: geosuggestEl,\n      placeholder: \"Search\",\n      onSuggestSelect: onSuggestSelect,\n      location: this.state.initialLocation,\n      radius: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"Enter__manually\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, \"OR Enter manually\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Training\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control required\",\n      name: \"location\",\n      value: selectedLocation.location,\n      onChange: event => handleChange(event),\n      placeholder: \"Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Training\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control required\",\n      name: \"country\",\n      onChange: event => handleChange(event),\n      value: selectedLocation.country,\n      placeholder: \"Country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control required\",\n      name: \"state\",\n      value: selectedLocation.state,\n      onChange: event => handleChange(event),\n      placeholder: \"State\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, \"Area/Localty\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control required\",\n      name: \"area\",\n      value: selectedLocation.area,\n      onChange: event => handleChange(event),\n      placeholder: \"Area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, \"Street\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control required\",\n      name: \"street\",\n      value: selectedLocation.street,\n      onChange: event => handleChange(event),\n      placeholder: \"Street\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, \"House Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control required\",\n      name: \"house_no\",\n      value: selectedLocation.house_no,\n      onChange: event => handleChange(event),\n      placeholder: \"House Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    }, \"Pincode\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: selectedLocation.pincode,\n      className: \"form-control required\",\n      name: \"pincode\",\n      onChange: event => handleChange(event),\n      placeholder: \"House Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-5 col-md-6 m_15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mapouter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gmap_canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(LocationPicker, {\n      containerElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 41\n        }\n      }),\n      mapElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '100vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 35\n        }\n      }),\n      defaultPosition: {\n        lat: 27.9878,\n        lng: 86.9250\n      },\n      radius: 0,\n      zoom: 5,\n      onChange: handleLocationChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer cus-modal-footer-gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal__footer__wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: closeAddLocationModel,\n      className: \"btn btn-danger cancel hide\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: reset,\n      className: \"btn btn-danger reset hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: saveLocation,\n      className: \"btn btn-danger add hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, isUpdate ? 'Update' : 'Add'))))));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/schedule/Training/Master/Components/Location/AddLocation.js"],"names":["React","Component","PerfectScrollbar","Geosuggest","LocationPicker","AddLocation","constructor","props","reset","setState","selectedLocation","location","country","state","area","street","house_no","pincode","lat","lon","handleChange","event","currentTarget","name","value","onSuggestSelect","suggest","console","log","undefined","hasOwnProperty","description","lng","gmaps","address_components","length","forEach","address","Array","isArray","types","includes","long_name","saveLocation","url","url_training","ADD_LOCATION","isUpdate","UPDATE_LOCATION","ajaxUtil","sendRequest","status","setNotification","message","hasError","timestamp","Date","getTime","getApprovedLocationList","closeAddLocationModel","loadingFunction","method","isShowSuccess","handleLocationChange","position","places","geosuggestEl","createRef","initialLocation","componentDidMount","google","window","maps","LatLng","selectedItem","render","formRef","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport Geosuggest from 'react-geosuggest';\nimport LocationPicker from 'react-location-picker';\n\nexport default class AddLocation extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      geosuggestEl: React.createRef(),\n      isUpdate: false,\n      initialLocation: '',\n      selectedLocation: {\n        location: '',\n        country: '',\n        state: '',\n        area: '',\n        street: '',\n        house_no: '',\n        pincode: '',\n        lat: '0',\n        lon: '0'\n      }\n    }\n  }\n  reset = () => {\n    this.setState({selectedLocation:{\n      location: '',\n      country: '',\n      state: '',\n      area: '',\n      street: '',\n      house_no: '',\n      pincode: '',\n      lat: '0',\n      lon: '0'\n    }})\n  }\n  componentDidMount() {\n    const google = window.google;\n    this.setState({ initialLocation: new google.maps.LatLng(53.558572, 9.9278215) })\n    if (this.props.selectedItem.hasOwnProperty('id')) {\n      this.setState({ isUpdate: true });\n      this.setState({ selectedLocation: this.props.selectedItem });\n    }\n  }\n  handleChange = (event) => {\n    const selectedLocation = this.state.selectedLocation;\n    selectedLocation[event.currentTarget.name] = event.currentTarget.value;\n    this.setState({ selectedLocation })\n  };\n  onSuggestSelect = (suggest) => {\n    console.log(suggest)\n    if(suggest === undefined) {\n      return;\n    }\n    const selectedLocation = {\n      location: '',\n      country: '',\n      state: '',\n      area: '',\n      street: '',\n      house_no: '',\n      pincode: '',\n      lat: '',\n      lon: ''\n    }\n    if (suggest.hasOwnProperty('description')) {\n      selectedLocation.location = suggest.description\n    }\n    if (suggest.hasOwnProperty('location')) {\n      if (suggest.location.hasOwnProperty('lat')) {\n        selectedLocation.lat = suggest.location.lat\n      }\n      if (suggest.location.hasOwnProperty('lng')) {\n        selectedLocation.lon = suggest.location.lng\n      }\n    }\n    if (suggest.hasOwnProperty('gmaps')) {\n      if (suggest.gmaps.hasOwnProperty('address_components')) {\n        if (suggest.gmaps.address_components.length > 0) {\n          suggest.gmaps.address_components.forEach((address) => {\n            if (address.hasOwnProperty('types')) {\n              if (Array.isArray(address.types)) {\n                if (address.types.includes('sublocality_level_1')) {\n                  selectedLocation.street = address.long_name\n                }\n                if (address.types.includes('administrative_area_level_2')) {\n                  selectedLocation.area = address.long_name\n                }\n                if (address.types.includes('administrative_area_level_1')) {\n                  selectedLocation.state = address.long_name\n                }\n                if (address.types.includes('country')) {\n                  selectedLocation.country = address.long_name\n                }\n                if (address.types.includes('postal_code')) {\n                  selectedLocation.pincode = address.long_name\n                }\n              }\n            }\n          })\n        }\n      }\n    }\n    this.setState({ selectedLocation });\n  };\n  saveLocation = () => {\n    let selectedLocation = this.state.selectedLocation;\n    let url = this.props.url_training.ADD_LOCATION;\n    if (this.state.isUpdate) {\n      url = this.props.url_training.UPDATE_LOCATION\n    }\n    this.props.ajaxUtil.sendRequest(url, { ...selectedLocation }, status => {\n     \n      this.props.setNotification({\n        message: status.message,\n        hasError: !status,\n        timestamp: new Date().getTime()\n      });\n      this.props.getApprovedLocationList();\n      this.props.closeAddLocationModel();\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n\n  }\n  handleLocationChange = (suggest) => {\n    const selectedLocation = {\n      location: '',\n      country: '',\n      state: '',\n      area: '',\n      street: '',\n      house_no: '',\n      pincode: '',\n      lat: '',\n      lon: ''\n    }\n    if (suggest.hasOwnProperty('address')) {\n      selectedLocation.location = suggest.address\n    }\n    if (suggest.hasOwnProperty('position')) {\n      if (suggest.position.hasOwnProperty('lat')) {\n        selectedLocation.lat = suggest.position.lat\n      }\n      if (suggest.position.hasOwnProperty('lng')) {\n        selectedLocation.lon = suggest.position.lng\n      }\n    }\n    if (suggest.hasOwnProperty('places')) {\n      if (Array.isArray(suggest.places) && suggest.places.length > 0)\n        if (suggest.places[0].hasOwnProperty('address_components')) {\n          if (suggest.places[0].address_components.length > 0) {\n            suggest.places[0].address_components.forEach((address) => {\n              if (address.hasOwnProperty('types')) {\n                if (Array.isArray(address.types)) {\n                  if (address.types.includes('sublocality_level_1')) {\n                    selectedLocation.street = address.long_name\n                  }\n                  if (address.types.includes('administrative_area_level_2')) {\n                    selectedLocation.area = address.long_name\n                  }\n                  if (address.types.includes('administrative_area_level_1')) {\n                    selectedLocation.state = address.long_name\n                  }\n                  if (address.types.includes('country')) {\n                    selectedLocation.country = address.long_name\n                  }\n                  if (address.types.includes('postal_code')) {\n                    selectedLocation.pincode = address.long_name\n                  }\n                }\n              }\n            })\n          }\n        }\n    }\n    this.setState({ selectedLocation });\n  }\n  render() {\n    const { geosuggestEl, selectedLocation, isUpdate } = this.state;\n\n    const { onSuggestSelect, handleChange, handleLocationChange, saveLocation, reset } = this;\n    const { closeAddLocationModel } = this.props;\n    const formRef = React.createRef();\n    return (\n      <PerfectScrollbar>\n        <div className=\"container-fluid\">\n          <div className=\"row mt-2\">\n            <div className=\"col-lg-7 col-md-6\">\n              <div className=\"form__wraper\">\n                <form action=\"\" ref={formRef}>\n                  <div className=\"form-group search\">\n                    <Geosuggest\n                      ref={geosuggestEl}\n                      placeholder=\"Search\"\n                      onSuggestSelect={onSuggestSelect}\n                      location={this.state.initialLocation}\n                      radius=\"0\" />\n                  </div>\n                  <h4 className=\"Enter__manually\">OR Enter manually</h4>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"Training\">Location</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control required\"\n                      name=\"location\"\n                      value={selectedLocation.location}\n                      onChange={(event) => handleChange(event)}\n                      placeholder=\"Location\" />\n                  </div>\n                  <div className=\"form-group\">\n\n                    <label htmlFor=\"Training\">Country</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control required\"\n                      name=\"country\"\n                      onChange={(event) => handleChange(event)}\n                      value={selectedLocation.country}\n                      placeholder=\"Country\" />\n\n                  </div>\n                  <div className=\"form-group\">\n                    <label>State</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control required\"\n                      name=\"state\"\n                      value={selectedLocation.state}\n                      onChange={(event) => handleChange(event)}\n                      placeholder=\"State\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Area/Localty</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control required\"\n                      name=\"area\"\n                      value={selectedLocation.area}\n                      onChange={(event) => handleChange(event)}\n                      placeholder=\"Area\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Street</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control required\"\n                      name=\"street\"\n                      value={selectedLocation.street}\n                      onChange={(event) => handleChange(event)}\n                      placeholder=\"Street\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"\">House Number</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control required\"\n                      name=\"house_no\"\n                      value={selectedLocation.house_no}\n                      onChange={(event) => handleChange(event)}\n                      placeholder=\"House Number\" />\n                  </div>\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">Pincode</label>\n                    <input\n                      type=\"text\"\n                      value={selectedLocation.pincode}\n                      className=\"form-control required\"\n                      name=\"pincode\"\n                      onChange={(event) => handleChange(event)}\n                      placeholder=\"House Number\" />\n                  </div>\n                </form>\n              </div>\n            </div>\n            <div className=\"col-lg-5 col-md-6 m_15\">\n              <div className=\"map\">\n                <div className=\"mapouter\">\n                  <div className=\"gmap_canvas\">\n                    <LocationPicker\n                      containerElement={<div style={{ height: '100%' }} />}\n                      mapElement={<div style={{ height: '100vh' }} />}\n                      defaultPosition={{\n                        lat: 27.9878,\n                        lng: 86.9250\n                      }}\n                      radius={0}\n                      zoom={5}\n                      onChange={handleLocationChange}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"modal-footer cus-modal-footer-gray\">\n              <div className=\"modal__footer__wrap\">\n                <button type=\"button\" onClick={closeAddLocationModel} className=\"btn btn-danger cancel hide\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" onClick={reset} className=\"btn btn-danger reset hide\">Reset</button>\n                <button type=\"button\" onClick={saveLocation} className=\"btn btn-danger add hide\">{isUpdate ? 'Update' : 'Add'}</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PerfectScrollbar>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}