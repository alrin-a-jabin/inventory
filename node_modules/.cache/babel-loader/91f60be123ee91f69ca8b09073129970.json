{"ast":null,"code":"var _jsxFileName = \"/home/alrin/Downloads/INVENTORY22/src/components/inventory/returntest/components/View.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { LABEL_LIST as DataHeader } from \"../utils/DataHeader\";\nimport DataGrid from '../Table'; // import RenderReturnsListTable from './partials/RenderReturnsListTable';\n\nexport default class View extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getReturnList = () => {\n      this.props.ajaxUtil.sendRequest(this.props.url_Inventory.RETURN_FILE_LIST_URL, {}, response => {\n        if (!response.status) {\n          this.props.setNotification({\n            message: response.message,\n            hasError: response.status,\n            timestamp: new Date().getTime()\n          });\n        } else {\n          if (response.hasOwnProperty('data')) {\n            this.setState({\n              returnList: response.data.content\n            });\n            console.log(response.data.content);\n          }\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.handleChange = event => {\n      if (event.currentTarget.value.length <= 0) {\n        this.getReturnList();\n      }\n\n      this.setState({\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    };\n\n    this.onSearch = () => {\n      const url = this.props.url_Inventory.RETURN_FILE_SEARCH_URL;\n      this.props.ajaxUtil.sendRequest(url, [{\n        \"booleanValue\": true,\n        \"fromDate\": null,\n        \"key\": \"iccid\",\n        \"toDate\": null,\n        \"value\": this.state.searchString\n      }], response => {\n        if (!response.status) {\n          this.props.setNotification({\n            message: response.message,\n            hasError: response.status,\n            timestamp: new Date().getTime()\n          });\n        } else {\n          if (response.hasOwnProperty('data')) {\n            this.setState({\n              returnList: response.data.content\n            });\n          }\n        }\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.state = {\n      returnList: [],\n      searchString: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.setHeader(\"ReturnList\");\n    this.getReturnList();\n  }\n\n  render() {\n    const {\n      returnList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab__fileter__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab__filter__left pl-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"all__entries\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"All Entries | \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, this.state.returnList.length.toString().padStart(2, '0'))), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Return file\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab__filter__right pl-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search__form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"searchString\",\n      placeholder: \"Search\",\n      value: this.state.searchString,\n      onChange: this.handleChange,\n      className: \"form-control border__animate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"focus-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      onClick: this.onSearch,\n      className: \"fa fa-search\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter__button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-filter\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive dataTable_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      cols: tableConstants,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }))));\n  }\n\n}\n{\n  /* <div className=\"tab-pane fade\" id=\"Modules\">\n         <div className=\"Modules-txt h-100 \">\n           <div>\n             <div className=\"d-flex col-md-12 align-items-center mb-10\">\n               <h4>All Entities | {modules && modules.length > 0 ? (modules.length < 10 ? `0${modules.length}` : modules.length) : ''} </h4>\n             </div>\n             <div className=\"table-responsive\">\n               <DataGrid\n                 columns={DataTableHeader.RETURNLIST}\n                 data={returnList}\n                 onChangeStatus={(subject_id, status) => this.changeStatus(subject_id, status)}\n                 onOpenModal={(id) => this.onOpenModal(id)}\n                 onEdit={(subject_id) => this.getModuleEdit(subject_id)}\n                 onDelete={(subject_id) => this.deleteModuleConfirm(subject_id)}\n                 onGetList={(id) => this.getMaterials(id)}\n               />\n             </div>\n           </div>\n         </div>\n       </div> */\n}","map":{"version":3,"sources":["/home/alrin/Downloads/INVENTORY22/src/components/inventory/returntest/components/View.js"],"names":["React","Component","Fragment","LABEL_LIST","DataHeader","DataGrid","View","constructor","props","getReturnList","ajaxUtil","sendRequest","url_Inventory","RETURN_FILE_LIST_URL","response","status","setNotification","message","hasError","timestamp","Date","getTime","hasOwnProperty","setState","returnList","data","content","console","log","loadingFunction","method","isShowSuccess","handleChange","event","currentTarget","value","length","name","onSearch","url","RETURN_FILE_SEARCH_URL","state","searchString","componentDidMount","setHeader","render","toString","padStart","tableConstants"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {LABEL_LIST as DataHeader  } from \"../utils/DataHeader\";\nimport DataGrid from '../Table';\n\n\n\n// import RenderReturnsListTable from './partials/RenderReturnsListTable';\nexport default class View extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      returnList: [],\n      searchString: '',\n    }\n  }\n\n  componentDidMount() {\n    this.props.setHeader(\"ReturnList\");\n    this.getReturnList();\n  }\n\n  getReturnList = () => {\n    this.props.ajaxUtil.sendRequest(\n      this.props.url_Inventory.RETURN_FILE_LIST_URL,\n      {},\n      (response) => {\n        if (!response.status) {\n          this.props.setNotification({\n            message: response.message,\n            hasError: response.status,\n            timestamp: new Date().getTime()\n          });\n        } else {\n          if (response.hasOwnProperty('data')) {\n            this.setState({ returnList: response.data.content })\n            console.log(response.data.content)\n          }\n        }\n      },\n      this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false }\n    );\n  }\n\n  handleChange = (event) => {\n    if (event.currentTarget.value.length <= 0) {\n      this.getReturnList();\n    }\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  }\n  onSearch = () => {\n    const url = this.props.url_Inventory.RETURN_FILE_SEARCH_URL;\n    this.props.ajaxUtil.sendRequest(\n      url,\n      [{\n        \"booleanValue\": true,\n        \"fromDate\": null,\n        \"key\": \"iccid\",\n        \"toDate\": null,\n        \"value\": this.state.searchString\n      }],\n      (response) => {\n        if (!response.status) {\n          this.props.setNotification({\n            message: response.message,\n            hasError: response.status,\n            timestamp: new Date().getTime()\n          });\n        } else {\n          if (response.hasOwnProperty('data')) {\n            this.setState({ returnList: response.data.content })\n          }\n        }\n      },\n      this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false }\n    );\n  }\n\n  render() {\n    const {\n        returnList\n      } = this.state;\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"tab__fileter__content\">\n          <div className=\"tab__filter__left pl-0\">\n            <div className=\"all__entries\">\n              All Entries | <span>{(this.state.returnList.length).toString().padStart(2, '0')}</span>\n            </div>\n            <h4>Return file</h4>\n          </div>\n          <div className=\"tab__filter__right pl-0\">\n            <div className=\"form__wrapper\">\n              <div className=\"search__form\">\n                <input\n                  type=\"text\"\n                  name=\"searchString\"\n                  placeholder=\"Search\"\n                  value={this.state.searchString}\n                  onChange={this.handleChange}\n                  className=\"form-control border__animate\"\n                />\n                <span className=\"focus-border\"></span>\n                <i onClick={this.onSearch} className=\"fa fa-search\" aria-hidden=\"true\"></i>\n              </div>\n              <div className=\"filter__button\">\n                <button>\n                  <i className=\"fa fa-filter\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"table-responsive dataTable_wrapper\">\n            <div className=\"table-responsive\">\n              {/* <DataGrid\n                columns={DataHeader.RETURNLIST}\n                rows={returnList}\n                data={returnList}\n                // onChangeStatus={(subject_id, status) => this.changeStatus(subject_id, status)}\n                // onOpenModal={(id) => this.onOpenModal(id)}\n                // onEdit={(subject_id) => this.getModuleEdit(subject_id)}\n                // onDelete={(subject_id) => this.deleteModuleConfirm(subject_id)}\n                // onGetList={(id) => this.getMaterials(id)}\n              /> */}\n                  <Table cols={tableConstants} data={data} />\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n{/* <div className=\"tab-pane fade\" id=\"Modules\">\n        <div className=\"Modules-txt h-100 \">\n          <div>\n            <div className=\"d-flex col-md-12 align-items-center mb-10\">\n              <h4>All Entities | {modules && modules.length > 0 ? (modules.length < 10 ? `0${modules.length}` : modules.length) : ''} </h4>\n            </div>\n            <div className=\"table-responsive\">\n              <DataGrid\n                columns={DataTableHeader.RETURNLIST}\n                data={returnList}\n                onChangeStatus={(subject_id, status) => this.changeStatus(subject_id, status)}\n                onOpenModal={(id) => this.onOpenModal(id)}\n                onEdit={(subject_id) => this.getModuleEdit(subject_id)}\n                onDelete={(subject_id) => this.deleteModuleConfirm(subject_id)}\n                onGetList={(id) => this.getMaterials(id)}\n              />\n            </div>\n          </div>\n        </div>\n      </div> */}"]},"metadata":{},"sourceType":"module"}