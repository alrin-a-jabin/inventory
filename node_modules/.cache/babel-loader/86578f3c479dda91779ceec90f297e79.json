{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/kmsdashboard/Quiz/QuizList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { get, post } from 'axios';\nimport moment from \"moment\";\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { CONSTANTS } from '../../../util/Constants';\nimport Loader from 'react-promise-loader';\nimport * as MENUS from './constants';\nconst url_quiz = CONSTANTS.QUIZ;\nconst url_participants = CONSTANTS.PARTICIPANTS;\n\nclass QuizList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeChannel = async e => {\n      const channel = e.target.value;\n      this.setState({\n        channel\n      });\n\n      try {\n        const region_url = `${url_participants.GET_REGION}?channelId=${channel}&typeId=2`;\n        const regions = (await trackPromise(get(region_url))).data;\n        this.setState({\n          regions,\n          clusters: [],\n          roles: [],\n          users: []\n        });\n      } catch (e) {\n        toast.error(e.message);\n      }\n    };\n\n    this.onChangeRegion = async e => {\n      const region = e.target.value;\n      this.setState({\n        region\n      });\n\n      try {\n        const cluster_url = `${url_participants.GET_CLUSTER}${region}`;\n        const clusters = (await trackPromise(get(cluster_url))).data;\n        this.setState({\n          clusters,\n          roles: [],\n          users: []\n        });\n      } catch (e) {\n        toast.error(e.message);\n      }\n    };\n\n    this.onChangeCluster = async e => {\n      const cluster = e.target.value;\n      this.setState({\n        cluster\n      });\n\n      try {\n        const role_url = `${url_participants.GET_ROLES}`;\n        const roles = (await trackPromise(get(role_url))).data;\n        this.setState({\n          roles,\n          users: []\n        });\n      } catch (e) {\n        toast.error(e.message);\n      }\n    };\n\n    this.onChangeRole = async e => {\n      const role = e.target.value;\n      this.setState({\n        role\n      });\n      const {\n        userDetails\n      } = this.props.login; // console.log('ths,.prpss liing ', this.props.login)\n\n      try {\n        const users_url = `${url_participants.GET_USERS}?designation=${role}&order=desc&page=1&size=0&sort=createdDate`;\n        const users = (await trackPromise(get(users_url, {\n          headers: {\n            Authorization: `Bearer ${userDetails.token}`\n          }\n        }))).data.content;\n        this.setState({\n          users\n        });\n      } catch (e) {\n        toast.error(e.message);\n      }\n    };\n\n    this.onSelectUsers = (selectedList, selectedItem) => {\n      const {\n        selectedUsers\n      } = this.state;\n      selectedUsers.push(selectedItem);\n      this.setState({\n        selectedUsers\n      });\n    };\n\n    this.onRemoveUsers = (selectedList, selectedItem) => {\n      const {\n        selectedUsers\n      } = this.state;\n      const removedIndex = selectedUsers.findIndex(mod => mod.userId === selectedItem.userId);\n      selectedUsers.splice(removedIndex, 1);\n      this.setState({\n        selectedUsers\n      });\n    };\n\n    this.cancel = () => {\n      this.reset();\n      this.setState({\n        openParticipantModal: false\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        regions: [],\n        clusters: [],\n        roles: [],\n        users: [],\n        channel: '',\n        region: '',\n        cluster: '',\n        role: '',\n        user: '',\n        selectedUsers: []\n      });\n    };\n\n    this.submit = async () => {\n      if (this.formValidate()) {\n        const {\n          channel,\n          region,\n          cluster,\n          role,\n          user,\n          selectedUsers,\n          schedule_id\n        } = this.state;\n        const roles = [];\n        selectedUsers.forEach(element => {\n          roles.push(element.id);\n        });\n        const data = {\n          roles,\n          schedule_id,\n          channel,\n          region,\n          cluster,\n          role\n        };\n        const participant = url_participants.CREATE;\n        const isParticipantAdded = (await trackPromise(post(participant, data))).data;\n\n        if (isParticipantAdded.status) {\n          this.reset();\n          this.setState({\n            openParticipantModal: false\n          });\n          toast.success(`Success: ${isParticipantAdded.message}`);\n          this.getQuizList();\n        } else {\n          toast.success(`Error: ${isParticipantAdded.message}`);\n        }\n      }\n    };\n\n    this.formValidate = () => {\n      const {\n        channel,\n        region,\n        cluster,\n        role,\n        selectedUsers\n      } = this.state;\n\n      if (channel == '' || region == '' || cluster == '' || role == '' || selectedUsers.length == 0) {\n        toast.error('Error: All the drop down fields should be selected');\n        return false;\n      }\n\n      return true;\n    };\n\n    this.setAssessmentId = schedule_id => {\n      this.setState({\n        schedule_id,\n        openParticipantModal: true\n      });\n    };\n\n    this.state = {\n      quizList: [],\n      channels: [],\n      regions: [],\n      clusters: [],\n      roles: [],\n      users: [],\n      channel: '',\n      region: '',\n      cluster: '',\n      role: '',\n      user: '',\n      selectedUsers: [],\n      schedule_id: '',\n      openParticipantModal: false,\n      totalQuiz: 0\n    };\n  }\n\n  async componentDidMount() {\n    const material_id = this.props.currentMaterialId;\n    this.getQuizList();\n    const channel_url = url_participants.GET_CHANNEL;\n    this.props.ajaxUtil.sendRequest(channel_url, {}, channels => {\n      this.setState({\n        channels\n      });\n    }, this.props.loadingFunction, {\n      method: 'GET',\n      isShowSuccess: false\n    });\n    const role_url = url_participants.GET_ROLES;\n    this.props.ajaxUtil.sendRequest(role_url, {}, roles => {\n      this.setState({\n        roles\n      });\n    }, this.props.loadingFunction, {\n      method: 'GET',\n      isShowSuccess: false\n    });\n  }\n\n  async getQuizList() {\n    const quizListUrl = `${url_quiz.LIST_URL}?page=1&size=10&sort=material_id&order=desc&status=&material_id=${this.props.currentMaterialId}&keyword=`;\n    this.props.ajaxUtil.sendRequest(quizListUrl, {}, quizList => {\n      this.setState({\n        totalQuiz: quizList.totalElements\n      });\n\n      if (quizList.hasOwnProperty('data')) {\n        if (quizList.data != null && quizList.data.length > 0) {\n          this.setState({\n            quizList: quizList.data\n          });\n        }\n      }\n    }, this.props.loadingFunction, {\n      method: 'GET',\n      isShowSuccess: false\n    }); // try {\n    //   const quizListUrl = `${url_quiz.LIST_URL}?page=1&size=10&sort=material_id&order=desc&status=&material_id=${this.props.currentMaterialId}&keyword=`;\n    //   const quizData = (await (trackPromise(get(quizListUrl)))).data;\n    //   const totalQuiz = quizData.totalElements\n    //   const quizList = quizData.data\n    //   this.setState({ quizList, totalQuiz })\n    // } catch (e) {\n    //   toast.error(e.message);\n    // }\n  }\n\n  quizDataUpdate(menu, id) {\n    this.props.currentMenu(menu);\n    this.props.quizUpdate(id);\n  }\n\n  async statusUpdate(id, subStatus) {\n    const data = {\n      id: id,\n      status: !Number(subStatus)\n    };\n    const quizStatusUrl = url_quiz.UPDATE_STATUS_QUIZ;\n    this.props.ajaxUtil.sendRequest(quizStatusUrl, data, response => {\n      response.statusCode == 200 ? toast.success(response.message) : toast.error(response.message);\n      this.getQuizList();\n    }, this.props.loadingFunction, {\n      method: 'POST',\n      isShowSuccess: false\n    });\n  }\n\n  render() {\n    const {\n      currentMaterialName,\n      currentModuleName\n    } = this.props;\n    const {\n      quizList,\n      channels,\n      regions,\n      cluster,\n      region,\n      channel,\n      clusters,\n      roles,\n      role,\n      users,\n      user,\n      selectedUsers,\n      openParticipantModal,\n      totalQuiz\n    } = this.state;\n    const options = [];\n    users.forEach(user => {\n      const item = {};\n      item.id = user.userId;\n      item.name = `${user.firstName} ${user.lastName}`;\n      options.push(item);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 d-material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainbg cus-pills h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"nav nav-pills\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link active\",\n      \"data-toggle\": \"pill\",\n      href: \"#Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, \"Quiz\")), /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/images/close.svg\",\n      className: \"nav-close\",\n      onClick: () => this.props.currentMenu(MENUS.MATERIAL_MENU),\n      alt: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content pzero  d-material-tabcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-pane active\",\n      id: \"Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Modules-txt h-100 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 41\n      }\n    }, \"Module:\"), \" \", currentModuleName), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 41\n      }\n    }, \"Material:\"), \" \", currentMaterialName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-10 modulesheader mt-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, \"All Entities | \", totalQuiz > 0 ? totalQuiz < 10 ? `0${totalQuiz}` : totalQuiz : 0, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 d-flex align-items-center justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchbox \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"What are you looking for ?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 47\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/images/filter.svg\",\n      alt: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"display dtable\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, \"S.No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }, \"QUIZ ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    }, \"DATE RANGE\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }\n    }, \"PARTICIPANTS\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, quizList ? quizList.map((item, index) => {\n      let startDate = moment(item.start_date, 'YYYY-MM-DD');\n      startDate = startDate.format('DD/MM/YYYY');\n      let startTime = moment(item.start_time, 'HH:mm:ss');\n      startTime = startTime.format('HH:mm');\n      let endDate = moment(item.end_date, 'YYYY-MM-DD');\n      endDate = endDate.format('DD/MM/YYYY');\n      let endTime = moment(item.end_time, 'HH:mm:ss');\n      endTime = endTime.format('HH:mm');\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }\n      }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 29\n        }\n      }, item.assessment_id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }\n      }, `${startDate}-${startTime} to ${endDate}-${endTime}`), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        onClick: () => this.quizDataUpdate(MENUS.PARTICIPANT_MENU, item.assessment_id),\n        className: \"no\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 31\n        }\n      }, item.participant_count ? item.participant_count : 0), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        onClick: () => this.setAssessmentId(item.assessment_id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: process.env.PUBLIC_URL + \"/images/plus.svg\",\n        alt: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 33\n        }\n      }, \"Participants\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-control custom-switch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"custom-control-input\",\n        onChange: () => this.statusUpdate(item.assessment_id, item.status),\n        checked: Number(item.status),\n        id: `status${item.assessment_id}`,\n        name: \"example\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: `status${item.assessment_id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 35\n        }\n      })))));\n    }) : /*#__PURE__*/React.createElement(\"tr\", {\n      colspan: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 28\n      }\n    }, \"No Quiz Found\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tblfooter d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"records d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-selectbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"option-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 27\n      }\n    }, \"01\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"option-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 27\n      }\n    }, \"01\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"option-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 27\n      }\n    }, \"03\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 23\n      }\n    }, \"Records Per Page\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"materialname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 25\n      }\n    }, \"Page\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"materialname\",\n      placeholder: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"materialname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 25\n      }\n    }, \"of 1115\"))), /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"pagination\",\n      \"aria-label\": \"Page navigation example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 56\n      }\n    }, \"First\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 56\n      }\n    }, \"pre\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 51\n      }\n    }, \"1\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 51\n      }\n    }, \"2\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 58\n      }\n    }, \"3\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 51\n      }\n    }, \"Next\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 51\n      }\n    }, \"Last\")))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `modal cus-Syllabus-modal fade ${openParticipantModal ? 'show custom-modal-open' : ''}`,\n      style: {\n        display: `${openParticipantModal ? 'block' : 'none'}`\n      },\n      id: \"Addparticipant\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      promiseTracker: usePromiseTracker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 cusoverlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content col-md-10 pzero\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, \"Add Participant\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      onClick: this.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/images/close.svg\",\n      alt: \"close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 100\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Material Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 25\n      }\n    }, \"Channels\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control required\",\n      name: \"channel\",\n      value: channel,\n      onChange: this.onChangeChannel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"option-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 27\n      }\n    }, \"Select Channel\"), channels && channels.length > 0 ? channels.map(channel => /*#__PURE__*/React.createElement(\"option\", {\n      key: channel.id,\n      value: channel.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 29\n      }\n    }, channel.channelName)) : /*#__PURE__*/React.createElement(\"option\", {\n      value: \"option-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 32\n      }\n    }, \"No data\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Material Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 25\n      }\n    }, \"Region\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control required\",\n      name: \"region\",\n      value: region,\n      onChange: this.onChangeRegion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 25\n      }\n    }, regions && regions.length > 0 ? regions.map(region => /*#__PURE__*/React.createElement(\"option\", {\n      key: region.id,\n      value: region.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 29\n      }\n    }, region.locationName)) : /*#__PURE__*/React.createElement(\"option\", {\n      value: \"option-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 32\n      }\n    }, \"No data\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Material Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 25\n      }\n    }, \"Cluster  \"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control required\",\n      name: \"cluster\",\n      value: cluster,\n      onChange: this.onChangeCluster,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 25\n      }\n    }, clusters && clusters.length > 0 ? clusters.map(cluster => /*#__PURE__*/React.createElement(\"option\", {\n      key: cluster.id,\n      value: cluster.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 29\n      }\n    }, cluster.locationName)) : /*#__PURE__*/React.createElement(\"option\", {\n      value: \"option-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 32\n      }\n    }, \"No data\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Material Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 25\n      }\n    }, \"User Role\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control required\",\n      name: \"role\",\n      value: role,\n      onChange: this.onChangeRole,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 25\n      }\n    }, \">\", /*#__PURE__*/React.createElement(\"option\", {\n      value: \"option-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 25\n      }\n    }, \"Select Role\"), roles && roles.length > 0 ? roles.map(role => /*#__PURE__*/React.createElement(\"option\", {\n      key: role.id,\n      value: role.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 29\n      }\n    }, role.designationName)) : /*#__PURE__*/React.createElement(\"option\", {\n      value: \"option-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 32\n      }\n    }, \"No data\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Material Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 25\n      }\n    }, \"Users\"), /*#__PURE__*/React.createElement(Multiselect, {\n      options: options // Options to display in the dropdown\n      ,\n      closeOnSelect: false // selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n      ,\n      onSelect: this.onSelectUsers // Function will trigger on select event\n      ,\n      onRemove: this.onRemoveUsers // Function will trigger on remove event\n      ,\n      displayValue: \"name\" // Property name to display in the dropdown options\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"drop-area\",\n      className: \"Drag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 25\n      }\n    }, \"Drag & drop your files here\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"fileElem\",\n      multiple: true,\n      accept: \"image/*\",\n      onchange: \"handleFiles(this.files)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"button\",\n      htmlFor: \"fileElem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 25\n      }\n    }, \"Select some files\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 25\n      }\n    }, \"File Format .doc, . Pdf Supported\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filename h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filename-heder d-flex  justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 25\n      }\n    }, \"Filename.doc \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 25\n      }\n    }, \"Remove\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filenameresults \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 25\n      }\n    }, \"Showing \", selectedUsers.length, \" Results\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filename-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 25\n      }\n    }, selectedUsers.length > 0 && selectedUsers.map(user => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filename-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 31\n      }\n    }, user.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 31\n      }\n    }, \"User . ID -\", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 45\n      }\n    }, user.id)))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger cancel\",\n      \"data-dismiss\": \"modal\",\n      onClick: this.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger reset\",\n      onClick: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger add\",\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }\n    }, \"ADD\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentMaterialName: state.dashboard.currentMaterialName,\n    currentModuleId: state.dashboard.currentModuleId,\n    currentModuleName: state.dashboard.currentModuleName,\n    currentMaterialId: state.dashboard.currentMaterialId,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    quizUpdate: id => {\n      dispatch({\n        type: 'quiz',\n        payload: id\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/kmsdashboard/Quiz/QuizList.js"],"names":["React","Component","connect","get","post","moment","trackPromise","usePromiseTracker","ToastContainer","toast","Multiselect","CONSTANTS","Loader","MENUS","url_quiz","QUIZ","url_participants","PARTICIPANTS","QuizList","constructor","props","onChangeChannel","e","channel","target","value","setState","region_url","GET_REGION","regions","data","clusters","roles","users","error","message","onChangeRegion","region","cluster_url","GET_CLUSTER","onChangeCluster","cluster","role_url","GET_ROLES","onChangeRole","role","userDetails","login","users_url","GET_USERS","headers","Authorization","token","content","onSelectUsers","selectedList","selectedItem","selectedUsers","state","push","onRemoveUsers","removedIndex","findIndex","mod","userId","splice","cancel","reset","openParticipantModal","user","submit","formValidate","schedule_id","forEach","element","id","participant","CREATE","isParticipantAdded","status","success","getQuizList","length","setAssessmentId","quizList","channels","totalQuiz","componentDidMount","material_id","currentMaterialId","channel_url","GET_CHANNEL","ajaxUtil","sendRequest","loadingFunction","method","isShowSuccess","quizListUrl","LIST_URL","totalElements","hasOwnProperty","quizDataUpdate","menu","currentMenu","quizUpdate","statusUpdate","subStatus","Number","quizStatusUrl","UPDATE_STATUS_QUIZ","response","statusCode","render","currentMaterialName","currentModuleName","options","item","name","firstName","lastName","process","env","PUBLIC_URL","MATERIAL_MENU","width","map","index","startDate","start_date","format","startTime","start_time","endDate","end_date","endTime","end_time","assessment_id","PARTICIPANT_MENU","participant_count","display","channelName","locationName","designationName","mapStateToProps","dashboard","currentModuleId","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { get, post } from 'axios'\nimport moment from \"moment\"\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { CONSTANTS } from '../../../util/Constants'\nimport Loader from 'react-promise-loader';\n\nimport * as MENUS from './constants';\nconst url_quiz = CONSTANTS.QUIZ;\nconst url_participants = CONSTANTS.PARTICIPANTS;\nclass QuizList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      quizList: [],\n      channels: [],\n      regions: [],\n      clusters: [],\n      roles: [],\n      users: [],\n      channel: '',\n      region: '',\n      cluster: '',\n      role: '',\n      user: '',\n      selectedUsers: [],\n      schedule_id: '',\n      openParticipantModal: false,\n      totalQuiz:0\n    }\n  }\n  async componentDidMount() {\n    const material_id = this.props.currentMaterialId;\n    this.getQuizList()\n\n  const channel_url = url_participants.GET_CHANNEL;\n  this.props.ajaxUtil.sendRequest(channel_url, {}, channels => {\n        this.setState({ channels });\n  }, this.props.loadingFunction,  { method: 'GET', isShowSuccess: false });\n\n  const role_url = url_participants.GET_ROLES;\n  this.props.ajaxUtil.sendRequest(role_url, {}, roles => {\n        this.setState({ roles });\n  }, this.props.loadingFunction,  { method: 'GET', isShowSuccess: false });\n\n  }\n  \n  async getQuizList(){\n\n  const quizListUrl = `${url_quiz.LIST_URL}?page=1&size=10&sort=material_id&order=desc&status=&material_id=${this.props.currentMaterialId}&keyword=`;\n  this.props.ajaxUtil.sendRequest(quizListUrl, {}, quizList => {\n    this.setState({ totalQuiz: quizList.totalElements })\n    if (quizList.hasOwnProperty('data')) {\n      if (quizList.data != null && quizList.data.length > 0) {\n        this.setState({ quizList: quizList.data });\n      }\n    }\n  }, this.props.loadingFunction,  { method: 'GET', isShowSuccess: false });\n\n    // try {\n    //   const quizListUrl = `${url_quiz.LIST_URL}?page=1&size=10&sort=material_id&order=desc&status=&material_id=${this.props.currentMaterialId}&keyword=`;\n    //   const quizData = (await (trackPromise(get(quizListUrl)))).data;\n    //   const totalQuiz = quizData.totalElements\n    //   const quizList = quizData.data\n    //   this.setState({ quizList, totalQuiz })\n    // } catch (e) {\n    //   toast.error(e.message);\n    // }\n  }\n  quizDataUpdate(menu, id) {\n    this.props.currentMenu(menu);\n    this.props.quizUpdate(id);\n  }\n  \n  onChangeChannel = async (e) => {\n    const channel = e.target.value;\n    this.setState({ channel });\n    try {\n      const region_url = `${url_participants.GET_REGION}?channelId=${channel}&typeId=2`;\n      const regions = (await (trackPromise(get(region_url)))).data;\n      this.setState({ regions, clusters:[], roles:[],  users:[] })\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  onChangeRegion = async (e) => {\n    const region = e.target.value;\n    this.setState({ region });\n    try {\n      const cluster_url = `${url_participants.GET_CLUSTER}${region}`;\n      const clusters = (await (trackPromise(get(cluster_url)))).data;\n      this.setState({ clusters,  roles:[],  users:[] })\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  onChangeCluster = async(e) => {\n    const cluster = e.target.value;\n    this.setState({ cluster })\n    try {\n      const role_url = `${url_participants.GET_ROLES}`;\n      const roles = (await (trackPromise(get(role_url)))).data;\n      this.setState({ roles, users:[] })\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  onChangeRole = async (e) => {\n    const role = e.target.value;\n    this.setState({ role });\n    const { userDetails } = this.props.login;\n    // console.log('ths,.prpss liing ', this.props.login)\n    try {\n      const users_url = `${url_participants.GET_USERS}?designation=${role}&order=desc&page=1&size=0&sort=createdDate`;\n      const users = (await (trackPromise(get(users_url, { headers: { Authorization: `Bearer ${userDetails.token}` } })))).data.content;\n      this.setState({ users });\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n  onSelectUsers = (selectedList, selectedItem) => {\n    const { selectedUsers } = this.state;\n    selectedUsers.push(selectedItem);\n    this.setState({ selectedUsers });\n  }\n  onRemoveUsers = (selectedList, selectedItem) => {\n    const { selectedUsers } = this.state;\n    const removedIndex = selectedUsers.findIndex((mod) => mod.userId === selectedItem.userId);\n    selectedUsers.splice(removedIndex, 1);\n    this.setState({ selectedUsers });\n  }\n  cancel = () => {\n    this.reset();\n    this.setState({ openParticipantModal: false })\n  }\n  reset = () => {\n    this.setState({\n      regions: [],\n      clusters: [],\n      roles: [],\n      users: [],\n      channel: '',\n      region: '',\n      cluster: '',\n      role: '',\n      user: '',\n      selectedUsers: []\n    })\n  }\n  submit = async () => {\n    if (this.formValidate()) {\n      const { channel, region, cluster, role, user, selectedUsers, schedule_id } = this.state;\n      const roles = [];\n      selectedUsers.forEach(element => {\n        roles.push(element.id);\n      });\n      const data = {\n        roles,\n        schedule_id,\n        channel,\n        region,\n        cluster,\n        role\n      }\n      const participant = url_participants.CREATE;\n      const isParticipantAdded = (await (trackPromise(post(participant, data)))).data;\n      if (isParticipantAdded.status) {\n        this.reset();\n        this.setState({ openParticipantModal: false })\n        toast.success(`Success: ${isParticipantAdded.message}`);\n        this.getQuizList()\n      } else {\n        toast.success(`Error: ${isParticipantAdded.message}`);\n      }\n    }\n  }\n  formValidate = () => {\n    const { channel, region, cluster, role, selectedUsers } = this.state;\n    if (channel == '' || region == '' || cluster == '' || role == '' || selectedUsers.length == 0) {\n      toast.error('Error: All the drop down fields should be selected');\n      return false;\n    }\n    return true;\n  }\n  setAssessmentId = (schedule_id) => {\n    this.setState({ schedule_id, openParticipantModal: true });\n  }\n\n  async statusUpdate(id, subStatus){\n    const data = { id: id, status:!Number(subStatus) }\n    const quizStatusUrl = url_quiz.UPDATE_STATUS_QUIZ;\n    this.props.ajaxUtil.sendRequest(quizStatusUrl, data, response => {\n      response.statusCode == 200 ? toast.success(response.message) : toast.error(response.message)\n      this.getQuizList();\n    }, this.props.loadingFunction,  { method: 'POST' , isShowSuccess:false });\n    \n  }\n  render() {\n    const { currentMaterialName, currentModuleName } = this.props\n    const { quizList, channels, regions, cluster, region, channel, clusters, roles, role, users,\n      user, selectedUsers, openParticipantModal , totalQuiz } = this.state\n    const options = [];\n    users.forEach((user) => {\n      const item = {};\n      item.id = user.userId;\n      item.name = `${user.firstName} ${user.lastName}`;\n      options.push(item);\n    });\n    return (\n      <div className=\"col-md-12 d-material\">\n        <div className=\"mainbg cus-pills h-100\">\n          <ul className=\"nav nav-pills\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" data-toggle=\"pill\" href=\"#Quiz\">Quiz</a>\n            </li>\n            <img src={process.env.PUBLIC_URL + \"/images/close.svg\"} className=\"nav-close\" onClick={() => this.props.currentMenu(MENUS.MATERIAL_MENU)} alt />\n          </ul>\n          <div className=\"tab-content pzero  d-material-tabcontent\">\n            <div className=\"tab-pane active\" id=\"Quiz\">\n              <div className=\"Modules-txt h-100 \">\n                <div className=\"col-md-12\">\n                  <h4 className=\"title\"><span>Module:</span> {currentModuleName}</h4>\n                  <h4 className=\"title\"><span>Material:</span> {currentMaterialName}</h4>\n                </div>\n                <div className=\"d-flex mb-10 modulesheader mt-30\">\n                  <div className=\"col-md-6 d-flex align-items-center\">\n                    <h4>All Entities | {totalQuiz > 0 ? (totalQuiz < 10 ? `0${totalQuiz}` : totalQuiz) : 0} </h4>\n                  </div>\n                  <div className=\"col-md-6 d-flex align-items-center justify-content-end\">\n                    <div className=\"searchbox \">\n                      <input type=\"search\" placeholder=\"What are you looking for ?\" />\n                      <button className=\"btn\"><i className=\"fa fa-search\" aria-hidden=\"true\" /></button>\n                    </div>\n                    <div className=\"filter\">\n                      <img src={process.env.PUBLIC_URL+\"/images/filter.svg\"} alt=\"filter\" />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"table-responsive\">\n                  <table className=\"display dtable\" style={{ width: '100%' }}>\n                    <thead>\n                      <tr>\n                        <th>S.No</th>\n                        <th>QUIZ ID</th>\n                        <th>DATE RANGE</th>\n                        <th>PARTICIPANTS</th>\n                        <th>Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {quizList ? quizList.map((item, index) => {\n                        let startDate = moment(item.start_date, 'YYYY-MM-DD');\n                        startDate = startDate.format('DD/MM/YYYY');\n                        let startTime = moment(item.start_time, 'HH:mm:ss');\n                        startTime = startTime.format('HH:mm');\n                        let endDate = moment(item.end_date, 'YYYY-MM-DD');\n                        endDate = endDate.format('DD/MM/YYYY');\n                        let endTime = moment(item.end_time, 'HH:mm:ss');\n                        endTime = endTime.format('HH:mm');\n                        return (\n                          <tr>\n                            <td>{index + 1}</td>\n                            <td>{item.assessment_id}</td>\n                            <td>{`${startDate}-${startTime} to ${endDate}-${endTime}`}</td>\n                            <td>\n                              <a href=\"#\" onClick={() => this.quizDataUpdate(MENUS.PARTICIPANT_MENU, item.assessment_id)} className=\"no\">{item.participant_count ? item.participant_count: 0}</a>\n                              <a href=\"#\" onClick={() => this.setAssessmentId(item.assessment_id)}>\n                                <img src={process.env.PUBLIC_URL + \"/images/plus.svg\"} alt />\n                                <span>Participants</span>\n                              </a>\n                            </td>\n                            <td>\n                              <div className>\n                                <div className=\"custom-control custom-switch\">\n                                  <input type=\"checkbox\" className=\"custom-control-input\"\n                                  onChange={() => this.statusUpdate(item.assessment_id, item.status)}\n                                  checked={Number(item.status)} \n                                  id={`status${item.assessment_id}`} name=\"example\" />\n                                  <label className=\"custom-control-label\" htmlFor={`status${item.assessment_id}`} />\n                                </div>\n                              </div>\n                            </td>\n                          </tr>\n                        )\n                      }) : <tr colspan='4'>No Quiz Found</tr>}\n\n                    </tbody>\n                  </table>\n                  <div className=\"tblfooter d-flex\">\n                    <div className=\"records d-flex align-items-center\">\n                      <div className=\"custom-selectbox\">\n                        <select className=\"form-control\" name=\"options\">\n                          <option value=\"option-1\">01</option>\n                          <option value=\"option-2\">01</option>\n                          <option value=\"option-3\">03</option>\n                        </select>\n                      </div>\n                      <label htmlFor>Records Per Page</label>\n                    </div>\n                    <div className=\"page\">\n                      <div className=\"form-group d-flex\">\n                        <label htmlFor=\"materialname\">Page</label>\n                        <input type=\"text\" className=\"form-control\" id=\"materialname\" placeholder />\n                        <label htmlFor=\"materialname\">of 1115</label>\n                      </div>\n                    </div>\n                    <nav className=\"pagination\" aria-label=\"Page navigation example\">\n                      <ul className=\"pagination\">\n                        <li className=\"page-item hide\"><a className=\"page-link\" href=\"#\">First</a></li>\n                        <li className=\"page-item hide\"><a className=\"page-link\" href=\"#\">pre</a></li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">1</a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a>\n                        </li>\n                        <li className=\"page-item active\"><a className=\"page-link\" href=\"#\">3</a></li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">Next</a>\n                        </li>\n                        <li className=\"page-item\"><a className=\"page-link\" href=\"#\">Last</a>\n                        </li>\n                      </ul>\n                    </nav>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className={`modal cus-Syllabus-modal fade ${openParticipantModal ? 'show custom-modal-open' : ''}`} style={{ display: `${openParticipantModal ? 'block' : 'none'}` }} id=\"Addparticipant\">\n         <Loader promiseTracker={usePromiseTracker} />\n          <div className=\"modal-dialog row\">\n            <div className=\"col-md-2 cusoverlay\" />\n            <div className=\"modal-content col-md-10 pzero\">\n              {/* Modal Header */}\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Add Participant</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={this.cancel}><img src={process.env.PUBLIC_URL + \"/images/close.svg\"} alt=\"close\" /></button>\n              </div>\n              {/* Modal body */}\n              <div className=\"modal-body\">\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <form action>\n                      <div className=\" form-group\">\n                        <label htmlFor=\"Material Name\">Channels</label>\n                        <select className=\"form-control required\" name=\"channel\" value={channel} onChange={this.onChangeChannel}>\n                          <option value=\"option-2\">Select Channel</option>\n                          {(channels && channels.length > 0) ? channels.map((channel) => (\n                            <option key={channel.id} value={channel.id}>{channel.channelName}</option>\n                          )) : <option value=\"option-2\">No data</option>}\n                        </select>\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"Material Name\">Region</label>\n                        <select className=\"form-control required\" name=\"region\" value={region} onChange={this.onChangeRegion}>\n                          {(regions && regions.length > 0) ? regions.map((region) => (\n                            <option key={region.id} value={region.id}>{region.locationName}</option>\n                          )) : <option value=\"option-2\">No data</option>}\n                        </select>\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"Material Name\">Cluster  </label>\n                        <select className=\"form-control required\" name=\"cluster\" value={cluster} onChange={this.onChangeCluster}>\n                          {(clusters && clusters.length > 0) ? clusters.map((cluster) => (\n                            <option key={cluster.id} value={cluster.id}>{cluster.locationName}</option>\n                          )) : <option value=\"option-2\">No data</option>}\n                        </select>\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"Material Name\">User Role</label>\n                        <select className=\"form-control required\" name=\"role\" value={role} onChange={this.onChangeRole}>>\n                        <option value=\"option-2\">Select Role</option>\n                          {(roles && roles.length > 0) ? roles.map((role) => (\n                            <option key={role.id} value={role.id}>{role.designationName}</option>\n                          )) : <option value=\"option-2\">No data</option>}\n                        </select>\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"Material Name\">Users</label>\n                        <Multiselect\n                          options={options} // Options to display in the dropdown\n                          closeOnSelect={false}\n                          // selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n                          onSelect={this.onSelectUsers} // Function will trigger on select event\n                          onRemove={this.onRemoveUsers} // Function will trigger on remove event\n                          displayValue=\"name\" // Property name to display in the dropdown options\n                        />\n                      </div>\n                      <div id=\"drop-area\" className=\"Drag\">\n                        <h6>Drag &amp; drop your files here</h6>\n                        <input type=\"file\" id=\"fileElem\" multiple accept=\"image/*\" onchange=\"handleFiles(this.files)\" />\n                        <label className=\"button\" htmlFor=\"fileElem\">Select some files</label>\n                        <p>File Format .doc, . Pdf Supported</p>\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"filename h-100\">\n                      <div className=\"filename-heder d-flex  justify-content-between\">\n                        <h4>Filename.doc </h4>\n                        <span>Remove</span>\n                      </div>\n                      <div className=\"filenameresults \">\n                        <h4>Showing {selectedUsers.length} Results</h4>\n                        <div className=\"filename-body\">\n                          {selectedUsers.length > 0 && selectedUsers.map((user) => (\n                            <div className=\"filename-list\">\n                              <h5>{user.name}</h5>\n                              <p>User . ID -<span>{user.id}</span></p>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Modal footer */}\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger cancel\" data-dismiss=\"modal\" onClick={this.cancel}>Cancel</button>\n                <button type=\"button\" className=\"btn btn-danger reset\" onClick={this.reset}>Reset</button>\n                <button type=\"button\" className=\"btn btn-danger add\" onClick={this.submit}>ADD</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentMaterialName: state.dashboard.currentMaterialName,\n    currentModuleId: state.dashboard.currentModuleId,\n    currentModuleName: state.dashboard.currentModuleName,\n    currentMaterialId: state.dashboard.currentMaterialId,\n    login: state.login\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    quizUpdate:(id) => { dispatch({type: 'quiz', payload:id})},\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)\n"]},"metadata":{},"sourceType":"module"}