{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/schedule/Training/Master/Components/RejectionMessage/RejectionMessage.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Popup, POPUP_ALIGN } from '@6d-ui/popup';\nimport RejectionListTable from './RejectionListTable';\nimport RejectionModal from './RejectionModal';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nexport default class RejectionMessage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onEditFeedbackClick = feedback => {\n      this.setState({\n        selectedFeedback: feedback\n      });\n      this.openAddRejectionMessageModal();\n    };\n\n    this.getRejectionMessageList = () => {\n      const url = this.props.url_training.REJECTION_MESSAGE_LIST + `?page=1&size=15000&sort=id&status=&order=desc&keyword=`;\n      this.props.ajaxUtil.sendRequest(url, {}, rejectionMessage => {\n        this.setState({\n          rejectionMessagePagination: rejectionMessage\n        });\n\n        if (rejectionMessage.hasOwnProperty('data')) {\n          if (rejectionMessage.data != null && rejectionMessage.data.length > 0) {\n            this.setState({\n              rejectionMessageList: rejectionMessage.data\n            });\n          }\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.saveRejectionMessages = messages => {\n      if (messages.length == 1) {\n        if (messages[0].trim().length <= 0) {\n          this.props.setNotification({\n            message: 'Please fill up',\n            hasError: true,\n            timestamp: new Date().getTime()\n          });\n          return;\n        }\n      }\n\n      if (this.state.selectedFeedback.hasOwnProperty('id')) {\n        this.props.ajaxUtil.sendRequest(this.props.url_training.UPDATE_REJECTION_MESSAGE, {\n          message_id: this.state.selectedFeedback.id,\n          messages: messages[0],\n          type: \"Training\"\n        }, status => {\n          let error = true;\n\n          if (status.statusCode == 200) {\n            error = false;\n          }\n\n          this.props.setNotification({\n            message: status.message,\n            hasError: error,\n            timestamp: new Date().getTime()\n          });\n          this.setState({\n            selectedFeedback: {}\n          });\n          this.closeAddRejectionMessageModal();\n          this.getRejectionMessageList();\n        }, this.props.loadingFunction, {\n          method: 'POST',\n          isShowSuccess: false\n        });\n      } else {\n        this.props.ajaxUtil.sendRequest(this.props.url_training.ADD_REJECTION_MESSAGE, {\n          messages: [...messages],\n          type: \"Training\"\n        }, status => {\n          let error = true;\n\n          if (status.statusCode == 200) {\n            error = false;\n          }\n\n          this.props.setNotification({\n            message: status.message,\n            hasError: error,\n            timestamp: new Date().getTime()\n          });\n          this.setState({\n            selectedFeedback: {}\n          });\n          this.closeAddRejectionMessageModal();\n          this.getRejectionMessageList();\n        }, this.props.loadingFunction, {\n          method: 'POST',\n          isShowSuccess: false\n        });\n      }\n    };\n\n    this.openAddRejectionMessageModal = () => {\n      this.setState({\n        addRejectionMessageModal: true\n      });\n    };\n\n    this.closeAddRejectionMessageModal = () => {\n      this.setState({\n        addRejectionMessageModal: false\n      });\n    };\n\n    this.updateStatus = (status, id) => {\n      this.props.ajaxUtil.sendRequest(this.props.url_training.UPDATE_REJECTION_MESSAGE_STATUS, {\n        message_id: id,\n        status: status ? '1' : '0'\n      }, trainingList => {\n        let error = true;\n\n        if (trainingList.statusCode == 200) {\n          error = false;\n          this.getRejectionMessageList();\n        }\n\n        this.props.setNotification({\n          message: trainingList.message,\n          hasError: error,\n          timestamp: new Date().getTime()\n        });\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.deleteRejectionMessage = id => {\n      confirmAlert({\n        title: 'Are you Sure ?',\n        message: '',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => this.performDelete(id)\n        }, {\n          label: 'No',\n          onClick: () => {}\n        }]\n      });\n    };\n\n    this.performDelete = id => {\n      this.props.ajaxUtil.sendRequest(this.props.url_training.UPDATE_REJECTION_MESSAGE_STATUS, {\n        message_id: id,\n        status: '2'\n      }, trainingList => {\n        let error = true;\n\n        if (trainingList.statusCode == 200) {\n          error = false;\n          this.getRejectionMessageList();\n        }\n\n        this.props.setNotification({\n          message: trainingList.message,\n          hasError: error,\n          timestamp: new Date().getTime()\n        });\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.state = {\n      addRejectionMessageModal: false,\n      selectedFeedback: {},\n      rejectionMessagePagination: {},\n      rejectionMessageList: []\n    };\n  }\n\n  componentDidMount() {\n    this.getRejectionMessageList();\n    this.props.setActive('rejection-message');\n  }\n\n  render() {\n    const {\n      selectedFeedback,\n      addRejectionMessageModal,\n      rejectionMessageList\n    } = this.state;\n    const {\n      onEditFeedbackClick,\n      openAddRejectionMessageModal,\n      closeAddRejectionMessageModal,\n      saveRejectionMessages,\n      updateStatus,\n      deleteRejectionMessage\n    } = this;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Sub__tab__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sub__header__left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"All Entries | 01\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: openAddRejectionMessageModal,\n      className: \"add__training__btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"Add Rejection Message\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sub__header__right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchbox \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"What are you looking for ?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/dms/images/filter.svg\",\n      alt: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(RejectionListTable, {\n      updateStatus: updateStatus,\n      onEditFeedbackClick: onEditFeedbackClick,\n      deleteRejectionMessage: deleteRejectionMessage,\n      rejectionMessageList: rejectionMessageList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Popup, {\n      type: POPUP_ALIGN.RIGHT,\n      title: selectedFeedback.hasOwnProperty('id') ? \"Update Rejection Message\" : \"Add Rejection Message\",\n      isOpen: addRejectionMessageModal,\n      close: closeAddRejectionMessageModal,\n      minWidth: \"50%\",\n      component: /*#__PURE__*/React.createElement(RejectionModal, {\n        saveRejectionMessages: saveRejectionMessages,\n        selectedFeedback: selectedFeedback,\n        closeAddRejectionMessageModal: closeAddRejectionMessageModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }) // <div></div>\n      // <AddEditTrainingType\n      //   selectedTrainingType={selectedTrainingType}\n      //   isUpdate={isUpdate}\n      //   handleChange={handleChange}\n      //   addAndUpdateTrainingType={addAndUpdateTrainingType}\n      // />\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/schedule/Training/Master/Components/RejectionMessage/RejectionMessage.js"],"names":["React","Component","Fragment","Popup","POPUP_ALIGN","RejectionListTable","RejectionModal","confirmAlert","RejectionMessage","constructor","props","onEditFeedbackClick","feedback","setState","selectedFeedback","openAddRejectionMessageModal","getRejectionMessageList","url","url_training","REJECTION_MESSAGE_LIST","ajaxUtil","sendRequest","rejectionMessage","rejectionMessagePagination","hasOwnProperty","data","length","rejectionMessageList","loadingFunction","method","isShowSuccess","saveRejectionMessages","messages","trim","setNotification","message","hasError","timestamp","Date","getTime","state","UPDATE_REJECTION_MESSAGE","message_id","id","type","status","error","statusCode","closeAddRejectionMessageModal","ADD_REJECTION_MESSAGE","addRejectionMessageModal","updateStatus","UPDATE_REJECTION_MESSAGE_STATUS","trainingList","deleteRejectionMessage","title","buttons","label","onClick","performDelete","componentDidMount","setActive","render","RIGHT"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Popup, POPUP_ALIGN } from '@6d-ui/popup';\nimport RejectionListTable from './RejectionListTable';\nimport RejectionModal from './RejectionModal';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nexport default class RejectionMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addRejectionMessageModal: false,\n      selectedFeedback: {},\n      rejectionMessagePagination: {},\n      rejectionMessageList: []\n    }\n  }\n\n  componentDidMount() {\n    this.getRejectionMessageList();\n    this.props.setActive('rejection-message');\n\n  }\n  onEditFeedbackClick = (feedback) => {\n    this.setState({ selectedFeedback: feedback });\n    this.openAddRejectionMessageModal();\n  }\n  getRejectionMessageList = () => {\n    const url = this.props.url_training.REJECTION_MESSAGE_LIST + `?page=1&size=15000&sort=id&status=&order=desc&keyword=`;\n    this.props.ajaxUtil.sendRequest(url, {}, rejectionMessage => {\n      this.setState({ rejectionMessagePagination: rejectionMessage })\n      if (rejectionMessage.hasOwnProperty('data')) {\n        if (rejectionMessage.data != null && rejectionMessage.data.length > 0) {\n          this.setState({ rejectionMessageList: rejectionMessage.data });\n        }\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  saveRejectionMessages = (messages) => {\n\n    if (messages.length == 1) {\n      if (messages[0].trim().length <= 0) {\n        this.props.setNotification({\n          message: 'Please fill up',\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n        return;\n      }\n    }\n    if (this.state.selectedFeedback.hasOwnProperty('id')) {\n\n      this.props.ajaxUtil.sendRequest(this.props.url_training.UPDATE_REJECTION_MESSAGE, { message_id: this.state.selectedFeedback.id, messages: messages[0], type: \"Training\" }, status => {\n        let error = true;\n        if (status.statusCode == 200) {\n          error = false;\n        }\n        this.props.setNotification({\n          message: status.message,\n          hasError: error,\n          timestamp: new Date().getTime()\n        });\n        this.setState({ selectedFeedback: {} })\n        this.closeAddRejectionMessageModal();\n        this.getRejectionMessageList();\n\n      }, this.props.loadingFunction,\n        { method: 'POST', isShowSuccess: false });\n    } else {\n      this.props.ajaxUtil.sendRequest(this.props.url_training.ADD_REJECTION_MESSAGE, { messages: [...messages], type: \"Training\" }, status => {\n        let error = true;\n        if (status.statusCode == 200) {\n          error = false;\n        }\n        this.props.setNotification({\n          message: status.message,\n          hasError: error,\n          timestamp: new Date().getTime()\n        });\n        this.setState({ selectedFeedback: {} })\n        this.closeAddRejectionMessageModal();\n        this.getRejectionMessageList();\n\n      }, this.props.loadingFunction,\n        { method: 'POST', isShowSuccess: false });\n    }\n\n\n\n  }\n  openAddRejectionMessageModal = () => {\n    this.setState({ addRejectionMessageModal: true });\n  }\n  closeAddRejectionMessageModal = () => {\n    this.setState({ addRejectionMessageModal: false });\n  }\n  updateStatus = (status, id) => {\n    this.props.ajaxUtil.sendRequest(this.props.url_training.UPDATE_REJECTION_MESSAGE_STATUS, {\n      message_id: id,\n      status: status ? '1' : '0'\n    }, trainingList => {\n      let error = true;\n      if (trainingList.statusCode == 200) {\n        error = false\n        this.getRejectionMessageList();\n      }\n      this.props.setNotification({\n        message: trainingList.message,\n        hasError: error,\n        timestamp: new Date().getTime()\n      })\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  deleteRejectionMessage = (id) => {\n    confirmAlert({\n      title: 'Are you Sure ?',\n      message: '',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.performDelete(id)\n        },\n        {\n          label: 'No',\n          onClick: () => { }\n        }\n      ]\n    });\n\n  }\n  performDelete = (id) => {\n    this.props.ajaxUtil.sendRequest(this.props.url_training.UPDATE_REJECTION_MESSAGE_STATUS, {\n      message_id: id,\n      status: '2'\n    }, trainingList => {\n      let error = true;\n      if (trainingList.statusCode == 200) {\n        error = false\n        this.getRejectionMessageList();\n      }\n      this.props.setNotification({\n        message: trainingList.message,\n        hasError: error,\n        timestamp: new Date().getTime()\n      })\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  render() {\n    const { selectedFeedback, addRejectionMessageModal, rejectionMessageList } = this.state;\n    const { onEditFeedbackClick, openAddRejectionMessageModal, closeAddRejectionMessageModal, saveRejectionMessages, updateStatus, deleteRejectionMessage } = this;\n    return (\n      <Fragment>\n        <div className=\"Sub__tab__header\">\n          <div className=\"sub__header__left\">\n            <h4>All Entries | 01</h4>\n            <button onClick={openAddRejectionMessageModal} className=\"add__training__btn\">\n              Add Rejection Message\n          </button>\n          </div>\n          <div className=\"sub__header__right\">\n            <div className=\"searchbox \">\n              <input type=\"search\" placeholder=\"What are you looking for ?\" />\n              <button className=\"btn\" >\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n            <div className=\"filter\">\n              <img src=\"/dms/images/filter.svg\" alt=\"filter\" />\n            </div>\n          </div>\n        </div>\n        <RejectionListTable\n          updateStatus={updateStatus}\n          onEditFeedbackClick={onEditFeedbackClick}\n          deleteRejectionMessage={deleteRejectionMessage}\n          rejectionMessageList={rejectionMessageList} />\n        <Popup\n          type={POPUP_ALIGN.RIGHT}\n          title={selectedFeedback.hasOwnProperty('id') ? \"Update Rejection Message\" : \"Add Rejection Message\"}\n          isOpen={addRejectionMessageModal}\n          close={closeAddRejectionMessageModal}\n          minWidth=\"50%\"\n          component={\n            <RejectionModal\n              saveRejectionMessages={saveRejectionMessages}\n              selectedFeedback={selectedFeedback}\n              closeAddRejectionMessageModal={closeAddRejectionMessageModal} />\n            // <div></div>\n            // <AddEditTrainingType\n            //   selectedTrainingType={selectedTrainingType}\n            //   isUpdate={isUpdate}\n            //   handleChange={handleChange}\n            //   addAndUpdateTrainingType={addAndUpdateTrainingType}\n            // />\n          }\n        />\n      </Fragment>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}