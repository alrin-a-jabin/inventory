{"ast":null,"code":"import _ from 'lodash';\nimport { SET_LOADING, LOGIN } from '../util/ActionConstants';\nexport default function (state = {\n  activeLoaders: []\n}, action) {\n  switch (action.type) {\n    case SET_LOADING:\n      // if (!action.payload.isLoading && state.timestamp && state.timestamp === action.payload.timestamp)\n      //   return action.payload;\n      // else if (!action.payload.isLoading)\n      //   return state;\n      // else\n      //   return action.payload;\n      const activeLoaders = [...(state.activeLoaders || [])];\n\n      if (action.payload.isLoading) {\n        if (action.payload.timestamp) {\n          activeLoaders.push(action.payload.timestamp);\n        }\n\n        return {\n          isLoading: true,\n          activeLoaders\n        };\n      } else {\n        if (action.payload.timestamp) {\n          _.remove(activeLoaders, loaderId => loaderId === action.payload.timestamp);\n        }\n\n        const isLoading = activeLoaders.length > 0 ? true : false;\n        return {\n          isLoading,\n          activeLoaders\n        };\n      }\n\n    case LOGIN:\n      return {\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/alrin/Downloads/INVENTORY22/src/reducers/reducer_loader.js"],"names":["_","SET_LOADING","LOGIN","state","activeLoaders","action","type","payload","isLoading","timestamp","push","remove","loaderId","length"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,yBAAnC;AAEA,eAAe,UAAUC,KAAK,GAAG;AAAEC,EAAAA,aAAa,EAAE;AAAjB,CAAlB,EAAyCC,MAAzC,EAAiD;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,WAAL;AAEI;AACA;AACA;AACA;AACA;AACA;AAEA,YAAMG,aAAa,GAAG,CAAC,IAAID,KAAK,CAACC,aAAN,IAAuB,EAA3B,CAAD,CAAtB;;AAEA,UAAIC,MAAM,CAACE,OAAP,CAAeC,SAAnB,EAA8B;AAC1B,YAAIH,MAAM,CAACE,OAAP,CAAeE,SAAnB,EAA8B;AAC1BL,UAAAA,aAAa,CAACM,IAAd,CAAmBL,MAAM,CAACE,OAAP,CAAeE,SAAlC;AACH;;AACD,eAAO;AAAED,UAAAA,SAAS,EAAE,IAAb;AAAmBJ,UAAAA;AAAnB,SAAP;AACH,OALD,MAKO;AACH,YAAIC,MAAM,CAACE,OAAP,CAAeE,SAAnB,EAA8B;AAC1BT,UAAAA,CAAC,CAACW,MAAF,CAASP,aAAT,EAAwBQ,QAAQ,IAAIA,QAAQ,KAAKP,MAAM,CAACE,OAAP,CAAeE,SAAhE;AACH;;AACD,cAAMD,SAAS,GAAGJ,aAAa,CAACS,MAAd,GAAuB,CAAvB,GAA2B,IAA3B,GAAkC,KAApD;AACA,eAAO;AAAEL,UAAAA,SAAF;AAAaJ,UAAAA;AAAb,SAAP;AACH;;AAEL,SAAKF,KAAL;AACI,aAAO;AAAEM,QAAAA,SAAS,EAAE;AAAb,OAAP;;AAEJ;AACI,aAAOL,KAAP;AA7BR;AA+BH","sourcesContent":["import _ from 'lodash';\r\n\r\nimport { SET_LOADING, LOGIN } from '../util/ActionConstants';\r\n\r\nexport default function (state = { activeLoaders: [] }, action) {\r\n    switch (action.type) {\r\n        case SET_LOADING:\r\n\r\n            // if (!action.payload.isLoading && state.timestamp && state.timestamp === action.payload.timestamp)\r\n            //   return action.payload;\r\n            // else if (!action.payload.isLoading)\r\n            //   return state;\r\n            // else\r\n            //   return action.payload;\r\n\r\n            const activeLoaders = [...(state.activeLoaders || [])];\r\n            \r\n            if (action.payload.isLoading) {\r\n                if (action.payload.timestamp) {\r\n                    activeLoaders.push(action.payload.timestamp);\r\n                }\r\n                return { isLoading: true, activeLoaders }\r\n            } else {\r\n                if (action.payload.timestamp) {\r\n                    _.remove(activeLoaders, loaderId => loaderId === action.payload.timestamp)\r\n                }\r\n                const isLoading = activeLoaders.length > 0 ? true : false;\r\n                return { isLoading, activeLoaders }\r\n            }\r\n\r\n        case LOGIN:\r\n            return { isLoading: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}