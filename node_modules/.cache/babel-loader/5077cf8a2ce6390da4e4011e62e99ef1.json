{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/module/Modal/Question/AddQuestion.js\";\nimport React, { useState, useEffect } from 'react';\nimport { CONSTANTS } from '../../../../util/Constants';\nimport { toast } from 'react-toastify';\nimport { post } from 'axios';\nimport readXlsxFile from 'read-excel-file';\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport { data } from 'jquery';\nconst noOfanswerOptions = 4;\nconst url_questions = CONSTANTS.QUESTION;\n\nconst AddQuestion = props => {\n  const {\n    material_id,\n    questionId\n  } = props;\n  const [question, setQuestion] = useState('');\n  const [difficulty, setDifficulty] = useState(1);\n  const [answers, setAnswers] = useState([]);\n  const [type, setType] = useState(1);\n  const [excelData, setExcelData] = useState([]);\n  const [file_name, setFileName] = useState({});\n  useEffect(() => {\n    generateAnswers();\n\n    if (questionId) {\n      getQuestionDetails();\n    }\n  }, []);\n\n  const excelUpload = async input => {\n    let data = [];\n    readXlsxFile(input.target.files[0]).then(async rows => {\n      rows.map((item, index) => {\n        if (index != 0) {\n          const obj = {\n            \"material_id\": material_id,\n            \"question_difficulty\": item[6],\n            \"question_type\": item[7],\n            \"question_content\": item[0],\n            \"options\": {\n              \"question_option_a\": item[1],\n              \"question_option_b\": item[2],\n              \"question_option_c\": item[3],\n              \"question_option_d\": item[4]\n            },\n            \"answer\": [item[5] == \"A\" ? 1 : 0, item[5] == \"B\" ? 1 : 0, item[5] == \"C\" ? 1 : 0, item[5] == \"D\" ? 1 : 0]\n          };\n          data.push(obj);\n        }\n      });\n      setExcelData(data);\n    });\n  };\n\n  const generateAnswers = () => {\n    const answerArr = [];\n\n    for (let i = 0; i < noOfanswerOptions; i++) {\n      const option = {};\n      option.option_answer = 0;\n      option.option_content = '';\n      answerArr.push(option);\n    }\n\n    createQuestionTemplate(answerArr); // this.setState({ answers });\n  };\n\n  const createQuestionTemplate = answersArr => {\n    const answerArr = [];\n\n    for (let i = 0; i < answersArr.length; i++) {\n      const option = {};\n      option.is_correct = answersArr[i].option_answer == 1 ? true : false;\n      option.option = answersArr[i].option_content;\n      answerArr.push(option);\n    }\n\n    setAnswers(answerArr);\n  };\n\n  const getQuestionDetails = () => {\n    const data = {\n      question_id: questionId\n    };\n    post(url_questions.EDIT_URL, data) // =${this.state.parent_subject}\n    .then(res => {\n      if (res.status) {\n        const {\n          data\n        } = res.data;\n        setQuestion(data.question_content);\n        setDifficulty(data.question_difficulty);\n        setType(data.question_type);\n        createQuestionTemplate(data.options); // setQuestions(res.data.data);\n      } else {\n        toast.error(`Error: Bad Request`);\n      }\n    }).catch(error => {\n      toast.error(`Error: ${error}`);\n    });\n  };\n\n  const setCorrectFlag = index => {\n    // const { answers } = this.state;\n    answers.forEach(answer => {\n      answer.is_correct = false;\n    });\n    answers[index].is_correct = !answers[index].is_correct;\n    setAnswers([...answers]);\n  };\n\n  const resetQuestionForm = () => {\n    setQuestion('');\n    setDifficulty('');\n    generateAnswers();\n  };\n\n  const changeDifficulty = difficulty => {\n    setDifficulty(difficulty);\n  };\n\n  const changeType = type => {\n    setType(type);\n  };\n\n  const questionChangeHandler = question => {\n    setQuestion(question);\n  };\n\n  const fileHandler = e => {\n    setFileName(e.target.files[0]);\n  };\n\n  const updateAnswer = (text, isAnswer, index) => {\n    if (typeof text !== 'string') {\n      answers[index].option = text.target.value;\n    }\n\n    answers[index].is_correct = isAnswer;\n    setAnswers([...answers]);\n  };\n\n  const cancelQuestionModal = () => {\n    setQuestion('');\n    setDifficulty('');\n    setType('');\n    generateAnswers();\n    props.hideQuestionModal();\n    props.refreshList();\n  };\n\n  const addQuestion = () => {\n    const URL = questionId ? url_questions.UPDATE_URL : url_questions.CREATE_URL;\n    const successMsg = questionId ? \"Question Updated Successfully\" : \"Question Added Successfully\";\n    const data = {\n      material_id,\n      answers,\n      question,\n      question_type: \"1\",\n      difficulty\n    };\n\n    if (questionId) {\n      data.question_id = questionId;\n    }\n\n    post(URL, data).then(response => {\n      if (response.status == 200) {\n        if (file_name.name) {\n          const formData = new FormData();\n          formData.append('file_name', file_name);\n          formData.append('question_id', 24);\n          const imageUrl = url_questions.IMAGE_UPLOAD;\n          post(imageUrl, formData).then(response => {\n            if (response.status == 200) {\n              toast.success(`Success: ${response.data.message}`);\n            }\n          });\n        }\n\n        toast.success(`Success: ${successMsg}`);\n        resetQuestionForm();\n\n        if (questionId) {\n          props.refreshList();\n        }\n      } else {\n        toast.error('Error: Bad request.');\n      }\n    }).catch(error => {\n      toast.error('Error: Bad request.');\n    });\n  };\n\n  const submitQuestion = async () => {\n    if (excelData.length > 0) {\n      try {\n        const questionExcelUploadurl = `${url_questions.EXCEL_UPLOAD}`;\n        const questionExcelUploadsuccess = (await trackPromise(post(questionExcelUploadurl, excelData))).data;\n        questionExcelUploadsuccess.statusCode == 200 ? toast.success(questionExcelUploadsuccess.message) : toast.error(questionExcelUploadsuccess.message);\n      } catch (e) {\n        toast.error(e.message);\n      }\n\n      return;\n    }\n\n    if (questionValidation()) {\n      addQuestion();\n    }\n  };\n\n  const questionValidation = () => {\n    if (question.trim().length === 0) {\n      toast.error('Error: Please provide a question');\n      return;\n    }\n\n    const isAnswerSelected = answers.filter(answer => answer.is_correct === true);\n    const isAllAnswersAvailable = answers.filter(answer => answer.option.trim().length === 0);\n\n    if (isAllAnswersAvailable.length > 0) {\n      toast.error('Error: Please provide all the answers');\n      return;\n    }\n\n    if (isAnswerSelected.length === 0) {\n      toast.error('Error: Please provide a correct answer');\n      return;\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, `${questionId ? 'Edit ' : 'Add '}`, \" Questions\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    onClick: () => cancelQuestionModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: process.env.PUBLIC_URL + \"/images/close.svg\",\n    alt: \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 116\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex mt-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, \"Bulk Import\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file question_upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    onChange: e => excelUpload(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, \"Choose file\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: process.env.PUBLIC_URL + \"/question_template.xlsx\",\n    download: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary custom-download\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 86\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-download\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 154\n    }\n  }), \" Download\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Quest-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, \"Questions\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Quest-box-header question-input-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, \"Question 1\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-minus\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"question\",\n    value: question,\n    placeholder: \"Enter your question\",\n    onChange: e => {\n      questionChangeHandler(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload__icon__wrapper question_upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }, \"Question Image\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file mt--30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    onChange: e => fileHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 29\n    }\n  }, \"Choose file\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ans-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, answers.map((answer, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question questionbox-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"options d-flex align-items-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    className: \"custom-control-input\",\n    value: answer.is_correct,\n    checked: answer.is_correct,\n    id: `customRadio_${index}`,\n    name: \"answerOption\",\n    onChange: () => setCorrectFlag(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: `customRadio_${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 49\n    }\n  }, \"Answer \", index + 1), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: `answer${index}`,\n    value: answer.option,\n    id: `answer${index}`,\n    onChange: text => updateAnswer(text, answer.is_correct, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: () => setCorrectFlag(index),\n    className: `${answer.is_correct ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 41\n    }\n  }, `${answer.is_correct ? 'Marked as Right' : 'Mark as Right'}`)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown cus-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary dropdown-toggle\",\n    type: \"button\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 25\n    }\n  }, \"Difficulty Level\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"difficulty-dropdown\",\n    name: \"difficulty\",\n    onChange: e => changeDifficulty(e.target.value),\n    value: difficulty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, \"Easy\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  }, \"Hard\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer cus-modal-footer-gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger cancel\",\n    \"data-dismiss\": \"modal\",\n    onClick: () => cancelQuestionModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger reset\",\n    onClick: () => resetQuestionForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger add\",\n    onClick: () => submitQuestion(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, questionId ? 'UPDATE' : 'NEXT')));\n};\n\nexport default AddQuestion;","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/module/Modal/Question/AddQuestion.js"],"names":["React","useState","useEffect","CONSTANTS","toast","post","readXlsxFile","trackPromise","usePromiseTracker","data","noOfanswerOptions","url_questions","QUESTION","AddQuestion","props","material_id","questionId","question","setQuestion","difficulty","setDifficulty","answers","setAnswers","type","setType","excelData","setExcelData","file_name","setFileName","generateAnswers","getQuestionDetails","excelUpload","input","target","files","then","rows","map","item","index","obj","push","answerArr","i","option","option_answer","option_content","createQuestionTemplate","answersArr","length","is_correct","question_id","EDIT_URL","res","status","question_content","question_difficulty","question_type","options","error","catch","setCorrectFlag","forEach","answer","resetQuestionForm","changeDifficulty","changeType","questionChangeHandler","fileHandler","e","updateAnswer","text","isAnswer","value","cancelQuestionModal","hideQuestionModal","refreshList","addQuestion","URL","UPDATE_URL","CREATE_URL","successMsg","response","name","formData","FormData","append","imageUrl","IMAGE_UPLOAD","success","message","submitQuestion","questionExcelUploadurl","EXCEL_UPLOAD","questionExcelUploadsuccess","statusCode","questionValidation","trim","isAnswerSelected","filter","isAllAnswersAvailable","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CONSTANTS } from '../../../../util/Constants';\nimport { toast } from 'react-toastify';\nimport { post } from 'axios'\nimport readXlsxFile from 'read-excel-file'\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport { data } from 'jquery';\n\nconst noOfanswerOptions = 4;\nconst url_questions = CONSTANTS.QUESTION;\n\nconst AddQuestion = (props) => {\n    const {\n        material_id,\n        questionId\n    } = props;\n\n    const [question, setQuestion] = useState('');\n    const [difficulty, setDifficulty] = useState(1);\n    const [answers, setAnswers] = useState([]);\n    const [type, setType] = useState(1);\n    const [excelData, setExcelData] = useState([]);\n    const [file_name, setFileName] = useState({});\n    useEffect(() => {\n        generateAnswers();\n        if (questionId) {\n            getQuestionDetails()\n        }\n    }, []);\n\n    const excelUpload = async (input) => {\n        let data = []\n       readXlsxFile(input.target.files[0]).then(async (rows) => {\n            rows.map((item, index) => {\n              if(index != 0){\n                  const obj =  {\n                       \"material_id\":material_id,\n                       \"question_difficulty\":item[6],\n                       \"question_type\":item[7],\n                       \"question_content\":item[0],\n                       \"options\":{\n                           \"question_option_a\":item[1],\n                           \"question_option_b\":item[2],\n                           \"question_option_c\":item[3],\n                           \"question_option_d\":item[4]\n                           },\n                       \"answer\":[item[5] == \"A\" ? 1 : 0, item[5] == \"B\" ? 1 : 0, item[5] == \"C\" ? 1 : 0, item[5] == \"D\" ? 1 : 0]\n                       };\n\n                       data.push(obj);\n                    }\n                })\n                setExcelData(data)\n            })\n    }\n\n    const generateAnswers = () => {\n        const answerArr = [];\n        for (let i = 0; i < noOfanswerOptions; i++) {\n            const option = {};\n            option.option_answer = 0;\n            option.option_content = '';\n            answerArr.push(option);\n        }\n        createQuestionTemplate(answerArr)\n        // this.setState({ answers });\n    }\n    const createQuestionTemplate = (answersArr) => {\n        const answerArr = [];\n        for (let i = 0; i < answersArr.length; i++) {\n            const option = {};\n            option.is_correct = answersArr[i].option_answer == 1 ? true : false;\n            option.option = answersArr[i].option_content;\n            answerArr.push(option);\n        }\n        setAnswers(answerArr);\n    }\n    const getQuestionDetails = () => {\n        const data = {\n            question_id: questionId\n        }\n        post(url_questions.EDIT_URL, data) // =${this.state.parent_subject}\n            .then(res => {\n\n                if (res.status) {\n                    const { data } = res.data;\n                    setQuestion(data.question_content);\n                    setDifficulty(data.question_difficulty);\n                    setType(data.question_type);\n                    createQuestionTemplate(data.options);\n                    // setQuestions(res.data.data);\n                } else {\n                    toast.error(`Error: Bad Request`);\n                }\n            }).catch(error => {\n                toast.error(`Error: ${error}`);\n            })\n\n    }\n    const setCorrectFlag = (index) => {\n        // const { answers } = this.state;\n        answers.forEach((answer) => {\n            answer.is_correct = false;\n        })\n        answers[index].is_correct = !answers[index].is_correct;\n        setAnswers([...answers]);\n    }\n\n    const resetQuestionForm = () => {\n        setQuestion('')\n        setDifficulty('');\n        generateAnswers();\n    }\n    const changeDifficulty = (difficulty) => {\n        setDifficulty(difficulty);\n    }\n    const changeType = (type) => {\n        setType(type);\n    }\n    const questionChangeHandler = (question) => {\n        setQuestion(question)\n    }\n    const fileHandler = (e) => {\n        setFileName(e.target.files[0])\n    }\n    const updateAnswer = (text, isAnswer, index) => {\n        if (typeof text !== 'string') {\n            answers[index].option = text.target.value;\n        }\n        answers[index].is_correct = isAnswer;\n        setAnswers([...answers]);\n    }\n    const cancelQuestionModal = () => {\n        setQuestion('')\n        setDifficulty('');\n        setType('');\n        generateAnswers();\n        props.hideQuestionModal();\n        props.refreshList();\n    }\n    const addQuestion = () => {\n       \n        const URL = questionId ? url_questions.UPDATE_URL : url_questions.CREATE_URL;\n        const successMsg = questionId ? \"Question Updated Successfully\" : \"Question Added Successfully\";\n        const data = {\n            material_id,\n            answers,\n            question,\n            question_type:\"1\",\n            difficulty\n        }\n        if (questionId) {\n            data.question_id = questionId;\n        }\n        post(URL, data).then(response => {\n            if (response.status == 200) {\n\n                if(file_name.name){\n                    const formData = new FormData(); \n                    formData.append( \n                    'file_name',file_name, \n                    ); \n                    formData.append( \n                        'question_id', 24, \n                    ); \n                        \n                const imageUrl = url_questions.IMAGE_UPLOAD\n                    post(imageUrl, formData).then(response => {\n                        if (response.status == 200) {\n                            toast.success(`Success: ${response.data.message}`);\n                        }\n                    })\n                }\n                toast.success(`Success: ${successMsg}`);\n                resetQuestionForm();\n                if(questionId){\n                    props.refreshList();\n                }\n            } else {\n                toast.error('Error: Bad request.');\n            }\n        }).catch(error => {\n            toast.error('Error: Bad request.');\n        })\n    }\n    const submitQuestion = async() => {\n        \n        if(excelData.length > 0){\n            try {\n                const questionExcelUploadurl = `${url_questions.EXCEL_UPLOAD}`;\n                const questionExcelUploadsuccess = (await (trackPromise(post(questionExcelUploadurl, excelData)))).data;\n                questionExcelUploadsuccess.statusCode == 200 ?  toast.success(questionExcelUploadsuccess.message) : toast.error(questionExcelUploadsuccess.message)\n            } catch (e) {\n                toast.error(e.message);\n            }\n            return ;\n        }\n        if (questionValidation()) {\n            addQuestion();\n        }\n    }\n\n    const questionValidation = () => {\n        if (question.trim().length === 0) {\n            toast.error('Error: Please provide a question');\n            return;\n        }\n        const isAnswerSelected = answers.filter((answer) => answer.is_correct === true);\n        const isAllAnswersAvailable = answers.filter((answer) => answer.option.trim().length === 0);\n        if (isAllAnswersAvailable.length > 0) {\n            toast.error('Error: Please provide all the answers');\n            return;\n        }\n        if (isAnswerSelected.length === 0) {\n            toast.error('Error: Please provide a correct answer');\n            return;\n        }\n        return true;\n    }\n    return (\n        <div>\n            <div className=\"modal-header\">\n                <h4 className=\"modal-title\">{`${questionId ? 'Edit ' : 'Add '}`} Questions</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => cancelQuestionModal()}><img src={process.env.PUBLIC_URL + \"/images/close.svg\"}\n                    alt=\"close\" /></button>\n            </div>\n\n            \n            <div className=\"d-flex mt-30\">\n                <div className=\"col-md-6\">\n                    <h6 className=\"label\">Bulk Import</h6>\n                    <div className=\"custom-file question_upload\">\n                        <input type=\"file\" className=\"custom-file-input\" onChange={(e) => excelUpload(e)} />\n                        <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                <a href={process.env.PUBLIC_URL+\"/question_template.xlsx\"} download> <button type=\"button\" className=\"btn btn-secondary custom-download\"><i className=\"fa fa-download\"></i> Download</button></a>\n                </div>\n            </div>\n            <div className=\"modal-body\">\n                <div className=\"Quest-box\">\n                    <h4 className=\"title\">Questions</h4>\n                    <div className=\"Quest-box-header question-input-title\">\n                        <h4>Question 1</h4>\n                        <p>\n                            <i className=\"fa fa-minus\" aria-hidden=\"true\"></i>\n                            <input type=\"text\" name=\"question\" value={question} placeholder=\"Enter your question\" onChange={(e) => { questionChangeHandler(e.target.value) }} />\n                        </p>\n                    </div>\n                    <div className=\"upload__icon__wrapper question_upload\">\n                        <h6 className=\"label\">Question Image</h6>\n                        <div className=\"custom-file mt--30\">     \n                            <input type=\"file\" className=\"custom-file-input\" onChange={(e) => fileHandler(e)} />\n                            <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\n                        </div>\n                    </div>\n\n                    <div className=\"ans-box\">\n                        {answers.map((answer, index) => (\n                            <div className=\"row\">\n                                <div className=\"col-md-11\">\n                                    <div className=\"question questionbox-list\">\n                                        <div className=\"options d-flex align-items-center \">\n                                            <div className=\"custom-control custom-radio\">\n                                                <input type=\"radio\" className=\"custom-control-input\" value={answer.is_correct} checked={answer.is_correct} id={`customRadio_${index}`}\n                                                    name=\"answerOption\" onChange={() => setCorrectFlag(index)} />\n                                                <label className=\"custom-control-label\" htmlFor={`customRadio_${index}`}></label>\n                                            </div>\n                                            <div className=\"option-box\">\n                                                <span>Answer {index + 1}</span>\n                                                <input type='text' name={`answer${index}`} value={answer.option} id={`answer${index}`} onChange={(text) => updateAnswer(text, answer.is_correct, index)} />\n                                            </div>\n                                        </div>\n                                        <a href=\"#\" onClick={() => setCorrectFlag(index)} className={`${answer.is_correct ? 'active' : ''}`}>\n                                            {`${answer.is_correct ? 'Marked as Right' : 'Mark as Right'}`}\n                                        </a>\n\n                                    </div>\n                                </div>\n                                {/* <div className=\"col-md-1 pzero\">\n            <div className=\"action d-flex\">\n                <button className=\"btn\"><img src={process.env.PUBLIC_URL + \"/images/plus.svg\"} alt=\"\" /></button>\n                <button className=\"btn\"><img src=\"./images/minus.svg\" alt=\"\" /></button>\n            </div>\n        </div> */}\n                            </div>\n                        ))}\n                    </div>\n                    {/* <div>\n                    <div className=\"custom-file\">\n                        <input type=\"file\" className=\"custom-file-input\" onChange={(e) => fileHandler(e)} />\n                        <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\n                    </div>\n                    </div> */}\n                    \n                    <div className=\"dropdown cus-dropdown\">\n                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Difficulty Level\n                            </button>\n                        <select className=\"difficulty-dropdown\" name='difficulty' onChange={(e) => changeDifficulty(e.target.value)} value={difficulty}>\n                            <option value={1}>Easy</option>\n                            <option value={3}>Medium</option>\n                            <option value={2}>Hard</option>\n                        </select>\n                    </div>\n\n                    {/* <div className=\"dropdown cus-dropdown\">\n                        <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Question Type\n                            </button>\n                        <select className=\"difficulty-dropdown\" name='type' onChange={(e) => changeType(e.target.value)} value={type}>\n                            <option value={1}>Single</option>\n                            <option value={2}>Multiple</option>\n                            <option value={3}>Free Text</option>\n                        </select>\n                    </div> */}\n                    \n                </div>\n            </div>\n            <div className=\"modal-footer cus-modal-footer-gray\">\n                <button type=\"button\" className=\"btn btn-danger cancel\" data-dismiss=\"modal\" onClick={() => cancelQuestionModal()}>Cancel</button>\n                <button type=\"button\" className=\"btn btn-danger reset\" onClick={() => resetQuestionForm()}>Reset</button>\n                <button type=\"button\" className=\"btn btn-danger add\" onClick={() => submitQuestion()}>{questionId ? 'UPDATE' : 'NEXT'}</button>\n            </div>\n        </div>\n    );\n}\n\nexport default AddQuestion;\n"]},"metadata":{},"sourceType":"module"}