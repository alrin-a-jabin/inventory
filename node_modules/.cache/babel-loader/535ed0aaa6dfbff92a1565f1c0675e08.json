{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pastMaxDate = exports.datePicked = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar datePicked = function datePicked(startDate, endDate, newDate, startMode, smartMode) {\n  if (startMode) {\n    return newDateStartMode(newDate, endDate, smartMode, startDate);\n  } else {\n    return newDateEndMode(newDate, startDate, smartMode, endDate);\n  }\n};\n\nexports.datePicked = datePicked;\n\nvar newDateStartMode = function newDateStartMode(newDate, endDate, smartMode, startDate) {\n  // Create a new moment object which combines the new date and the original start date as newDate\n  // doesnt contain time info which is important to determining equality\n  var newDateWithTime = createNewDateWithTime(newDate, startDate.hour(), startDate.minute(), startDate.second());\n\n  if (newDateWithTime.isSameOrBefore(endDate, 'seconds')) {\n    return returnDateObject(newDate, endDate);\n  } else if (smartMode) {\n    var newEnd = (0, _moment.default)(newDate);\n    newEnd.add(1, 'days');\n    return returnDateObject(newDate, newEnd);\n  } else {\n    return returnDateObject(startDate, endDate);\n  }\n};\n\nvar newDateEndMode = function newDateEndMode(newDate, startDate, smartMode, endDate) {\n  // Create a new moment object which combines the new date and the original end date as newDate\n  // doesnt contain time info which is important to determining equality\n  var newDateWithTime = createNewDateWithTime(newDate, endDate.hour(), endDate.minute(), endDate.second());\n\n  if (newDateWithTime.isSameOrAfter(startDate, 'seconds')) {\n    return returnDateObject(startDate, newDate);\n  } else if (smartMode) {\n    var newStart = (0, _moment.default)(newDate);\n    newStart.subtract(1, 'days');\n    return returnDateObject(newStart, newDate);\n  } else {\n    return returnDateObject(startDate, endDate);\n  }\n};\n\nvar createNewDateWithTime = function createNewDateWithTime(newDate, hour, minute, second) {\n  var newDateTmp = [newDate.year(), newDate.month(), newDate.date()];\n  var newDateWithTime = (0, _moment.default)(newDateTmp);\n  newDateWithTime.hour(hour);\n  newDateWithTime.minute(minute);\n  newDateWithTime.second(second);\n  return newDateWithTime;\n};\n\nvar returnDateObject = function returnDateObject(startDate, endDate) {\n  var returnValues = {};\n  returnValues.startDate = startDate;\n  returnValues.endDate = endDate;\n  return returnValues;\n};\n\nvar pastMaxDate = function pastMaxDate(currentDate, maxDate, minuteMode) {\n  if (!maxDate) {\n    return false;\n  }\n\n  if (minuteMode && maxDate && currentDate.isAfter(maxDate, 'seconds')) {\n    return true;\n  }\n\n  if (maxDate && currentDate.isAfter(maxDate, 'day')) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.pastMaxDate = pastMaxDate;","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/node_modules/react-advanced-datetimerange-picker/dist/utils/DateSelectedUtils.js"],"names":["Object","defineProperty","exports","value","pastMaxDate","datePicked","_moment","_interopRequireDefault","require","obj","__esModule","default","startDate","endDate","newDate","startMode","smartMode","newDateStartMode","newDateEndMode","newDateWithTime","createNewDateWithTime","hour","minute","second","isSameOrBefore","returnDateObject","newEnd","add","isSameOrAfter","newStart","subtract","newDateTmp","year","month","date","returnValues","currentDate","maxDate","minuteMode","isAfter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pastMaxDate = exports.datePicked = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar datePicked = function datePicked(startDate, endDate, newDate, startMode, smartMode) {\n  if (startMode) {\n    return newDateStartMode(newDate, endDate, smartMode, startDate);\n  } else {\n    return newDateEndMode(newDate, startDate, smartMode, endDate);\n  }\n};\n\nexports.datePicked = datePicked;\n\nvar newDateStartMode = function newDateStartMode(newDate, endDate, smartMode, startDate) {\n  // Create a new moment object which combines the new date and the original start date as newDate\n  // doesnt contain time info which is important to determining equality\n  var newDateWithTime = createNewDateWithTime(newDate, startDate.hour(), startDate.minute(), startDate.second());\n\n  if (newDateWithTime.isSameOrBefore(endDate, 'seconds')) {\n    return returnDateObject(newDate, endDate);\n  } else if (smartMode) {\n    var newEnd = (0, _moment.default)(newDate);\n    newEnd.add(1, 'days');\n    return returnDateObject(newDate, newEnd);\n  } else {\n    return returnDateObject(startDate, endDate);\n  }\n};\n\nvar newDateEndMode = function newDateEndMode(newDate, startDate, smartMode, endDate) {\n  // Create a new moment object which combines the new date and the original end date as newDate\n  // doesnt contain time info which is important to determining equality\n  var newDateWithTime = createNewDateWithTime(newDate, endDate.hour(), endDate.minute(), endDate.second());\n\n  if (newDateWithTime.isSameOrAfter(startDate, 'seconds')) {\n    return returnDateObject(startDate, newDate);\n  } else if (smartMode) {\n    var newStart = (0, _moment.default)(newDate);\n    newStart.subtract(1, 'days');\n    return returnDateObject(newStart, newDate);\n  } else {\n    return returnDateObject(startDate, endDate);\n  }\n};\n\nvar createNewDateWithTime = function createNewDateWithTime(newDate, hour, minute, second) {\n  var newDateTmp = [newDate.year(), newDate.month(), newDate.date()];\n  var newDateWithTime = (0, _moment.default)(newDateTmp);\n  newDateWithTime.hour(hour);\n  newDateWithTime.minute(minute);\n  newDateWithTime.second(second);\n  return newDateWithTime;\n};\n\nvar returnDateObject = function returnDateObject(startDate, endDate) {\n  var returnValues = {};\n  returnValues.startDate = startDate;\n  returnValues.endDate = endDate;\n  return returnValues;\n};\n\nvar pastMaxDate = function pastMaxDate(currentDate, maxDate, minuteMode) {\n  if (!maxDate) {\n    return false;\n  }\n\n  if (minuteMode && maxDate && currentDate.isAfter(maxDate, 'seconds')) {\n    return true;\n  }\n\n  if (maxDate && currentDate.isAfter(maxDate, 'day')) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.pastMaxDate = pastMaxDate;"]},"metadata":{},"sourceType":"script"}