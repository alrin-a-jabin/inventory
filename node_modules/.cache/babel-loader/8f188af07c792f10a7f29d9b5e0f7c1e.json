{"ast":null,"code":"var _jsxFileName = \"/home/alrin/Downloads/INVENTORY22/src/components/inventory/returntest/Table.js\";\n// import React from 'react';\n// import PropTypes from 'prop-types'\n// import { useTable,   usePagination } from 'react-table'\n// let {\n//     canPreviousPage,\n//     canNextPage,\n//     pageOptions,\n//     pageCount,\n//     gotoPage,\n//     nextPage,\n//     previousPage,\n//     setPageSize }=initialstate;\n// const Table = ({ cols, data}) => {\n//     return (\n//         <div class=\"table-responsive\">\n//             <table className=\"data-table dataTable-mainTable table table-hover\">\n//                 <thead>\n//                     <tr>\n//                         {cols.map((headerItem, index) => (\n//                             <th key={index}>{headerItem.title}</th>\n//                         ))}\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {data.map((item, index) => (\n//                         <tr key={index}>\n//                             {cols.map((col, key) => (\n//                                 <td key={key}>{col.render(item)}</td>\n//                             ))}\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//             <br />\n//             <br />\n//             <div className=\"col-md-12 pagination grid-pagination\">\n//                 <div className=\"col-md-4\">\n//                     <div className=\"form-group\">\n//                         <select className=\"form-control\"\n//                             value={pageSize}\n//                             onChange={e => {\n//                                 setPageSize(Number(e.target.value))\n//                             }}\n//                         >\n//                             {[10, 20, 30, 40, 50].map(pageSize => (\n//                                 <option key={pageSize} value={pageSize}>\n//                                     {pageSize}\n//                                 </option>\n//                             ))}\n//                         </select>\n//                         <span className='m-l-10'>Records Per Page</span>\n//                     </div>\n//                 </div>\n//                 <div className=\"col-md-3 form-group\">\n//                     <div className=\"form-group\">\n//                         <span>\n//                             Page{' '}\n//                         </span>\n//                         <input\n//                             className=\"form-control m-l-10 \"\n//                             type=\"number\"\n//                             defaultValue={pageIndex + 1}\n//                             onChange={e => {\n//                                 const page = e.target.value ? Number(e.target.value) - 1 : 0\n//                                 gotoPage(page)\n//                             }}\n//                         />\n//                         <span className=\"m-l-10\">of {pageOptions.length}</span>\n//                     </div>\n//                 </div>\n//                 <div className=\"col-md-5\">\n//                     <ul>\n//                         <li onClick={() => gotoPage(0)} disabled={!canPreviousPage}><a href=\"#\">First</a></li>\n//                         <li onClick={() => previousPage()} disabled={!canPreviousPage}><a href=\"#\">Prev</a></li>\n//                         <li onClick={() => gotoPage(pageIndex + 1)}><a href=\"#\">{pageIndex + 1}</a></li>\n//                         <li onClick={() => gotoPage(pageIndex + 1)}><a href=\"#\">{pageIndex + 2}</a></li>\n//                         <li onClick={() => nextPage()} disabled={!canNextPage}><a href=\"#\">Next</a></li>\n//                         <li onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}><a href=\"#\">Last</a></li>\n//                     </ul>\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n// Table.propTypes = {\n//     cols: PropTypes.array.isRequired,\n//     data: PropTypes.array.isRequired\n// }\n// export default Table;\nimport React, { useState } from 'react';\nimport { useTable, useSortBy, useExpanded, usePagination } from 'react-table';\nimport { Link } from 'react-router-dom';\n\nfunction Table({\n  columns: userColumns,\n  data\n}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns: userColumns,\n    data,\n    initialState: {\n      pageIndex: 0\n    }\n  }, useSortBy, usePagination // We can useExpanded to track the expanded state\n  // for sub components too!\n  );\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"data-table dataTable-mainTable table table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, cols.map((headerItem, index) => /*#__PURE__*/React.createElement(\"th\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, headerItem.title)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, data.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, cols.map((col, key) => /*#__PURE__*/React.createElement(\"td\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, col.render(item))))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 pagination grid-pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    value: pageSize,\n    onChange: e => {\n      setPageSize(Number(e.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, [10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/React.createElement(\"option\", {\n    key: pageSize,\n    value: pageSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, pageSize))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"m-l-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"Records Per Page\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, \"Page\", ' '), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control m-l-10 \",\n    type: \"number\",\n    defaultValue: pageIndex + 1,\n    onChange: e => {\n      const page = e.target.value ? Number(e.target.value) - 1 : 0;\n      gotoPage(page);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"m-l-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, \"of \", pageOptions.length))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => gotoPage(0),\n    disabled: !canPreviousPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 85\n    }\n  }, \"First\")), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => previousPage(),\n    disabled: !canPreviousPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 88\n    }\n  }, \"Prev\")), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => gotoPage(pageIndex + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 69\n    }\n  }, pageIndex + 1)), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => gotoPage(pageIndex + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 69\n    }\n  }, pageIndex + 2)), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => nextPage(),\n    disabled: !canNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 80\n    }\n  }, \"Next\")), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => gotoPage(pageCount - 1),\n    disabled: !canNextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 93\n    }\n  }, \"Last\"))))));\n}\n\nfunction DataGrid(props) {\n  const columnList = props.columns;\n  let columns = [];\n  columnList.forEach(element => {\n    const obj = {};\n    obj.Header = element.Header;\n    obj.accessor = element.accessor;\n\n    if (element.filterable) {\n      obj.filterable = true;\n    }\n\n    if (element.width) {\n      obj.width = element.width;\n    }\n\n    if (element.disableSortBy) {\n      obj.disableSortBy = true;\n    }\n\n    if (element.accessor === 'index') {\n      obj.Cell = row => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 24\n          }\n        }, row.row.index + 1);\n      };\n    }\n\n    if (element.accessor === 'count') {\n      obj.Cell = param => {\n        const rowData = param.row.original;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"add-material\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#\",\n          onClick: () => props.onGetList(rowData.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 54\n          }\n        }, rowData.subRowsCount), /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#\",\n          onClick: () => props.onOpenModal(rowData.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: process.env.PUBLIC_URL + \"/images/plus.svg\",\n          alt: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }\n        }, \"Add More\")));\n      };\n    }\n\n    if (element.accessor === 'dataStatus') {\n      obj.Cell = param => {\n        const rowData = param.row.original;\n        const status = rowData.dataStatus ? parseInt(rowData.dataStatus) : 0;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell-components\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-control custom-switch\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          className: \"custom-control-input\",\n          id: `changeStatus-${rowData.id}`,\n          onChange: () => props.onChangeStatus(rowData.id, !status),\n          checked: status,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          className: \"custom-control-label\",\n          htmlFor: `changeStatus-${rowData.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }\n        })));\n      };\n    }\n\n    if (element.accessor === 'dataSelect') {\n      obj.Cell = param => {\n        const rowData = param.row.original;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell-components\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-control custom-switch\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn accept-btn\",\n          onClick: () => props.onChangeSelect(rowData.id, 1),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 24\n          }\n        }, \"Accept\"), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn reject-btn\",\n          onClick: () => props.setRejectionId(rowData.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 24\n          }\n        }, \"Reject\")));\n      };\n    }\n\n    if (element.accessor === 'view') {\n      obj.Cell = param => {\n        const rowData = param.row.original;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell-components\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-action\",\n          onClick: () => props.onOpenMaterialViewModal(rowData.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fa fa-eye light-grey\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 38\n          }\n        })));\n      };\n    }\n\n    if (element.accessor === 'edit') {\n      obj.Cell = param => {\n        const rowData = param.row.original;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell-components\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#moduleedit\",\n          onClick: () => props.onEdit(rowData.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: process.env.PUBLIC_URL + \"/images/edit.svg\",\n          alt: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }\n        })));\n      };\n    }\n\n    if (element.accessor === 'delete') {\n      obj.Cell = param => {\n        const rowData = param.row.original;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cell-components\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn\",\n          onClick: () => props.onDelete(rowData.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: process.env.PUBLIC_URL + \"/images/delete.svg\",\n          alt: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }\n        })));\n      };\n    }\n\n    columns.push(obj);\n  });\n  columns = React.useMemo(() => columns);\n  return (\n    /*#__PURE__*/\n    // <div></div>\n    React.createElement(Table, {\n      columns: columns,\n      data: props.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }\n    })\n  );\n}\n\nexport default DataGrid;","map":{"version":3,"sources":["/home/alrin/Downloads/INVENTORY22/src/components/inventory/returntest/Table.js"],"names":["React","useState","useTable","useSortBy","useExpanded","usePagination","Link","Table","columns","userColumns","data","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","cols","map","headerItem","index","title","item","col","key","render","e","Number","target","value","length","DataGrid","props","columnList","forEach","element","obj","Header","accessor","filterable","width","disableSortBy","Cell","row","param","rowData","original","onGetList","id","subRowsCount","onOpenModal","process","env","PUBLIC_URL","status","dataStatus","parseInt","onChangeStatus","onChangeSelect","setRejectionId","onOpenMaterialViewModal","onEdit","onDelete","push","useMemo"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import PropTypes from 'prop-types'\n// import { useTable,   usePagination } from 'react-table'\n// let {\n\n//     canPreviousPage,\n//     canNextPage,\n//     pageOptions,\n//     pageCount,\n//     gotoPage,\n//     nextPage,\n//     previousPage,\n//     setPageSize }=initialstate;\n\n\n\n\n// const Table = ({ cols, data}) => {\n\n//     return (\n      \n        \n//         <div class=\"table-responsive\">\n//             <table className=\"data-table dataTable-mainTable table table-hover\">\n//                 <thead>\n//                     <tr>\n//                         {cols.map((headerItem, index) => (\n//                             <th key={index}>{headerItem.title}</th>\n//                         ))}\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {data.map((item, index) => (\n//                         <tr key={index}>\n//                             {cols.map((col, key) => (\n//                                 <td key={key}>{col.render(item)}</td>\n//                             ))}\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n\n//             <br />\n//             <br />\n//             <div className=\"col-md-12 pagination grid-pagination\">\n//                 <div className=\"col-md-4\">\n//                     <div className=\"form-group\">\n//                         <select className=\"form-control\"\n//                             value={pageSize}\n//                             onChange={e => {\n//                                 setPageSize(Number(e.target.value))\n//                             }}\n//                         >\n//                             {[10, 20, 30, 40, 50].map(pageSize => (\n//                                 <option key={pageSize} value={pageSize}>\n//                                     {pageSize}\n//                                 </option>\n//                             ))}\n//                         </select>\n//                         <span className='m-l-10'>Records Per Page</span>\n//                     </div>\n//                 </div>\n//                 <div className=\"col-md-3 form-group\">\n//                     <div className=\"form-group\">\n//                         <span>\n//                             Page{' '}\n//                         </span>\n//                         <input\n//                             className=\"form-control m-l-10 \"\n//                             type=\"number\"\n//                             defaultValue={pageIndex + 1}\n//                             onChange={e => {\n//                                 const page = e.target.value ? Number(e.target.value) - 1 : 0\n//                                 gotoPage(page)\n//                             }}\n//                         />\n//                         <span className=\"m-l-10\">of {pageOptions.length}</span>\n//                     </div>\n//                 </div>\n//                 <div className=\"col-md-5\">\n//                     <ul>\n//                         <li onClick={() => gotoPage(0)} disabled={!canPreviousPage}><a href=\"#\">First</a></li>\n//                         <li onClick={() => previousPage()} disabled={!canPreviousPage}><a href=\"#\">Prev</a></li>\n//                         <li onClick={() => gotoPage(pageIndex + 1)}><a href=\"#\">{pageIndex + 1}</a></li>\n//                         <li onClick={() => gotoPage(pageIndex + 1)}><a href=\"#\">{pageIndex + 2}</a></li>\n//                         <li onClick={() => nextPage()} disabled={!canNextPage}><a href=\"#\">Next</a></li>\n//                         <li onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}><a href=\"#\">Last</a></li>\n//                     </ul>\n\n//                 </div>\n//             </div>\n//         </div>\n//     )\n// }\n\n// Table.propTypes = {\n//     cols: PropTypes.array.isRequired,\n//     data: PropTypes.array.isRequired\n// }\n\n\n\n// export default Table;\n\n\n\nimport React, { useState } from 'react'\nimport { useTable, useSortBy, useExpanded, usePagination } from 'react-table'\nimport { Link } from 'react-router-dom';\nfunction Table({ columns: userColumns, data }) {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n\n        prepareRow,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: {  pageIndex, pageSize },\n    } = useTable(\n        {\n            columns: userColumns,\n            data,\n            initialState: { pageIndex: 0 },\n        },\n        useSortBy,\n        usePagination // We can useExpanded to track the expanded state\n        // for sub components too!\n    )\n\n    return (\n        <div>\n   <table className=\"data-table dataTable-mainTable table table-hover\">\n                <thead>\n                    <tr>\n                        {cols.map((headerItem, index) => (\n                            <th key={index}>{headerItem.title}</th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((item, index) => (\n                        <tr key={index}>\n                            {cols.map((col, key) => (\n                                <td key={key}>{col.render(item)}</td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <br />\n            <div className=\"col-md-12 pagination grid-pagination\">\n                <div className=\"col-md-4\">\n                    <div className=\"form-group\">\n                        <select className=\"form-control\"\n                            value={pageSize}\n                            onChange={e => {\n                                setPageSize(Number(e.target.value))\n                            }}\n                        >\n                            {[10, 20, 30, 40, 50].map(pageSize => (\n                                <option key={pageSize} value={pageSize}>\n                                    {pageSize}\n                                </option>\n                            ))}\n                        </select>\n                        <span className='m-l-10'>Records Per Page</span>\n                    </div>\n                </div>\n                <div className=\"col-md-3 form-group\">\n                    <div className=\"form-group\">\n                        <span>\n                            Page{' '}\n                        </span>\n                        <input\n                            className=\"form-control m-l-10 \"\n                            type=\"number\"\n                            defaultValue={pageIndex + 1}\n                            onChange={e => {\n                                const page = e.target.value ? Number(e.target.value) - 1 : 0\n                                gotoPage(page)\n                            }}\n                        />\n                        <span className=\"m-l-10\">of {pageOptions.length}</span>\n                    </div>\n                </div>\n                <div className=\"col-md-5\">\n                    <ul>\n                        <li onClick={() => gotoPage(0)} disabled={!canPreviousPage}><a href=\"#\">First</a></li>\n                        <li onClick={() => previousPage()} disabled={!canPreviousPage}><a href=\"#\">Prev</a></li>\n                        <li onClick={() => gotoPage(pageIndex + 1)}><a href=\"#\">{pageIndex + 1}</a></li>\n                        <li onClick={() => gotoPage(pageIndex + 1)}><a href=\"#\">{pageIndex + 2}</a></li>\n                        <li onClick={() => nextPage()} disabled={!canNextPage}><a href=\"#\">Next</a></li>\n                        <li onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}><a href=\"#\">Last</a></li>\n                    </ul>\n\n                </div>\n            </div>\n        </div>\n    )\n}\nfunction DataGrid(props) {\n    const columnList = props.columns;\n    let columns = [];\n    columnList.forEach(element => {\n        const obj = {};\n        obj.Header = element.Header;\n        obj.accessor = element.accessor;\n        if (element.filterable) {\n            obj.filterable = true;\n        }\n        if (element.width) {\n            obj.width = element.width;\n        }\n        if (element.disableSortBy) {\n            obj.disableSortBy = true;\n        }\n        if (element.accessor === 'index') {\n            obj.Cell = (row) => {\n                return <div>{row.row.index + 1}</div>;\n            }\n        }\n        if (element.accessor === 'count') {\n            obj.Cell = param => {\n                const rowData = param.row.original;\n                return <div className=\"add-material\"><a href=\"#\" onClick={() => props.onGetList(rowData.id)}>{rowData.subRowsCount}</a>\n                    <a\n                        href=\"#\"\n                        onClick={() => props.onOpenModal(rowData.id)}\n                    >\n                        <img src={process.env.PUBLIC_URL + \"/images/plus.svg\"} alt />\n                        <span>Add More</span>\n                    </a>\n                </div>\n            }\n        }\n        if (element.accessor === 'dataStatus') {\n            obj.Cell = param => {\n                const rowData = param.row.original;\n                const status = rowData.dataStatus ? parseInt(rowData.dataStatus) : 0;\n                return (<div className=\"cell-components\">\n                    <div className=\"custom-control custom-switch\">\n                        <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input\"\n                            id={`changeStatus-${rowData.id}`}\n                            onChange={() => props.onChangeStatus(rowData.id, !status)}\n                            checked={status}\n                        />\n                        <label\n                            className=\"custom-control-label\"\n                            htmlFor={`changeStatus-${rowData.id}`}\n                        />\n                    </div>\n                </div>\n                )\n            }\n        }\n        if (element.accessor === 'dataSelect') {\n            obj.Cell = param => {\n                const rowData = param.row.original;\n                return (<div className=\"cell-components\">\n                    <div className=\"custom-control custom-switch\">\n                       <button className=\"btn accept-btn\" onClick={() => props.onChangeSelect(rowData.id, 1)}>Accept</button>\n                       <button className=\"btn reject-btn\"  onClick={() => props.setRejectionId(rowData.id)}>Reject</button>\n                    </div>\n                </div>\n                )\n            }\n        }\n        if (element.accessor === 'view') {\n            obj.Cell = param => {\n                const rowData = param.row.original;\n                return (<div className=\"cell-components\">\n                    \n                            <button className=\"btn btn-action\" onClick={() => props.onOpenMaterialViewModal(rowData.id)}>\n                                     <span className=\"fa fa-eye light-grey\"></span>\n                            </button>\n                        </div>\n                )\n            }\n        }\n        if (element.accessor === 'edit') {\n            obj.Cell = param => {\n                const rowData = param.row.original;\n                return (<div className=\"cell-components\">\n                    <button className=\"btn\"\n                        data-toggle=\"modal\"\n                        data-target=\"#moduleedit\"\n                        onClick={() => props.onEdit(rowData.id)}\n                    >\n                        <img src={process.env.PUBLIC_URL + \"/images/edit.svg\"} alt />\n                    </button></div>\n                )\n            }\n        }\n\n        if (element.accessor === 'delete') {\n            obj.Cell = param => {\n                const rowData = param.row.original;\n                return (<div className=\"cell-components\">\n                    <button className=\"btn\"\n                        onClick={() => props.onDelete(rowData.id)}\n                    >\n                        <img src={process.env.PUBLIC_URL + \"/images/delete.svg\"} alt />\n                    </button></div>\n                )\n            }\n        }\n\n        columns.push(obj);\n\n    });\n    columns = React.useMemo(() => columns)\n\n    return (\n        // <div></div>\n        <Table columns={columns} data={props.data} />\n    )\n}\n\nexport default DataGrid\n"]},"metadata":{},"sourceType":"module"}