{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/util/ResponsiveContainer.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst ResponsiveContainer = props => {\n  const height = useWindowSize();\n  const {\n    offset = 136\n  } = props;\n  const heightToUse = {\n    height: height ? height - offset : 500\n  };\n  const className = `overlay_position scrollbar${props.className ? ' ' + props.className : ''}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: { ...heightToUse,\n      ...props.style\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nconst useWindowSize = () => {\n  const isClient = typeof window === \"object\";\n\n  const getHeight = () => isClient ? window.innerHeight : undefined;\n\n  const getWidth = () => isClient ? window.innerWidth : undefined;\n\n  const [windowHeight, setWindowHeight] = useState(getHeight);\n  useEffect(() => {\n    if (!isClient) return false;\n\n    const handleResize = () => {\n      setWindowHeight(getHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowHeight;\n};\n\nexport default ResponsiveContainer;","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/util/ResponsiveContainer.js"],"names":["React","useState","useEffect","ResponsiveContainer","props","height","useWindowSize","offset","heightToUse","className","style","children","isClient","window","getHeight","innerHeight","undefined","getWidth","innerWidth","windowHeight","setWindowHeight","handleResize","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AAEjC,QAAMC,MAAM,GAAGC,aAAa,EAA5B;AAEA,QAAM;AAACC,IAAAA,MAAM,GAAG;AAAV,MAAiBH,KAAvB;AACA,QAAMI,WAAW,GAAG;AAChBH,IAAAA,MAAM,EAAGA,MAAD,GAAWA,MAAM,GAAGE,MAApB,GAA6B;AADrB,GAApB;AAIA,QAAME,SAAS,GAAI,6BAA4BL,KAAK,CAACK,SAAN,GAAkB,MAAIL,KAAK,CAACK,SAA5B,GAAwC,EAAG,EAA1F;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEA,SAAhB;AAA2B,IAAA,KAAK,EAAE,EAAE,GAAGD,WAAL;AAAkB,SAAGJ,KAAK,CAACM;AAA3B,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACO,QADX,CADJ;AAMH,CAjBD;;AAmBA,MAAML,aAAa,GAAG,MAAM;AACxB,QAAMM,QAAQ,GAAG,OAAOC,MAAP,KAAkB,QAAnC;;AAEA,QAAMC,SAAS,GAAG,MAAMF,QAAQ,GAAGC,MAAM,CAACE,WAAV,GAAwBC,SAAxD;;AAEA,QAAMC,QAAQ,GAAG,MAAML,QAAQ,GAAGC,MAAM,CAACK,UAAV,GAAuBF,SAAtD;;AAEA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAACa,SAAD,CAAhD;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACU,QAAJ,EAAc,OAAO,KAAP;;AAEd,UAAMS,YAAY,GAAG,MAAM;AACvBD,MAAAA,eAAe,CAACN,SAAD,CAAf;AACH,KAFD;;AAIAD,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMR,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACH,GATQ,EASN,EATM,CAAT;AAWA,SAAOF,YAAP;AACH,CArBD;;AAuBA,eAAehB,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ResponsiveContainer = props => {\r\n\r\n    const height = useWindowSize();\r\n\r\n    const {offset = 136} = props;\r\n    const heightToUse = {\r\n        height: (height) ? height - offset : 500\r\n    };\r\n\r\n    const className = `overlay_position scrollbar${props.className ? ' '+props.className : ''}`\r\n\r\n    return (\r\n        <div className={className} style={{ ...heightToUse, ...props.style }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst useWindowSize = () => {\r\n    const isClient = typeof window === \"object\";\r\n    \r\n    const getHeight = () => isClient ? window.innerHeight : undefined;\r\n\r\n    const getWidth = () => isClient ? window.innerWidth : undefined;\r\n\r\n    const [windowHeight, setWindowHeight] = useState(getHeight);\r\n\r\n    useEffect(() => {\r\n        if(!isClient) return false;\r\n\r\n        const handleResize = () => {\r\n            setWindowHeight(getHeight);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowHeight;\r\n};\r\n\r\nexport default ResponsiveContainer;"]},"metadata":{},"sourceType":"module"}