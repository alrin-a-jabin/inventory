{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/module/Modal/MaterialAdd.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { post } from 'axios';\nimport { CONSTANTS, GLOBAL_CONSTANTS } from '../../../util/Constants';\nimport { toast } from 'react-toastify';\nimport { trackPromise } from 'react-promise-tracker';\nconst url_materials = CONSTANTS.MATERIALS;\n\nconst MaterialAdd = props => {\n  const {\n    showAddMaterialModal,\n    module_id,\n    materialId,\n    approval_status\n  } = props;\n  const [material_name, setMaterialName] = useState('');\n  const [material_type, setMaterialType] = useState('');\n  const [subject_id, setParentSubjectId] = useState('');\n  const [material_id, setMaterialId] = useState(materialId);\n  const [count, setCount] = useState(0);\n  const [materialFileData, setMaterialFileData] = useState([]);\n  const [fieldData, setfieldData] = useState({});\n  const [editIndex, seteditIndex] = useState('');\n  const materialList = useSelector(state => state.materialList);\n  const moduleList = useSelector(state => state.moduleList);\n  useEffect(() => {\n    if (moduleList) {\n      const setModuleData = moduleList.filter(mod => mod.subject_id === module_id);\n\n      if (setModuleData.length > 0) {\n        setParentSubjectId(setModuleData[0].parent_subject_id);\n      }\n    }\n\n    if (materialId) {\n      const setMaterialData = materialList.filter(mod => mod.material_id === materialId);\n\n      if (setMaterialData.length > 0) {\n        setMaterialName(setMaterialData[0].material_name);\n        setMaterialType(setMaterialData[0].material_type);\n      }\n\n      setMaterialId(materialId);\n    }\n  }, [module_id, materialId, showAddMaterialModal]);\n\n  const handleMaterialSubmit = event => {\n    event.preventDefault();\n    const isFormValid = formValidate();\n\n    if (isFormValid) {\n      const data = {\n        material_name,\n        material_type,\n        subject_id,\n        module_id,\n        material_id\n      };\n      const successMsg = material_id ? \"Data updated successfully\" : \"Data added successfully\";\n      post(url_materials.CREATE_URL, data).then(async response => {\n        if (response.data.status === true) {\n          resetModal();\n          props.cancelMaterialModal(true);\n          let uploadData = new FormData();\n          uploadData.append('material_id', response.data.data);\n          uploadData.append('status', 1);\n          materialFileData.map((item, index) => {\n            uploadData.append('type[]', item.type);\n            uploadData.append('topic[]', item.topic);\n            uploadData.append('description[]', item.description);\n            uploadData.append('file_name[]', item.file_name);\n          });\n\n          try {\n            const materialUploadUrl = url_materials.MATERIAL_UPLOAD;\n            const data = (await trackPromise(post(materialUploadUrl, uploadData))).data;\n            data.status ? toast.success(data.message) : toast.error(data.message);\n          } catch (error) {\n            toast.error('Network error');\n          }\n\n          if (material_id && approval_status == 2) {\n            try {\n              const material_approve_url = `${url_materials.MATERIAL_APPROVE_STATUS}`;\n              const data = {\n                id: material_id,\n                status: \"0\"\n              };\n              const matsuccess = post(material_approve_url, data).then(response => {});\n              toast.success(\"Material moved to pending\");\n            } catch (e) {\n              toast.error(e.message);\n            }\n          }\n\n          toast.success(\"Success: \" + successMsg);\n        } else {\n          toast.error(\"Error: \" + response.data.message);\n        }\n      }, error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const formValidate = () => {\n    if (GLOBAL_CONSTANTS.REGEX.test(material_name)) {\n      toast.error('Error: Material name should not contain any special characters');\n      return;\n    }\n\n    if (material_name.trim() == \"\") {\n      toast.error('Error: Material name is required');\n      return;\n    }\n\n    if (material_type.trim() == \"\") {\n      toast.error('Error: Material type is required');\n      return;\n    }\n\n    return true;\n  };\n\n  const materialChangeHandler = text => {\n    setMaterialName(text);\n  };\n\n  const materialTypeChangeHandler = e => {\n    setMaterialType(e.target.value);\n  };\n\n  const resetModal = () => {\n    setMaterialId('');\n    setMaterialName('');\n    setMaterialType('');\n    setMaterialFileData([]);\n    setfieldData({});\n  };\n\n  const removeFiles = id => {\n    materialFileData.splice(0, 1);\n    setMaterialFileData([...materialFileData]);\n  };\n\n  const addMaterialDetails = e => {\n    e.preventDefault();\n\n    if (validateMaterialDetail()) {\n      if (editIndex !== \"\") {\n        materialFileData.splice(editIndex, 1);\n      }\n\n      ;\n      materialFileData.push(fieldData);\n      setMaterialFileData(materialFileData);\n      setfieldData({});\n      seteditIndex('');\n      e.target.reset();\n    }\n  };\n\n  const validateMaterialDetail = () => {\n    if (!fieldData.topic) {\n      toast.error(\"Please enter topic\");\n      return false;\n    } else if (!fieldData.description) {\n      toast.error(\"Please enter description\");\n      return false;\n    } else if (!fieldData.type) {\n      toast.error(\"Please select file type\");\n      return false;\n    } else if (!fieldData.file_name) {\n      toast.error(\"Please select file\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const inputValidity = e => {\n    if (e.target.checkValidity()) {\n      const name = e.target.name;\n      const value = name == 'file_name' ? e.target.files[0] : e.target.value;\n      setfieldData(prevState => ({ ...prevState,\n        [name]: value\n      }));\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const editData = i => {\n    const fieldData = materialFileData[i];\n    setfieldData(fieldData);\n    seteditIndex(i);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `modal cus-Syllabus-modal cus-material-modal   ${showAddMaterialModal ? 'show custom-modal-open' : ''}`,\n    style: {\n      display: `${showAddMaterialModal ? 'block' : 'none'}`\n    },\n    id: \"Material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 cusoverlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content col-md-8 pzero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, `${material_id ? 'Update' : 'Add'}`, \" Material \"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    onClick: () => {\n      resetModal();\n      props.cancelMaterialModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: process.env.PUBLIC_URL + \"/images/close.svg\",\n    alt: \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 136\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"my-form\",\n    onSubmit: handleMaterialSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"materialname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, \"Material Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control required\",\n    value: material_name,\n    id: \"materialname\",\n    name: \"material_name\",\n    placeholder: \"Material name\",\n    onChange: e => {\n      materialChangeHandler(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"materialtype\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, \"Material Type\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control required\",\n    id: \"materialtype\",\n    name: \"material_type\",\n    value: material_type,\n    onChange: materialTypeChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: \"1\",\n    value: \"Promotion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, \"Quiz\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: \"2\",\n    value: \"Training\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, \" Training\")))), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"materialFileData\",\n    onSubmit: addMaterialDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group m-t-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"upload-file-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, \"Upload File\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group m-t-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"materialtopic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 23\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control required\",\n    id: \"materialtopic\",\n    onChange: e => inputValidity(e, \"topic\"),\n    name: \"topic\",\n    placeholder: \"Material Title\",\n    value: fieldData.topic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group form_control_space margin_bottom_1rem m-t-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"materialDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 23\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control required custom_textarea\",\n    id: \"materialDescription\",\n    name: \"description\",\n    onChange: e => inputValidity(e),\n    value: fieldData.description,\n    placeholder: \"Add Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group m-t-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"subject\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 23\n    }\n  }, \"File Type\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"subject\",\n    name: \"type\",\n    onChange: e => inputValidity(e),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, \"Text\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, \"Images\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PDF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, \"PDF\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"PPT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, \"PPT\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Audios\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }, \"Audios\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Doc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }, \"Doc\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Videos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, \"Videos\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-area upload-drag m-t-20 matAddFix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"upload-info-text drag-drop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, \"Drag & Drop your files here\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"upload-input\",\n    name: \"file_name\",\n    onChange: e => inputValidity(e),\n    accept: \".doc,.pdf,.docx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"upload-button-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, \"Browse Files\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-arrow-up\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 54\n    }\n  })))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"upload-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }, \"File Format.doc, .Pdf Supported\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger add mt-30 matContAdd\",\n    form: \"materialFileData\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }, editIndex === \"\" ? \"Next\" : \"Update\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nofile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, materialFileData.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12 display-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"file-list-texts f-s-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 27\n    }\n  }, \"Files\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6 select-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"select-all\",\n    className: \"check-box\",\n    name: \"select-all\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"select-all\",\n    className: \"file-list-texts f-s-14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 27\n    }\n  }, \"Select all\"))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"file-names m-l-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 23\n    }\n  }, materialFileData.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"file-select-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"check-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"file-select-option\",\n    onClick: () => editData(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"file-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-l-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"file-list-texts f-s-14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 33\n    }\n  }, item.file_name.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"file-list-texts f-s-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 33\n    }\n  }, (item.file_name.size / 125000).toFixed(2), \" MB\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    \"aria-valuenow\": \"70\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-list-texts f-s-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  }, \"70% Complete\"))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"close-icon\",\n    onClick: () => removeFiles(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-times\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 31\n    }\n  })))))), materialFileData.length === 0 && /*#__PURE__*/React.createElement(\"img\", {\n    src: process.env.PUBLIC_URL + \"/images/nofile.png\",\n    alt: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer modal-custom-footer material-modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger cancel hide\",\n    \"data-dismiss\": \"modal\",\n    onClick: () => {\n      resetModal();\n      props.cancelMaterialModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"reset\",\n    className: \"btn btn-danger reset hide\",\n    onClick: () => resetModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    form: \"my-form\",\n    type: \"submit\",\n    className: \"btn btn-danger add hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, `${material_id ? 'UPDATE' : 'ADD'}`)))));\n};\n\nexport default MaterialAdd;","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/module/Modal/MaterialAdd.js"],"names":["React","Component","useState","useEffect","useSelector","post","CONSTANTS","GLOBAL_CONSTANTS","toast","trackPromise","url_materials","MATERIALS","MaterialAdd","props","showAddMaterialModal","module_id","materialId","approval_status","material_name","setMaterialName","material_type","setMaterialType","subject_id","setParentSubjectId","material_id","setMaterialId","count","setCount","materialFileData","setMaterialFileData","fieldData","setfieldData","editIndex","seteditIndex","materialList","state","moduleList","setModuleData","filter","mod","length","parent_subject_id","setMaterialData","handleMaterialSubmit","event","preventDefault","isFormValid","formValidate","data","successMsg","CREATE_URL","then","response","status","resetModal","cancelMaterialModal","uploadData","FormData","append","map","item","index","type","topic","description","file_name","materialUploadUrl","MATERIAL_UPLOAD","success","message","error","material_approve_url","MATERIAL_APPROVE_STATUS","id","matsuccess","e","console","log","REGEX","test","trim","materialChangeHandler","text","materialTypeChangeHandler","target","value","removeFiles","splice","addMaterialDetails","validateMaterialDetail","push","reset","inputValidity","checkValidity","name","files","prevState","editData","i","display","process","env","PUBLIC_URL","size","toFixed"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux';\nimport { post } from 'axios';\nimport { CONSTANTS, GLOBAL_CONSTANTS } from '../../../util/Constants';\nimport { toast } from 'react-toastify';\nimport { trackPromise } from 'react-promise-tracker';\n\nconst url_materials = CONSTANTS.MATERIALS;\nconst MaterialAdd = (props) => {\n  const { showAddMaterialModal, module_id, materialId, approval_status } = props;\n  const [material_name, setMaterialName] = useState('');\n  const [material_type, setMaterialType] = useState('');\n  const [subject_id, setParentSubjectId] = useState('');\n  const [material_id, setMaterialId] = useState(materialId);\n  const [count, setCount] = useState(0);\n  const [materialFileData, setMaterialFileData] = useState([]);\n  const [fieldData, setfieldData] = useState({});\n  const [editIndex, seteditIndex] = useState('')\n \n  const materialList = useSelector(state => state.materialList);\n\n  const moduleList = useSelector(state => state.moduleList);\n  useEffect(() => {\n    if (moduleList) {\n      const setModuleData = moduleList.filter((mod) => mod.subject_id === module_id);\n      if (setModuleData.length > 0) {\n        setParentSubjectId(setModuleData[0].parent_subject_id);\n      }\n    }\n    if (materialId) {\n      const setMaterialData = materialList.filter((mod) => mod.material_id === materialId);\n      if (setMaterialData.length > 0) {\n        setMaterialName(setMaterialData[0].material_name);\n        setMaterialType(setMaterialData[0].material_type);\n      }\n      setMaterialId(materialId);\n    }\n  }, [module_id, materialId, showAddMaterialModal])\n\n\n  const handleMaterialSubmit = event => {\n    event.preventDefault();\n    const isFormValid = formValidate();\n    if (isFormValid) {\n      const data = { material_name, material_type, subject_id, module_id, material_id };\n      const successMsg = material_id ? \"Data updated successfully\" : \"Data added successfully\"\n\n      post(url_materials.CREATE_URL, data)\n        .then(async (response) => {\n          if (response.data.status === true) {\n            resetModal();\n            props.cancelMaterialModal(true);\n           \n            let uploadData = new FormData();\n            uploadData.append('material_id', response.data.data);\n            uploadData.append('status', 1);\n\n            materialFileData.map((item, index) => {\n              uploadData.append('type[]', item.type);\n              uploadData.append('topic[]', item.topic);\n              uploadData.append('description[]', item.description);\n              uploadData.append('file_name[]', item.file_name);\n            }\n            )\n            \n            try {\n              const materialUploadUrl = url_materials.MATERIAL_UPLOAD;\n              const data = (await(trackPromise(post(materialUploadUrl, uploadData)))).data\n              data.status ? toast.success(data.message) : toast.error(data.message)\n            } catch (error) {\n              toast.error('Network error')\n            }\n\n            if(material_id && approval_status == 2){\n                try {\n                    const material_approve_url = `${url_materials.MATERIAL_APPROVE_STATUS}`;\n                    const data = {\n                        id:material_id,\n                        status:\"0\"\n                    }\n                    const matsuccess = post(material_approve_url, data).then((response) => {});\n                    toast.success(\"Material moved to pending\");\n                    } catch (e) {\n                    toast.error(e.message);\n                }\n            }\n            toast.success(\"Success: \"+ successMsg);\n          }\n          else{\n            toast.error(\"Error: \"+ response.data.message);\n          }\n        }, (error) => {\n          console.log(error);\n        });\n    }\n\n  }\n  const formValidate = () => {\n    if (GLOBAL_CONSTANTS.REGEX.test(material_name)) {\n      toast.error('Error: Material name should not contain any special characters');\n      return;\n    }\n    if (material_name.trim() == \"\") {\n      toast.error('Error: Material name is required');\n      return;\n    }\n    if (material_type.trim() == \"\") {\n      toast.error('Error: Material type is required');\n      return;\n    }\n    return true;\n  }\n\n  const materialChangeHandler = (text) => {\n    setMaterialName(text);\n  }\n  const materialTypeChangeHandler = (e) => {\n    setMaterialType(e.target.value);\n  }\n\n  const resetModal = () => {\n    setMaterialId('');\n    setMaterialName('');\n    setMaterialType('');\n    setMaterialFileData([]);\n    setfieldData({})\n  }\n  \n  const removeFiles = (id) => {\n      materialFileData.splice(0, 1)\n      setMaterialFileData([...materialFileData])\n  }\n\n  const addMaterialDetails = (e) => {\n    e.preventDefault();\n    if(validateMaterialDetail()){\n      if(editIndex !== \"\"){ materialFileData.splice(editIndex, 1)};\n      materialFileData.push(fieldData)\n      setMaterialFileData(materialFileData)\n      setfieldData({})\n      seteditIndex('')\n      e.target.reset();\n    }\n}\n\nconst validateMaterialDetail = () => {\n    if(!fieldData.topic){\n      toast.error(\"Please enter topic\");\n      return false;\n    }else if(!fieldData.description){\n      toast.error(\"Please enter description\");\n      return false;        \n    }\n    else if(!fieldData.type){\n      toast.error(\"Please select file type\");\n      return false;        \n    }else if(!fieldData.file_name){\n      toast.error(\"Please select file\");\n      return false; \n    }else{\n      return true;\n    }\n  }\n\nconst inputValidity = (e) =>{\n    if(e.target.checkValidity()){\n      const name = e.target.name;\n      const value = name == 'file_name' ? e.target.files[0] : e.target.value;\n      setfieldData(prevState => ({\n          ...prevState,\n          [name]:value\n      }))\n      return false;\n    }else{\n      return true;\n    }\n}\n\nconst editData = (i) => {\n  const fieldData = materialFileData[i]\n  setfieldData(fieldData);  \n  seteditIndex(i);  \n}\n\n  return (\n    <div className={`modal cus-Syllabus-modal cus-material-modal   ${showAddMaterialModal ? 'show custom-modal-open' : ''}`} style={{ display: `${showAddMaterialModal ? 'block' : 'none'}` }} id=\"Material\">\n      <div className=\"modal-dialog row\">\n        <div className=\"col-md-4 cusoverlay\" />\n        <div className=\"modal-content col-md-8 pzero\">\n          {/* Modal Header */}\n          <div className=\"modal-header\">\n          <h4 className=\"modal-title\">{`${material_id ? 'Update' : 'Add'}`} Material </h4>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => { resetModal(); props.cancelMaterialModal() }}><img src={process.env.PUBLIC_URL + \"/images/close.svg\"} alt=\"close\"  /></button>\n          </div>\n          {/* Modal body */}\n          <div className=\"modal-body\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <form id='my-form' onSubmit={handleMaterialSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"materialname\">Material Name</label>\n                    <input type=\"text\" className=\"form-control required\" value={material_name} id=\"materialname\" name=\"material_name\" placeholder=\"Material name\" \n                    onChange={(e) => { materialChangeHandler(e.target.value) }} />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"materialtype\">Material Type</label>\n                    <select className=\"form-control required\" id='materialtype' name=\"material_type\" \n                    value={material_type} onChange={materialTypeChangeHandler}  >\n                        <option>Select</option>\n                        <option key=\"1\" value=\"Promotion\">Quiz</option>\n                        <option key=\"2\" value=\"Training\"> Training</option>\n                    </select>\n                  </div>\n\n                </form>\n                <form id='materialFileData' onSubmit={addMaterialDetails}>\n\n                  {/* Upload File */}\n                  <div className=\"form-group m-t-20\">\n                    <label className=\"upload-file-title\">Upload File</label>\n                  </div>\n\n                  <div>\n                    {/* <div className=\"form-group m-t-20\">\n                      <label htmlFor=\"materialtype\">File Name</label>\n                      <input type=\"text\" className=\"form-control required\" id=\"materialtype\" name=\"material_file_name\"  placeholder=\"Material Type\" />\n                    </div> */}\n                    <div className=\"form-group m-t-20\">\n                      <label htmlFor=\"materialtopic\">Title</label>\n                      <input type=\"text\" className=\"form-control required\" id=\"materialtopic\" \n                      onChange={(e) => inputValidity(e, \"topic\")}\n                      name=\"topic\" placeholder=\"Material Title\"\n                      value={fieldData.topic}\n                      />\n                    </div>\n                    <div className=\"form-group form_control_space margin_bottom_1rem m-t-20\">\n                      <label htmlFor=\"materialDescription\">Description</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control required custom_textarea\"\n                        id=\"materialDescription\"\n                        name=\"description\" \n                        onChange={(e) => inputValidity(e)}\n                        value={fieldData.description}\n                        placeholder=\"Add Description\"\n                      />\n                    </div>\n                    <div className=\"form-group m-t-20\">\n                      <label htmlFor=\"subject\">File Type</label>\n                      <select id=\"subject\" name=\"type\" \n                      onChange={(e) => inputValidity(e)}\n                      className=\"form-control\">\n                        <option value=''>Select</option>\n                        <option value='Text'>Text</option>\n                        <option value='Images'>Images</option>\n                        <option value='PDF'>PDF</option>\n                        <option value='PPT'>PPT</option>\n                        <option value='Audios'>Audios</option>\n                        <option value='Doc'>Doc</option>\n                        <option value='Videos'>Videos</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div>\n                  </div>\n                  <div className=\"upload-area upload-drag m-t-20 matAddFix\">\n                    <p className=\"upload-info-text drag-drop\">Drag & Drop your files here</p>\n                    <div className=\"upload-button\">\n                      <input type=\"file\" className=\"upload-input\" name='file_name' \n                      onChange={(e) => inputValidity(e)} accept=\".doc,.pdf,.docx\" \n                      />\n                      <div className=\"display-flex\">\n                        <a href=\"#\" className=\"upload-button-title\">Browse Files</a>\n                        <div className=\"upload-icon\"><i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i></div>\n                      </div>\n                    </div>\n                    <p className=\"upload-hint\">File Format.doc, .Pdf Supported</p>\n                  </div>\n                  <div class=\"clearfix\"></div>\n                  <button className='btn btn-danger add mt-30 matContAdd' form='materialFileData' type=\"submit\" >{editIndex === \"\" ? \"Next\" : \"Update\"}</button> \n                  <div class=\"clearfix\"></div>\n                </form>\n              </div>\n              \n              <div className=\"col-md-6\">\n                <div className=\"nofile\">\n                  {materialFileData.length > 0 &&\n                    <div className=\"file-list\">\n                      <div className=\"col-sm-12 display-flex\">\n                        <div className=\"col-sm-6\">\n                          <p className=\"file-list-texts f-s-16\">Files</p>\n                        </div>\n                        <div className=\"col-sm-6 select-all\">\n                          <input type=\"checkbox\" id=\"select-all\" className=\"check-box\" name=\"select-all\" value=\"\" />\n                          <label htmlFor=\"select-all\" className=\"file-list-texts f-s-14\">Select all</label>\n                        </div>\n                      </div>\n                      \n                      <table className=\"file-names m-l-30\">\n                        {materialFileData.map((item, index) => (\n                          <tr>\n                            <td className=\"file-select-option\">\n                              <input type='checkbox' className=\"check-box\" />\n                            </td>\n                            <td className=\"file-select-option\" onClick={() => editData(index)}>\n                              <div className=\"file-box\"></div>\n                            </td>\n                            <td className=\"file-detail\">\n                              <div className=\"m-l-10\">\n                                <p className=\"file-list-texts f-s-14\">{item.file_name.name}</p>\n                                <p className=\"file-list-texts f-s-12\">{(item.file_name.size / 125000).toFixed(2)} MB</p>\n                                <div className=\"progress\">\n                                  <div className=\"progress-bar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                  </div>\n                                </div>\n                                <span className=\"file-list-texts f-s-10\">70% Complete</span>\n                              </div>\n                            </td>\n                            <td className=\"close-icon\"  onClick={() => removeFiles(index)}>\n                              <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                            </td>\n                          </tr>\n                        ))}\n                      </table>\n                    </div>\n                  }\n                  {materialFileData.length === 0 &&\n                    <img src={process.env.PUBLIC_URL+\"/images/nofile.png\"} alt />\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Modal footer */}\n          <div className=\"modal-footer modal-custom-footer material-modal-footer\">\n            <button type=\"button\" className=\"btn btn-danger cancel hide\" data-dismiss=\"modal\" onClick={() => { resetModal(); props.cancelMaterialModal() }}>Cancel</button>\n            <button type=\"reset\" className=\"btn btn-danger reset hide\" onClick={() => resetModal()}>Reset</button>\n            <button form='my-form' type=\"submit\" className=\"btn btn-danger add hide\">{`${material_id ? 'UPDATE' : 'ADD'}`}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MaterialAdd;"]},"metadata":{},"sourceType":"module"}