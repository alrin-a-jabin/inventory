{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/gamification/schedule/components/AddOrEditGame.js\";\nimport React, { Component } from 'react';\nimport daterangepicker, { dateToday } from 'daterangepicker';\nimport $ from 'jquery';\nexport default class AddOrEditGame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initDatePicker = () => {\n      $('#datePicker').daterangepicker({\n        timePicker: false,\n        autoUpdateInput: true,\n        minDate: '0',\n        locale: {\n          format: 'DD/MM/YYYY'\n        }\n      }, function (start, end, label) {\n        localStorage.setItem('date', JSON.stringify({\n          startDate: start,\n          endDate: end\n        }));\n      });\n    };\n\n    this.getGameTypes = () => {\n      const url = this.props.url_game.GET_GAME_TYPES;\n      this.props.ajaxUtil.sendRequest(url, {}, gameTypes => {\n        if (!gameTypes.status) {\n          this.props.setNotification({\n            message: gameTypes.message,\n            hasError: !gameTypes.status,\n            timestamp: new Date().getTime()\n          });\n        }\n\n        console.log(gameTypes);\n        this.setState({\n          gameTypes: gameTypes.data\n        });\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.getGameList = value => {\n      const url = this.props.url_game.GAME_LIST_BY_TYPE_ID + `?page=1&size=1000&sort=id&status=1&order=DESC&game_type_id=${value}`;\n      this.props.ajaxUtil.sendRequest(url, {}, gameSchedule => {\n        if (!gameSchedule.status) {\n          this.props.setNotification({\n            message: gameSchedule.message,\n            hasError: !gameSchedule.status,\n            timestamp: new Date().getTime()\n          });\n        }\n\n        console.log(gameSchedule.data);\n        this.setState({\n          gameList: gameSchedule.data\n        });\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.handleChange = event => {\n      const value = event.currentTarget.value;\n\n      switch (event.currentTarget.name) {\n        case 'gameType':\n          this.setState({\n            gameType: value\n          });\n          this.getGameList(value);\n          break;\n\n        default:\n          this.setState({\n            [event.currentTarget.name]: value\n          });\n          break;\n      }\n    };\n\n    this.save = () => {\n      if (this.state.gameType.length <= 0 || this.state.game.length <= 0) {\n        this.props.setNotification({\n          message: 'Please Fill Up',\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n        return;\n      }\n\n      if (!localStorage.getItem('date')) {\n        this.props.setNotification({\n          message: 'Please Fill Up',\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n        return;\n      }\n\n      const date = JSON.parse(localStorage.getItem('date'));\n      const data = {\n        game_puzzle_id: this.state.game,\n        start_date: date.startDate,\n        end_date: date.endDate\n      };\n      const url = this.props.url_game.GAME_SCHEDULE;\n      this.props.ajaxUtil.sendRequest(url, data, response => {\n        this.props.setNotification({\n          message: response.message,\n          hasError: !response.status,\n          timestamp: new Date().getTime()\n        });\n\n        if (response.status) {\n          this.props.closeModal();\n        }\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.state = {\n      gameTypes: [],\n      gameType: '',\n      game: '',\n      gameList: [],\n      startDate: '',\n      endDate: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getGameTypes();\n    this.initDatePicker();\n  }\n\n  componentWillUnmount() {\n    localStorage.removeItem('date');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row h-100 d-flex  justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Material Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Game Type\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.handleChange(e),\n      value: this.state.gameType,\n      className: \"form-control required\",\n      name: \"gameType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Select\"), this.state.gameTypes.map(type => /*#__PURE__*/React.createElement(\"option\", {\n      value: type.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, type.game_type_name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Material Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"Games\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.handleChange(e),\n      className: \"form-control required\",\n      name: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"select\"), this.state.gameList.map(type => /*#__PURE__*/React.createElement(\"option\", {\n      value: type.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, type.game_name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"Date Range Picker\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"datePicker\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 text-right P-0\",\n      style: {\n        'alignSelf': 'flex-end'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger cancel hide\",\n      onClick: this.props.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger reset hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger add hide\",\n      onClick: this.save,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Add\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/gamification/schedule/components/AddOrEditGame.js"],"names":["React","Component","daterangepicker","dateToday","$","AddOrEditGame","constructor","props","initDatePicker","timePicker","autoUpdateInput","minDate","locale","format","start","end","label","localStorage","setItem","JSON","stringify","startDate","endDate","getGameTypes","url","url_game","GET_GAME_TYPES","ajaxUtil","sendRequest","gameTypes","status","setNotification","message","hasError","timestamp","Date","getTime","console","log","setState","data","loadingFunction","method","isShowSuccess","getGameList","value","GAME_LIST_BY_TYPE_ID","gameSchedule","gameList","handleChange","event","currentTarget","name","gameType","save","state","length","game","getItem","date","parse","game_puzzle_id","start_date","end_date","GAME_SCHEDULE","response","closeModal","componentDidMount","componentWillUnmount","removeItem","render","e","map","type","id","game_type_name","game_name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport daterangepicker, { dateToday } from 'daterangepicker';\nimport $ from 'jquery';\nexport default class AddOrEditGame extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameTypes: [],\n      gameType: '',\n      game: '',\n      gameList: [],\n      startDate: '',\n      endDate: '',\n    };\n  }\n  componentDidMount() {\n    this.getGameTypes();\n    this.initDatePicker();\n  }\n  initDatePicker = () => {\n    $('#datePicker').daterangepicker({\n      timePicker: false,\n      autoUpdateInput: true,\n      minDate: '0',\n      locale: {\n        format: 'DD/MM/YYYY'\n      }\n    }, function (start, end, label) {\n      localStorage.setItem('date', JSON.stringify({ startDate: start, endDate: end }))\n    });\n  }\n  componentWillUnmount() {\n    localStorage.removeItem('date')\n  }\n  getGameTypes = () => {\n    const url = this.props.url_game.GET_GAME_TYPES\n    this.props.ajaxUtil.sendRequest(url, {}, gameTypes => {\n      if (!gameTypes.status) {\n        this.props.setNotification({\n          message: gameTypes.message,\n          hasError: !gameTypes.status,\n          timestamp: new Date().getTime()\n        });\n      }\n      console.log(gameTypes)\n      this.setState({ gameTypes: gameTypes.data });\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n\n  getGameList = (value) => {\n    const url = this.props.url_game.GAME_LIST_BY_TYPE_ID + `?page=1&size=1000&sort=id&status=1&order=DESC&game_type_id=${value}`;\n    this.props.ajaxUtil.sendRequest(url, {}, gameSchedule => {\n      if (!gameSchedule.status) {\n        this.props.setNotification({\n          message: gameSchedule.message,\n          hasError: !gameSchedule.status,\n          timestamp: new Date().getTime()\n        });\n      }\n      console.log(gameSchedule.data)\n      this.setState({ gameList: gameSchedule.data });\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  handleChange = (event) => {\n    const value = event.currentTarget.value;\n    switch (event.currentTarget.name) {\n      case 'gameType':\n        this.setState({ gameType: value });\n        this.getGameList(value)\n        break;\n\n      default:\n        this.setState({ [event.currentTarget.name]: value })\n        break;\n    }\n  }\n\n  save = () => {\n    if (this.state.gameType.length <= 0 || this.state.game.length <= 0) {\n      this.props.setNotification({\n        message: 'Please Fill Up',\n        hasError: true,\n        timestamp: new Date().getTime()\n      });\n      return;\n    }\n    if (!localStorage.getItem('date')) {\n      this.props.setNotification({\n        message: 'Please Fill Up',\n        hasError: true,\n        timestamp: new Date().getTime()\n      });\n      return;\n    }\n    const date = JSON.parse(localStorage.getItem('date'));\n    const data = {\n      game_puzzle_id:this.state.game,\n      start_date: date.startDate,\n      end_date:date.endDate\n    };\n    const url = this.props.url_game.GAME_SCHEDULE;\n    this.props.ajaxUtil.sendRequest(url, data, response => {\n      this.props.setNotification({\n        message: response.message,\n        hasError: !response.status,\n        timestamp: new Date().getTime()\n      });\n      if (response.status) {\n        this.props.closeModal();\n      }\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid h-100\">\n        <div className=\"row h-100 d-flex  justify-content-between\">\n          <div className=\"col-md-12\">\n            <div className=\"form-group\">\n              <label htmlFor=\"Material Name\">Game Type</label>\n              <select onChange={(e) => this.handleChange(e)} value={this.state.gameType} className=\"form-control required\" name=\"gameType\">\n                <option value=\"\">Select</option>\n                {this.state.gameTypes.map((type) => (\n                  <option value={type.id}>{type.game_type_name}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"Material Name\">Games</label>\n              <select onChange={(e) => this.handleChange(e)} className=\"form-control required\" name=\"game\">\n                <option value=\"\">select</option>\n                {this.state.gameList.map((type) => (\n                  <option value={type.id}>{type.game_name}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label>Date Range Picker</label>\n              <input className=\"form-control\" id=\"datePicker\" type=\"text\" />\n            </div>\n          </div>\n          <div className=\"col-md-12 text-right P-0\" style={{ 'alignSelf': 'flex-end' }}>\n            <button type=\"button\" className=\"btn btn-danger cancel hide\" onClick={this.props.closeModal}>Cancel</button>\n            <button type=\"button\" className=\"btn btn-danger reset hide\" >Reset</button>\n            <button type=\"button\" className=\"btn btn-danger add hide\" onClick={this.save}>Add</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}