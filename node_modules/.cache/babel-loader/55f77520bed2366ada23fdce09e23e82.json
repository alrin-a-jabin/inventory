{"ast":null,"code":"var _jsxFileName = \"/home/alrin/Downloads/INVENTORY22/src/components/inventory/allocate-file/components/partials/RenderAllocationFileListTable.js\";\nimport React from 'react';\nexport default function RenderAllocationFileListTable(props) {\n  let response = [];\n\n  if (props.data.length <= 0) {\n    response.push(React.createElement(\"tr\", {\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"No Data\")));\n  } else {\n    response = props.data.map((row, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, row.fgDescription), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, row.iccid), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, row.mdnNo), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, row.fgCode), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, row.price), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, row.region), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, row.cmdCode), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, row.shipToCode), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, row.shipToAddress), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, row.doDate), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, row.clusterNumber), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, row.cmdDescription), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, row.doNumber), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, row.imeiNo), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, row.channelNumber), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, row.customerGroup), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, row.masterBoxId), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, row.boxId), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, row.poNumber)));\n  }\n\n  return response;\n}","map":{"version":3,"sources":["/home/alrin/Downloads/INVENTORY22/src/components/inventory/allocate-file/components/partials/RenderAllocationFileListTable.js"],"names":["React","RenderAllocationFileListTable","props","response","data","length","push","map","row","index","fgDescription","iccid","mdnNo","fgCode","price","region","cmdCode","shipToCode","shipToAddress","doDate","clusterNumber","cmdDescription","doNumber","imeiNo","channelNumber","customerGroup","masterBoxId","boxId","poNumber"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,6BAAT,CAAuCC,KAAvC,EAA8C;AAC3D,MAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAID,KAAK,CAACE,IAAN,CAAWC,MAAX,IAAqB,CAAzB,EAA4B;AAC1BF,IAAAA,QAAQ,CAACG,IAAT,CACE;AAAI,MAAA,GAAG,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,OAAO,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD,GAND,MAMO;AACLH,IAAAA,QAAQ,GAAGD,KAAK,CAACE,IAAN,CAAWG,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,KACxB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,GAAG,CAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,GAAG,CAACE,aAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,GAAG,CAACG,KAAT,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,GAAG,CAACI,KAAT,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,GAAG,CAACK,MAAT,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,GAAG,CAACM,KAAT,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,GAAG,CAACO,MAAT,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMP,GAAG,CAACQ,OAAV,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,GAAG,CAACS,UAAT,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,GAAG,CAACU,aAAT,CAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,GAAG,CAACW,MAAT,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,GAAG,CAACY,aAAT,CAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKZ,GAAG,CAACa,cAAT,CAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKb,GAAG,CAACc,QAAT,CAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKd,GAAG,CAACe,MAAT,CAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKf,GAAG,CAACgB,aAAT,CAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhB,GAAG,CAACiB,aAAT,CAjBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKjB,GAAG,CAACkB,WAAT,CAlBF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKlB,GAAG,CAACmB,KAAT,CAnBF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKnB,GAAG,CAACoB,QAAT,CApBF,CADS,CAAX;AAwBD;;AACD,SACEzB,QADF;AAGD","sourcesContent":["import React from 'react';\n\nexport default function RenderAllocationFileListTable(props) {\n  let response = [];\n \n  if (props.data.length <= 0) {\n    response.push(\n      <tr key=\"1\">\n        <td colSpan=\"12\">No Data</td>\n      </tr>\n    )\n  } else {\n    response = props.data.map((row, index) => (\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td>{row.fgDescription}</td>\n        <td>{row.iccid}</td>\n        <td>{row.mdnNo}</td>\n        <td>{row.fgCode}</td>\n        <td>{row.price}</td>\n        <td>{row.region}</td>\n        <td>{ row.cmdCode }</td>\n        <td>{row.shipToCode}</td>\n        <td>{row.shipToAddress}</td>\n        <td>{row.doDate}</td>\n        <td>{row.clusterNumber }</td>\n        <td>{row.cmdDescription}</td>\n        <td>{row.doNumber}</td>\n        <td>{row.imeiNo}</td>\n        <td>{row.channelNumber}</td>\n        <td>{row.customerGroup}</td>\n        <td>{row.masterBoxId}</td>\n        <td>{row.boxId}</td>\n        <td>{row.poNumber}</td>\n      </tr>\n    ))\n  }\n  return (\n    response\n  )\n}"]},"metadata":{},"sourceType":"module"}