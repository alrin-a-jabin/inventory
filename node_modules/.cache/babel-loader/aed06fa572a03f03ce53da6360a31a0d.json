{"ast":null,"code":"// import React, { Component } from \"react\";\n// import { Container, Breadcrumb, BreadcrumbItem, Row, Col } from \"reactstrap\";\n// import { Header, Notification, Alert, Loader } from '@6d-ui/ui-components';\n// import { withRouter } from 'react-router'\n// import { MENU_DETAILS, PRIVILIAGES } from \"../../util/Privilages\";\n// import { connect } from \"react-redux\";\n// import { Routes } from './sub/Routes'\n// import { setModalPopup, logOut, addToNotification, removeFromNotification,clearAllNotification } from '../../actions';\n// import { store } from '../../index';\n// import SideMenu from './SideMenu';\n// import ResponsiveContainer from \"../util/ResponsiveContainer\";\n// import {FULLSCRREN_PATHS} from '../../util/Constants';\n// import _ from 'lodash';\n// const user_name = 'Development mode';\n// const ldap_User = true;\n// const privilages = [1200,1201,1202,1203];\n// const userId = 2000;\n// const userDetails = [];\n// const designationId = 1;\n// const channelType = 1;\n// const entityId = 1;\n// const areaId = 1;\n// class Home extends Component {\n//     constructor(props) {\n//         super(props);\n//         if(this.props.login.userDetails != null){\n//             user_name=this.props.login.userDetails.name;\n//             ldap_User=this.props.login.userDetails.ldapUser;\n//             privilages=this.props.login.userDetails.privilages;\n//             userId=this.props.login.userDetails.userId;\n//             userDetails=this.props.login.userDetails;\n//             designationId=this.props.login.userDetails.designationId;\n//             channelType=this.props.login.userDetails.channelType;\n//             entityId=this.props.login.userDetails.entityId;\n//             areaId=this.props.login.userDetails.areaId;\n//         }\n//         this.state = {\n//             isSideNavShown:FULLSCRREN_PATHS.includes(this.props.location.pathname)?false:true,\n//             isNavMouseOver:FULLSCRREN_PATHS.includes(this.props.location.pathname)?true:false,\n//             isLoggedIn: false,\n//             isFooterDiv:true,\n//             footerText:\"Powered by Smartfren\",\n//             MENU_DETAILS,\n//             HEADER_BUTTONS: [\n//                 {\n//                     id: 1,\n//                     type: 1,\n//                     icon: 'fa-bell',\n//                     animatedIcon: 'fa-bell faa-ring animated faa-slow'\n//                 },\n//                 {\n//                     id: 2,\n//                     type: 2,\n//                     icon: 'fa-user-circle-o',\n//                     subIcon: 'fa-user-o',\n//                     subHeader: user_name,\n//                     subItems: ldap_User?[\n//                         {\n//                             id: 23,\n//                             name: 'Sign Out',\n//                             icon: 'fa-sign-out'\n//                         },\n//                     ]:[\n//                         {\n//                             id: 22,\n//                             name: 'Change Password',\n//                             icon: 'fa-key'\n//                         // },\n//                         // {\n//                         //     id: 24,\n//                         //     name: 'Change Pin',\n//                         //     icon: 'fa-key'\n//                         },\n//                         {\n//                             id: 23,\n//                             name: 'Sign Out',\n//                             icon: 'fa-sign-out'\n//                         },\n//                     ]\n//                 }\n//             ],\n//         };\n//         this.toggleSideNav = this.toggleSideNav.bind(this);\n//         this.route = this.route.bind(this);\n//         this.onNavMouseOver=this.onNavMouseOver.bind(this);\n//         this.onNavMouseRemove=this.onNavMouseRemove.bind(this);\n//     }\n//     componentWillMount(){\n//     }\n//     componentDidMount(){\n//         let that = this;\n//         const {login}=this.props;\n//         window.scrollTo(0, 0);\n//     }\n//     toggleSideNav() {\n//         this.setState({ isSideNavShown: this.state.isNavMouseOver,isNavMouseOver:!this.state.isNavMouseOver });\n//     }\n//     route(id, link) {\n//         if (this.props.location.pathname !== link)\n//             this.props.history.push(link);\n//         else{\n//             this.props.history.replace(`/_refresh`); // this is to rerender the route\n//             setTimeout(() => {\n//                 this.props.history.replace(link);\n//             });\n//         }         \n//     }\n//     removeFromExportArray = id => {\n//         this.props.removeFromNotification(id);\n//     }\n//     onHeaderItemClick(menuId, SubMenuId) {\n//         if (menuId === 2 && SubMenuId === 22) {\n//             this.route(menuId, '/changePswd');\n//         }\n//         if (menuId === 2 && SubMenuId === 23) {\n//             store.dispatch(clearAllNotification());\n//             store.dispatch(logOut());\n//         }\n//         if(menuId ===2 && SubMenuId ===24){\n//             this.route(menuId, '/changePin');\n//         }\n//     }\n//     exportResponseHandler = (exportResponse, item, fileName) => {\n//         if(exportResponse) {\n//             const { headers } = exportResponse;\n//             const contentType = headers['content-type'];\n//             let fileType = 'xls';\n//             if(item && item.type) {\n//                 fileType = item.type;\n//             }else {\n//                 if(item.label) {\n//                     switch(item.label.toLowerCase()) {\n//                         case 'excel':\n//                             fileType = 'xls'; break;\n//                         case 'csv':\n//                             fileType = 'csv'; break;\n//                         default: break;\n//                     }\n//                 }\n//             }\n//             if(fileName)\n//                 fileName = fileName.endsWith(\"-\") ? (fileName + Date.now()) : (fileName + \"-\" + Date.now());\n//             else \n//                 fileName = Date.now();\n//             fileName = fileName + \".\" + fileType;\n//             this.props.addToNotification({\n//                 id: (+ new Date() + Math.floor(Math.random() * 999999)).toString(36),\n//                 message: fileName,\n//                 url: window.URL.createObjectURL(exportResponse.data),\n//                 downloadable: true\n//             });\n//         }\n//     }\n//     onNavMouseOver(){\n//         this.setState({isSideNavShown:true})\n//     } \n//     onNavMouseRemove(){\n//         this.setState({isSideNavShown:false})\n//     } \n//     render() {\n//         const getBreadCrumb = () => {\n//             if (this.props.breadcrumb && this.props.breadCrumb.length > 0) {\n//                 return (\n//                     <Container className=\"main_breadCrumb_container\">\n//                         <Row>\n//                             <Col>\n//                                 <Breadcrumb\n//                                     className=\"main_breadCrumb\">\n//                                     <BreadcrumbItem>\n//                                         <i className=\"fa fa-home\" />\n//                                     </BreadcrumbItem>\n//                                     <BreadcrumbItem active>Dash Board</BreadcrumbItem>\n//                                 </Breadcrumb>\n//                             </Col>\n//                         </Row>\n//                     </Container>\n//                 );\n//             }\n//         };\n//         const sideNavStyle = {\n//             width: this.state.isSideNavShown ? '202px' : '60px'\n//         };\n//         return (\n//             <div>\n//                 <div className=\"home-main-div\">\n//                     <div className=\"side-nav-menu\" style={sideNavStyle}>\n//                         <SideMenu\n//                             currentPath={this.props.location.pathname}\n//                             privilages={privilages}\n//                             route={this.route}\n//                             menus={this.state.MENU_DETAILS}\n//                             logo={`${process.env.PUBLIC_URL}/images/logo/6d-logo.png`}\n//                             toggleSideNav={this.toggleSideNav}\n//                             isFooterDiv={this.state.isFooterDiv}\n//                             footerText={this.state.footerText}\n//                             isNavShown={this.state.isSideNavShown}\n//                             isNavMouseOver={this.state.isNavMouseOver}\n//                             onNavMouseOver={this.onNavMouseOver}\n//                             onNavMouseRemove={this.onNavMouseRemove}\n//                             redirectPath=\"/home\"\n//                         />\n//                     </div>\n//                     <div className=\"main-content-div\">\n//                         <HeaderContainer\n//                             onHeaderItemClick={this.onHeaderItemClick.bind(this)}\n//                             items={this.state.HEADER_BUTTONS}\n//                              header={this.props.header}\n//                             toggleSideNav={this.toggleSideNav}\n//                             hideMenuToggle={true}\n//                             removeFromExport={this.removeFromExportArray.bind(this)}\n//                         />\n//                         <main style={{ minHeight: window.innerHeight - 70 }}>\n//                             <ResponsiveContainer style={{ overflowX: 'scroll', overflow: 'auto', position: 'relative', backgroundColor:'#ffffff' }} offset={70}>\n//                                 {getBreadCrumb()}\n//                                 <div className=\"main-container\" style={{minHeight: '100%'}}>\n//                                     {/*Routes Comes HERE*/}\n//                                     <Routes\n//                                         userid={userId}\n//                                         loggedInUser={this.props.login.userDetails}\n//                                         privilages={privilages}\n//                                         designationId={designationId}\n//                                         userChannelType={channelType}\n//                                         userEntityType={entityId}\n//                                         areaId={areaId}\n//                                         exportResponseHandler={this.exportResponseHandler}\n//                                     />\n//                                 </div>\n//                                 <Notification\n//                                     toast={this.props.toast}\n//                                 />\n//                                 <AlertContainer\n//                                     setModalPopup={this.props.setModalPopup}\n//                                     modal={this.props.modal}\n//                                 />\n//                                 <Loader\n//                                         {...this.props.loader}\n//                                     />\n//                             </ResponsiveContainer>\n//                         </main>\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// function mapStateToProps(state) {\n//     return {\n//         login: state.login,\n//         breadcrumb: state.breadcrumb,\n//         toast: state.toast,\n//         loader: state.loader\n//     };\n// }\n// const AlertContainer = connect(({modal}) => ({modal}))(props => <Alert {...props}/>);\n// const HeaderContainer = connect(({header}) => ({header}))(props => <Header {...props}/>);\n// export default withRouter(connect(mapStateToProps, { setModalPopup, addToNotification, removeFromNotification })(Home));\n// import React, { Component } from \"react\";\n// import { Container, Breadcrumb, BreadcrumbItem, Row, Col } from \"reactstrap\";\n// import { Header, Notification, Alert, Loader } from '@6d-ui/ui-components';\n// import { withRouter } from 'react-router'\n// import { MENU_DETAILS, PRIVILIAGES } from \"../../util/Privilages\";\n// import { connect } from \"react-redux\";\n// import { Routes } from './sub/Routes'\n// import { setModalPopup, logOut, addToNotification, removeFromNotification,clearAllNotification } from '../../actions';\n// import { store } from '../../index';\n// import SideMenu from './SideMenu';\n// import ResponsiveContainer from \"../util/ResponsiveContainer\";\n// import {FULLSCRREN_PATHS} from '../../util/Constants';\n// import _ from 'lodash';\n// class Home extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             isSideNavShown:FULLSCRREN_PATHS.includes(this.props.location.pathname)?false:true,\n//             isNavMouseOver:FULLSCRREN_PATHS.includes(this.props.location.pathname)?true:false,\n//             isLoggedIn: false,\n//             isFooterDiv:true,\n//             footerText:\"Powered by Smartfren\",\n//             MENU_DETAILS,\n//             HEADER_BUTTONS: [\n//                 {\n//                     id: 1,\n//                     type: 1,\n//                     icon: 'fa-bell',\n//                     animatedIcon: 'fa-bell faa-ring animated faa-slow'\n//                 },\n//                 {\n//                     id: 2,\n//                     type: 2,\n//                     icon: 'fa-user-circle-o',\n//                     subIcon: 'fa-user-o',\n//                     subHeader: this.props.login.userDetails.name,\n//                     subItems: this.props.login.userDetails.ldapUser?[\n//                         {\n//                             id: 23,\n//                             name: 'Sign Out',\n//                             icon: 'fa-sign-out'\n//                         },\n//                     ]:[\n//                         {\n//                             id: 22,\n//                             name: 'Change Password',\n//                             icon: 'fa-key'\n//                         // },\n//                         // {\n//                         //     id: 24,\n//                         //     name: 'Change Pin',\n//                         //     icon: 'fa-key'\n//                         },\n//                         {\n//                             id: 23,\n//                             name: 'Sign Out',\n//                             icon: 'fa-sign-out'\n//                         },\n//                     ]\n//                 }\n//             ],\n//         };\n//         this.toggleSideNav = this.toggleSideNav.bind(this);\n//         this.route = this.route.bind(this);\n//         this.onNavMouseOver=this.onNavMouseOver.bind(this);\n//         this.onNavMouseRemove=this.onNavMouseRemove.bind(this);\n//     }\n//     componentWillMount(){\n//     }\n//     componentDidMount(){\n//         let that = this;\n//         const {login}=this.props;\n//         window.scrollTo(0, 0);\n//     }\n//     toggleSideNav() {\n//         this.setState({ isSideNavShown: this.state.isNavMouseOver,isNavMouseOver:!this.state.isNavMouseOver });\n//     }\n//     route(id, link) {\n//         if (this.props.location.pathname !== link)\n//             this.props.history.push(link);\n//         else{\n//             this.props.history.replace(`/_refresh`); // this is to rerender the route\n//             setTimeout(() => {\n//                 this.props.history.replace(link);\n//             });\n//         }         \n//     }\n//     removeFromExportArray = id => {\n//         this.props.removeFromNotification(id);\n//     }\n//     onHeaderItemClick(menuId, SubMenuId) {\n//         if (menuId === 2 && SubMenuId === 22) {\n//             this.route(menuId, '/changePswd');\n//         }\n//         if (menuId === 2 && SubMenuId === 23) {\n//             store.dispatch(clearAllNotification());\n//             store.dispatch(logOut());\n//         }\n//         if(menuId ===2 && SubMenuId ===24){\n//             this.route(menuId, '/changePin');\n//         }\n//     }\n//     exportResponseHandler = (exportResponse, item, fileName) => {\n//         if(exportResponse) {\n//             const { headers } = exportResponse;\n//             const contentType = headers['content-type'];\n//             let fileType = 'xls';\n//             if(item && item.type) {\n//                 fileType = item.type;\n//             }else {\n//                 if(item.label) {\n//                     switch(item.label.toLowerCase()) {\n//                         case 'excel':\n//                             fileType = 'xls'; break;\n//                         case 'csv':\n//                             fileType = 'csv'; break;\n//                         default: break;\n//                     }\n//                 }\n//             }\n//             if(fileName)\n//                 fileName = fileName.endsWith(\"-\") ? (fileName + Date.now()) : (fileName + \"-\" + Date.now());\n//             else \n//                 fileName = Date.now();\n//             fileName = fileName + \".\" + fileType;\n//             this.props.addToNotification({\n//                 id: (+ new Date() + Math.floor(Math.random() * 999999)).toString(36),\n//                 message: fileName,\n//                 url: window.URL.createObjectURL(exportResponse.data),\n//                 downloadable: true\n//             });\n//         }\n//     }\n//     onNavMouseOver(){\n//         this.setState({isSideNavShown:true})\n//     } \n//     onNavMouseRemove(){\n//         this.setState({isSideNavShown:false})\n//     } \n//     render() {\n//         const getBreadCrumb = () => {\n//             if (this.props.breadcrumb && this.props.breadCrumb.length > 0) {\n//                 return (\n//                     <Container className=\"main_breadCrumb_container\">\n//                         <Row>\n//                             <Col>\n//                                 <Breadcrumb\n//                                     className=\"main_breadCrumb\">\n//                                     <BreadcrumbItem>\n//                                         <i className=\"fa fa-home\" />\n//                                     </BreadcrumbItem>\n//                                     <BreadcrumbItem active>Dash Board</BreadcrumbItem>\n//                                 </Breadcrumb>\n//                             </Col>\n//                         </Row>\n//                     </Container>\n//                 );\n//             }\n//         };\n//         const sideNavStyle = {\n//             width: this.state.isSideNavShown ? '202px' : '60px'\n//         };\n//         return (\n//             <div>\n//                 <div className=\"home-main-div\">\n//                     <div className=\"side-nav-menu\" style={sideNavStyle}>\n//                         <SideMenu\n//                             currentPath={this.props.location.pathname}\n//                             privilages={this.props.login.userDetails.privilages}\n//                             route={this.route}\n//                             menus={this.state.MENU_DETAILS}\n//                             logo={`${process.env.PUBLIC_URL}/images/logo/6d-logo.png`}\n//                             toggleSideNav={this.toggleSideNav}\n//                             isFooterDiv={this.state.isFooterDiv}\n//                             footerText={this.state.footerText}\n//                             isNavShown={this.state.isSideNavShown}\n//                             isNavMouseOver={this.state.isNavMouseOver}\n//                             onNavMouseOver={this.onNavMouseOver}\n//                             onNavMouseRemove={this.onNavMouseRemove}\n//                             redirectPath=\"/home\"\n//                         />\n//                     </div>\n//                     <div className=\"main-content-div\">\n//                         <HeaderContainer\n//                             onHeaderItemClick={this.onHeaderItemClick.bind(this)}\n//                             items={this.state.HEADER_BUTTONS}\n//                              header={this.props.header}\n//                             toggleSideNav={this.toggleSideNav}\n//                             hideMenuToggle={true}\n//                             removeFromExport={this.removeFromExportArray.bind(this)}\n//                         />\n//                         <main style={{ minHeight: window.innerHeight - 70 }}>\n//                             <ResponsiveContainer style={{ overflowX: 'scroll', overflow: 'auto', position: 'relative', backgroundColor:'#ffffff' }} offset={70}>\n//                                 {getBreadCrumb()}\n//                                 <div className=\"main-container\" style={{minHeight: '100%'}}>\n//                                     {/*Routes Comes HERE*/}\n//                                     <Routes\n//                                         userid={this.props.login.userDetails.userId}\n//                                         loggedInUser={this.props.login.userDetails}\n//                                         privilages={this.props.login.userDetails.privilages}\n//                                         designationId={this.props.login.userDetails.designationId}\n//                                         userChannelType={this.props.login.userDetails.channelType}\n//                                         userEntityType={this.props.login.userDetails.entityId}\n//                                         areaId={this.props.login.userDetails.areaId}\n//                                         exportResponseHandler={this.exportResponseHandler}\n//                                     />\n//                                 </div>\n//                                 <Notification\n//                                     toast={this.props.toast}\n//                                 />\n//                                 <AlertContainer\n//                                     setModalPopup={this.props.setModalPopup}\n//                                     modal={this.props.modal}\n//                                 />\n//                                 <Loader\n//                                         {...this.props.loader}\n//                                     />\n//                             </ResponsiveContainer>\n//                         </main>\n//                     </div>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// function mapStateToProps(state) {\n//     return {\n//         login: state.login,\n//         breadcrumb: state.breadcrumb,\n//         toast: state.toast,\n//         loader: state.loader\n//     };\n// }\n// const AlertContainer = connect(({modal}) => ({modal}))(props => <Alert {...props}/>);\n// const HeaderContainer = connect(({header}) => ({header}))(props => <Header {...props}/>);\n// export default withRouter(connect(mapStateToProps, { setModalPopup, addToNotification, removeFromNotification })(Home));","map":{"version":3,"sources":["/home/alrin/Downloads/INVENTORY22/src/components/home/Home.js"],"names":[],"mappingsysourcesContent":["// import React, { Component } from \"react\";\r\n// import { Container, Breadcrumb, BreadcrumbItem, Row, Col } from \"reactstrap\";\r\n// import { Header, Notification, Alert, Loader } from '@6d-ui/ui-components';\r\n// import { withRouter } from 'react-router'\r\n// import { MENU_DETAILS, PRIVILIAGES } from \"../../util/Privilages\";\r\n// import { connect } from \"react-redux\";\r\n// import { Routes } from './sub/Routes'\r\n// import { setModalPopup, logOut, addToNotification, removeFromNotification,clearAllNotification } from '../../actions';\r\n// import { store } from '../../index';\r\n// import SideMenu from './SideMenu';\r\n// import ResponsiveContainer from \"../util/ResponsiveContainer\";\r\n// import {FULLSCRREN_PATHS} from '../../util/Constants';\r\n// import _ from 'lodash';\r\n\r\n// const user_name = 'Development mode';\r\n// const ldap_User = true;\r\n// const privilages = [1200,1201,1202,1203];\r\n// const userId = 2000;\r\n// const userDetails = [];\r\n// const designationId = 1;\r\n// const channelType = 1;\r\n// const entityId = 1;\r\n// const areaId = 1;\r\n// class Home extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         if(this.props.login.userDetails != null){\r\n//             user_name=this.props.login.userDetails.name;\r\n//             ldap_User=this.props.login.userDetails.ldapUser;\r\n//             privilages=this.props.login.userDetails.privilages;\r\n//             userId=this.props.login.userDetails.userId;\r\n//             userDetails=this.props.login.userDetails;\r\n//             designationId=this.props.login.userDetails.designationId;\r\n//             channelType=this.props.login.userDetails.channelType;\r\n//             entityId=this.props.login.userDetails.entityId;\r\n//             areaId=this.props.login.userDetails.areaId;\r\n//         }\r\n//         this.state = {\r\n//             isSideNavShown:FULLSCRREN_PATHS.includes(this.props.location.pathname)?false:true,\r\n//             isNavMouseOver:FULLSCRREN_PATHS.includes(this.props.location.pathname)?true:false,\r\n//             isLoggedIn: false,\r\n//             isFooterDiv:true,\r\n//             footerText:\"Powered by Smartfren\",\r\n//             MENU_DETAILS,\r\n//             HEADER_BUTTONS: [\r\n//                 {\r\n//                     id: 1,\r\n//                     type: 1,\r\n//                     icon: 'fa-bell',\r\n//                     animatedIcon: 'fa-bell faa-ring animated faa-slow'\r\n//                 },\r\n//                 {\r\n//                     id: 2,\r\n//                     type: 2,\r\n//                     icon: 'fa-user-circle-o',\r\n//                     subIcon: 'fa-user-o',\r\n//                     subHeader: user_name,\r\n//                     subItems: ldap_User?[\r\n//                         {\r\n//                             id: 23,\r\n//                             name: 'Sign Out',\r\n//                             icon: 'fa-sign-out'\r\n//                         },\r\n//                     ]:[\r\n//                         {\r\n//                             id: 22,\r\n//                             name: 'Change Password',\r\n//                             icon: 'fa-key'\r\n//                         // },\r\n                       \r\n//                         // {\r\n//                         //     id: 24,\r\n//                         //     name: 'Change Pin',\r\n//                         //     icon: 'fa-key'\r\n//                         },\r\n//                         {\r\n//                             id: 23,\r\n//                             name: 'Sign Out',\r\n//                             icon: 'fa-sign-out'\r\n//                         },\r\n//                     ]\r\n\r\n//                 }\r\n//             ],\r\n//         };\r\n//         this.toggleSideNav = this.toggleSideNav.bind(this);\r\n//         this.route = this.route.bind(this);\r\n//         this.onNavMouseOver=this.onNavMouseOver.bind(this);\r\n//         this.onNavMouseRemove=this.onNavMouseRemove.bind(this);\r\n//     }\r\n\r\n//     componentWillMount(){\r\n//     }\r\n//     componentDidMount(){\r\n//         let that = this;\r\n//         const {login}=this.props;\r\n//         window.scrollTo(0, 0);\r\n//     }\r\n\r\n\r\n//     toggleSideNav() {\r\n//         this.setState({ isSideNavShown: this.state.isNavMouseOver,isNavMouseOver:!this.state.isNavMouseOver });\r\n//     }\r\n//     route(id, link) {\r\n//         if (this.props.location.pathname !== link)\r\n//             this.props.history.push(link);\r\n//         else{\r\n//             this.props.history.replace(`/_refresh`); // this is to rerender the route\r\n//             setTimeout(() => {\r\n//                 this.props.history.replace(link);\r\n//             });\r\n//         }         \r\n//     }\r\n\r\n//     removeFromExportArray = id => {\r\n//         this.props.removeFromNotification(id);\r\n//     }\r\n\r\n//     onHeaderItemClick(menuId, SubMenuId) {\r\n//         if (menuId === 2 && SubMenuId === 22) {\r\n//             this.route(menuId, '/changePswd');\r\n//         }\r\n//         if (menuId === 2 && SubMenuId === 23) {\r\n//             store.dispatch(clearAllNotification());\r\n//             store.dispatch(logOut());\r\n//         }\r\n//         if(menuId ===2 && SubMenuId ===24){\r\n//             this.route(menuId, '/changePin');\r\n//         }\r\n//     }\r\n//     exportResponseHandler = (exportResponse, item, fileName) => {\r\n//         if(exportResponse) {\r\n//             const { headers } = exportResponse;\r\n//             const contentType = headers['content-type'];\r\n//             let fileType = 'xls';\r\n//             if(item && item.type) {\r\n//                 fileType = item.type;\r\n//             }else {\r\n//                 if(item.label) {\r\n//                     switch(item.label.toLowerCase()) {\r\n//                         case 'excel':\r\n//                             fileType = 'xls'; break;\r\n//                         case 'csv':\r\n//                             fileType = 'csv'; break;\r\n//                         default: break;\r\n//                     }\r\n//                 }\r\n//             }\r\n//             if(fileName)\r\n//                 fileName = fileName.endsWith(\"-\") ? (fileName + Date.now()) : (fileName + \"-\" + Date.now());\r\n//             else \r\n//                 fileName = Date.now();\r\n\r\n//             fileName = fileName + \".\" + fileType;\r\n\r\n//             this.props.addToNotification({\r\n//                 id: (+ new Date() + Math.floor(Math.random() * 999999)).toString(36),\r\n//                 message: fileName,\r\n//                 url: window.URL.createObjectURL(exportResponse.data),\r\n//                 downloadable: true\r\n//             });\r\n//         }\r\n//     }\r\n//     onNavMouseOver(){\r\n//         this.setState({isSideNavShown:true})\r\n//     } \r\n//     onNavMouseRemove(){\r\n//         this.setState({isSideNavShown:false})\r\n//     } \r\n//     render() {\r\n//         const getBreadCrumb = () => {\r\n//             if (this.props.breadcrumb && this.props.breadCrumb.length > 0) {\r\n//                 return (\r\n//                     <Container className=\"main_breadCrumb_container\">\r\n//                         <Row>\r\n//                             <Col>\r\n//                                 <Breadcrumb\r\n//                                     className=\"main_breadCrumb\">\r\n//                                     <BreadcrumbItem>\r\n//                                         <i className=\"fa fa-home\" />\r\n//                                     </BreadcrumbItem>\r\n//                                     <BreadcrumbItem active>Dash Board</BreadcrumbItem>\r\n//                                 </Breadcrumb>\r\n//                             </Col>\r\n//                         </Row>\r\n//                     </Container>\r\n//                 );\r\n//             }\r\n//         };\r\n//         const sideNavStyle = {\r\n//             width: this.state.isSideNavShown ? '202px' : '60px'\r\n//         };\r\n//         return (\r\n//             <div>\r\n//                 <div className=\"home-main-div\">\r\n//                     <div className=\"side-nav-menu\" style={sideNavStyle}>\r\n//                         <SideMenu\r\n//                             currentPath={this.props.location.pathname}\r\n//                             privilages={privilages}\r\n//                             route={this.route}\r\n//                             menus={this.state.MENU_DETAILS}\r\n//                             logo={`${process.env.PUBLIC_URL}/images/logo/6d-logo.png`}\r\n//                             toggleSideNav={this.toggleSideNav}\r\n//                             isFooterDiv={this.state.isFooterDiv}\r\n//                             footerText={this.state.footerText}\r\n//                             isNavShown={this.state.isSideNavShown}\r\n//                             isNavMouseOver={this.state.isNavMouseOver}\r\n//                             onNavMouseOver={this.onNavMouseOver}\r\n//                             onNavMouseRemove={this.onNavMouseRemove}\r\n//                             redirectPath=\"/home\"\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"main-content-div\">\r\n//                         <HeaderContainer\r\n//                             onHeaderItemClick={this.onHeaderItemClick.bind(this)}\r\n//                             items={this.state.HEADER_BUTTONS}\r\n//                              header={this.props.header}\r\n//                             toggleSideNav={this.toggleSideNav}\r\n//                             hideMenuToggle={true}\r\n//                             removeFromExport={this.removeFromExportArray.bind(this)}\r\n//                         />\r\n//                         <main style={{ minHeight: window.innerHeight - 70 }}>\r\n//                             <ResponsiveContainer style={{ overflowX: 'scroll', overflow: 'auto', position: 'relative', backgroundColor:'#ffffff' }} offset={70}>\r\n//                                 {getBreadCrumb()}\r\n//                                 <div className=\"main-container\" style={{minHeight: '100%'}}>\r\n//                                     {/*Routes Comes HERE*/}\r\n//                                     <Routes\r\n//                                         userid={userId}\r\n//                                         loggedInUser={this.props.login.userDetails}\r\n//                                         privilages={privilages}\r\n//                                         designationId={designationId}\r\n//                                         userChannelType={channelType}\r\n//                                         userEntityType={entityId}\r\n//                                         areaId={areaId}\r\n//                                         exportResponseHandler={this.exportResponseHandler}\r\n//                                     />\r\n\r\n//                                 </div>\r\n//                                 <Notification\r\n//                                     toast={this.props.toast}\r\n//                                 />\r\n//                                 <AlertContainer\r\n//                                     setModalPopup={this.props.setModalPopup}\r\n//                                     modal={this.props.modal}\r\n//                                 />\r\n//                                 <Loader\r\n//                                         {...this.props.loader}\r\n//                                     />\r\n//                             </ResponsiveContainer>\r\n                            \r\n//                         </main>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n// function mapStateToProps(state) {\r\n//     return {\r\n//         login: state.login,\r\n//         breadcrumb: state.breadcrumb,\r\n//         toast: state.toast,\r\n//         loader: state.loader\r\n//     };\r\n// }\r\n\r\n// const AlertContainer = connect(({modal}) => ({modal}))(props => <Alert {...props}/>);\r\n// const HeaderContainer = connect(({header}) => ({header}))(props => <Header {...props}/>);\r\n\r\n// export default withRouter(connect(mapStateToProps, { setModalPopup, addToNotification, removeFromNotification })(Home));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import { Container, Breadcrumb, BreadcrumbItem, Row, Col } from \"reactstrap\";\r\n// import { Header, Notification, Alert, Loader } from '@6d-ui/ui-components';\r\n// import { withRouter } from 'react-router'\r\n// import { MENU_DETAILS, PRIVILIAGES } from \"../../util/Privilages\";\r\n// import { connect } from \"react-redux\";\r\n// import { Routes } from './sub/Routes'\r\n// import { setModalPopup, logOut, addToNotification, removeFromNotification,clearAllNotification } from '../../actions';\r\n// import { store } from '../../index';\r\n// import SideMenu from './SideMenu';\r\n// import ResponsiveContainer from \"../util/ResponsiveContainer\";\r\n// import {FULLSCRREN_PATHS} from '../../util/Constants';\r\n// import _ from 'lodash';\r\n\r\n// class Home extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             isSideNavShown:FULLSCRREN_PATHS.includes(this.props.location.pathname)?false:true,\r\n//             isNavMouseOver:FULLSCRREN_PATHS.includes(this.props.location.pathname)?true:false,\r\n//             isLoggedIn: false,\r\n//             isFooterDiv:true,\r\n//             footerText:\"Powered by Smartfren\",\r\n//             MENU_DETAILS,\r\n//             HEADER_BUTTONS: [\r\n//                 {\r\n//                     id: 1,\r\n//                     type: 1,\r\n//                     icon: 'fa-bell',\r\n//                     animatedIcon: 'fa-bell faa-ring animated faa-slow'\r\n//                 },\r\n//                 {\r\n//                     id: 2,\r\n//                     type: 2,\r\n//                     icon: 'fa-user-circle-o',\r\n//                     subIcon: 'fa-user-o',\r\n//                     subHeader: this.props.login.userDetails.name,\r\n//                     subItems: this.props.login.userDetails.ldapUser?[\r\n//                         {\r\n//                             id: 23,\r\n//                             name: 'Sign Out',\r\n//                             icon: 'fa-sign-out'\r\n//                         },\r\n//                     ]:[\r\n//                         {\r\n//                             id: 22,\r\n//                             name: 'Change Password',\r\n//                             icon: 'fa-key'\r\n//                         // },\r\n                       \r\n//                         // {\r\n//                         //     id: 24,\r\n//                         //     name: 'Change Pin',\r\n//                         //     icon: 'fa-key'\r\n//                         },\r\n//                         {\r\n//                             id: 23,\r\n//                             name: 'Sign Out',\r\n//                             icon: 'fa-sign-out'\r\n//                         },\r\n//                     ]\r\n\r\n//                 }\r\n//             ],\r\n//         };\r\n//         this.toggleSideNav = this.toggleSideNav.bind(this);\r\n//         this.route = this.route.bind(this);\r\n//         this.onNavMouseOver=this.onNavMouseOver.bind(this);\r\n//         this.onNavMouseRemove=this.onNavMouseRemove.bind(this);\r\n//     }\r\n\r\n//     componentWillMount(){\r\n//     }\r\n//     componentDidMount(){\r\n//         let that = this;\r\n//         const {login}=this.props;\r\n//         window.scrollTo(0, 0);\r\n//     }\r\n\r\n\r\n//     toggleSideNav() {\r\n//         this.setState({ isSideNavShown: this.state.isNavMouseOver,isNavMouseOver:!this.state.isNavMouseOver });\r\n//     }\r\n//     route(id, link) {\r\n//         if (this.props.location.pathname !== link)\r\n//             this.props.history.push(link);\r\n//         else{\r\n//             this.props.history.replace(`/_refresh`); // this is to rerender the route\r\n//             setTimeout(() => {\r\n//                 this.props.history.replace(link);\r\n//             });\r\n//         }         \r\n//     }\r\n\r\n//     removeFromExportArray = id => {\r\n//         this.props.removeFromNotification(id);\r\n//     }\r\n\r\n//     onHeaderItemClick(menuId, SubMenuId) {\r\n//         if (menuId === 2 && SubMenuId === 22) {\r\n//             this.route(menuId, '/changePswd');\r\n//         }\r\n//         if (menuId === 2 && SubMenuId === 23) {\r\n//             store.dispatch(clearAllNotification());\r\n//             store.dispatch(logOut());\r\n//         }\r\n//         if(menuId ===2 && SubMenuId ===24){\r\n//             this.route(menuId, '/changePin');\r\n//         }\r\n//     }\r\n//     exportResponseHandler = (exportResponse, item, fileName) => {\r\n//         if(exportResponse) {\r\n//             const { headers } = exportResponse;\r\n//             const contentType = headers['content-type'];\r\n//             let fileType = 'xls';\r\n//             if(item && item.type) {\r\n//                 fileType = item.type;\r\n//             }else {\r\n//                 if(item.label) {\r\n//                     switch(item.label.toLowerCase()) {\r\n//                         case 'excel':\r\n//                             fileType = 'xls'; break;\r\n//                         case 'csv':\r\n//                             fileType = 'csv'; break;\r\n//                         default: break;\r\n//                     }\r\n//                 }\r\n//             }\r\n//             if(fileName)\r\n//                 fileName = fileName.endsWith(\"-\") ? (fileName + Date.now()) : (fileName + \"-\" + Date.now());\r\n//             else \r\n//                 fileName = Date.now();\r\n\r\n//             fileName = fileName + \".\" + fileType;\r\n\r\n//             this.props.addToNotification({\r\n//                 id: (+ new Date() + Math.floor(Math.random() * 999999)).toString(36),\r\n//                 message: fileName,\r\n//                 url: window.URL.createObjectURL(exportResponse.data),\r\n//                 downloadable: true\r\n//             });\r\n//         }\r\n//     }\r\n//     onNavMouseOver(){\r\n//         this.setState({isSideNavShown:true})\r\n//     } \r\n//     onNavMouseRemove(){\r\n//         this.setState({isSideNavShown:false})\r\n//     } \r\n//     render() {\r\n//         const getBreadCrumb = () => {\r\n//             if (this.props.breadcrumb && this.props.breadCrumb.length > 0) {\r\n//                 return (\r\n//                     <Container className=\"main_breadCrumb_container\">\r\n//                         <Row>\r\n//                             <Col>\r\n//                                 <Breadcrumb\r\n//                                     className=\"main_breadCrumb\">\r\n//                                     <BreadcrumbItem>\r\n//                                         <i className=\"fa fa-home\" />\r\n//                                     </BreadcrumbItem>\r\n//                                     <BreadcrumbItem active>Dash Board</BreadcrumbItem>\r\n//                                 </Breadcrumb>\r\n//                             </Col>\r\n//                         </Row>\r\n//                     </Container>\r\n//                 );\r\n//             }\r\n//         };\r\n//         const sideNavStyle = {\r\n//             width: this.state.isSideNavShown ? '202px' : '60px'\r\n//         };\r\n//         return (\r\n//             <div>\r\n//                 <div className=\"home-main-div\">\r\n//                     <div className=\"side-nav-menu\" style={sideNavStyle}>\r\n//                         <SideMenu\r\n//                             currentPath={this.props.location.pathname}\r\n//                             privilages={this.props.login.userDetails.privilages}\r\n//                             route={this.route}\r\n//                             menus={this.state.MENU_DETAILS}\r\n//                             logo={`${process.env.PUBLIC_URL}/images/logo/6d-logo.png`}\r\n//                             toggleSideNav={this.toggleSideNav}\r\n//                             isFooterDiv={this.state.isFooterDiv}\r\n//                             footerText={this.state.footerText}\r\n//                             isNavShown={this.state.isSideNavShown}\r\n//                             isNavMouseOver={this.state.isNavMouseOver}\r\n//                             onNavMouseOver={this.onNavMouseOver}\r\n//                             onNavMouseRemove={this.onNavMouseRemove}\r\n//                             redirectPath=\"/home\"\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"main-content-div\">\r\n//                         <HeaderContainer\r\n//                             onHeaderItemClick={this.onHeaderItemClick.bind(this)}\r\n//                             items={this.state.HEADER_BUTTONS}\r\n//                              header={this.props.header}\r\n//                             toggleSideNav={this.toggleSideNav}\r\n//                             hideMenuToggle={true}\r\n//                             removeFromExport={this.removeFromExportArray.bind(this)}\r\n//                         />\r\n//                         <main style={{ minHeight: window.innerHeight - 70 }}>\r\n//                             <ResponsiveContainer style={{ overflowX: 'scroll', overflow: 'auto', position: 'relative', backgroundColor:'#ffffff' }} offset={70}>\r\n//                                 {getBreadCrumb()}\r\n//                                 <div className=\"main-container\" style={{minHeight: '100%'}}>\r\n//                                     {/*Routes Comes HERE*/}\r\n//                                     <Routes\r\n//                                         userid={this.props.login.userDetails.userId}\r\n//                                         loggedInUser={this.props.login.userDetails}\r\n//                                         privilages={this.props.login.userDetails.privilages}\r\n//                                         designationId={this.props.login.userDetails.designationId}\r\n//                                         userChannelType={this.props.login.userDetails.channelType}\r\n//                                         userEntityType={this.props.login.userDetails.entityId}\r\n//                                         areaId={this.props.login.userDetails.areaId}\r\n//                                         exportResponseHandler={this.exportResponseHandler}\r\n//                                     />\r\n\r\n//                                 </div>\r\n//                                 <Notification\r\n//                                     toast={this.props.toast}\r\n//                                 />\r\n//                                 <AlertContainer\r\n//                                     setModalPopup={this.props.setModalPopup}\r\n//                                     modal={this.props.modal}\r\n//                                 />\r\n//                                 <Loader\r\n//                                         {...this.props.loader}\r\n//                                     />\r\n//                             </ResponsiveContainer>\r\n                            \r\n//                         </main>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n// function mapStateToProps(state) {\r\n//     return {\r\n//         login: state.login,\r\n//         breadcrumb: state.breadcrumb,\r\n//         toast: state.toast,\r\n//         loader: state.loader\r\n//     };\r\n// }\r\n\r\n// const AlertContainer = connect(({modal}) => ({modal}))(props => <Alert {...props}/>);\r\n// const HeaderContainer = connect(({header}) => ({header}))(props => <Header {...props}/>);\r\n\r\n// export default withRouter(connect(mapStateToProps, { setModalPopup, addToNotification, removeFromNotification })(Home));\r\n"]},"metadata":{},"sourceType":"module"}