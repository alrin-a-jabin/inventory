{"ast":null,"code":"import { LOGIN, LOGOUT, VALIDATE } from '../util/ActionConstants';\nimport { LOGIN_ERROR_CODES } from '../util/Messages';\nexport default function (state = {}, action) {\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case LOGIN:\n      let login;\n\n      if (payload && payload.status === 200) {\n        login = getLogedInUser(payload);\n      } else {\n        const {\n          response\n        } = payload;\n        const data = response ? response.data || {} : {};\n        login = {\n          respMsg: data.message || LOGIN_ERROR_CODES['generic'],\n          error: data.message || LOGIN_ERROR_CODES['generic'],\n          isLoggedIn: false,\n          userDetails: null,\n          time: new Date().getTime()\n        };\n      }\n      /*            let data = {\"userId\":\"56412077\",\"name\":\"Alex\",\"username\":null,\"email\":\"abc1@gmail.com\",\"authorities\":[{\"authority\":\"1000\"},{\"authority\":\"1001\"}],\"enabled\":true,\"credentialsNonExpired\":true,\"accountNonExpired\":true,\"accountNonLocked\":true};\r\n                 login = {\r\n                     isLoggedIn: true,\r\n                     userDetails: data,\r\n                     respMsg: null\r\n                 } */\n\n\n      return login;\n\n    case LOGOUT:\n      return {\n        isLoggedIn: false,\n        userDetails: null,\n        respMsg: payload.msg || \"You Have Been Logged Out\"\n      };\n\n    case VALIDATE:\n      let validate;\n\n      if (payload && payload.status === 200) {\n        validate = getLogedInUser(payload);\n      } else {\n        validate = {\n          isLoggedIn: false,\n          userDetails: null,\n          time: new Date().getTime()\n        };\n      }\n\n      return validate;\n\n    default:\n      return state;\n  }\n}\n\nfunction getLogedInUser(payload) {\n  const {\n    data\n  } = payload;\n  data.privilages = data.authorities.map(a => parseInt(a.authority));\n  return data.userId ? {\n    isLoggedIn: true,\n    userDetails: data,\n    respMsg: null\n  } : {\n    respMsg: data.message || LOGIN_ERROR_CODES['generic'],\n    isLoggedIn: false,\n    userDetails: null,\n    time: new Date().getTime()\n  };\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/reducers/reducer_login.js"],"names":["LOGIN","LOGOUT","VALIDATE","LOGIN_ERROR_CODES","state","action","payload","type","login","status","getLogedInUser","response","data","respMsg","message","error","isLoggedIn","userDetails","time","Date","getTime","msg","validate","privilages","authorities","map","a","parseInt","authority","userId"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,yBAAxC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,eAAe,UAAUC,KAAK,GAAG,EAAlB,EAAsBC,MAAtB,EAA8B;AAEzC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AACA,UAAQA,MAAM,CAACE,IAAf;AACI,SAAKP,KAAL;AACI,UAAIQ,KAAJ;;AACA,UAAIF,OAAO,IAAIA,OAAO,CAACG,MAAR,KAAmB,GAAlC,EAAuC;AACnCD,QAAAA,KAAK,GAAGE,cAAc,CAACJ,OAAD,CAAtB;AACH,OAFD,MAEO;AACH,cAAM;AAAEK,UAAAA;AAAF,YAAeL,OAArB;AACA,cAAMM,IAAI,GAAGD,QAAQ,GAAGA,QAAQ,CAACC,IAAT,IAAiB,EAApB,GAAyB,EAA9C;AACAJ,QAAAA,KAAK,GAAG;AAEJK,UAAAA,OAAO,EAAED,IAAI,CAACE,OAAL,IAAgBX,iBAAiB,CAAC,SAAD,CAFtC;AAGJY,UAAAA,KAAK,EAAEH,IAAI,CAACE,OAAL,IAAgBX,iBAAiB,CAAC,SAAD,CAHpC;AAIJa,UAAAA,UAAU,EAAE,KAJR;AAKJC,UAAAA,WAAW,EAAE,IALT;AAMJC,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AANF,SAAR;AAQH;AAED;;;;;;;;AAOA,aAAOZ,KAAP;;AAEJ,SAAKP,MAAL;AACI,aAAO;AAAEe,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,WAAW,EAAE,IAAlC;AAAwCJ,QAAAA,OAAO,EAAGP,OAAO,CAACe,GAAR,IAAe;AAAjE,OAAP;;AAEJ,SAAKnB,QAAL;AACI,UAAIoB,QAAJ;;AAEA,UAAIhB,OAAO,IAAIA,OAAO,CAACG,MAAR,KAAmB,GAAlC,EAAuC;AACnCa,QAAAA,QAAQ,GAAGZ,cAAc,CAACJ,OAAD,CAAzB;AACH,OAFD,MAEO;AACHgB,QAAAA,QAAQ,GAAG;AACPN,UAAAA,UAAU,EAAE,KADL;AAEPC,UAAAA,WAAW,EAAE,IAFN;AAGPC,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAHC,SAAX;AAMH;;AAED,aAAOE,QAAP;;AAEJ;AACI,aAAOlB,KAAP;AA/CR;AAkDH;;AAGD,SAASM,cAAT,CAAwBJ,OAAxB,EAAiC;AAC7B,QAAM;AAAEM,IAAAA;AAAF,MAAWN,OAAjB;AACAM,EAAAA,IAAI,CAACW,UAAL,GAAkBX,IAAI,CAACY,WAAL,CAAiBC,GAAjB,CAAqBC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACE,SAAH,CAAlC,CAAlB;AACA,SAAOhB,IAAI,CAACiB,MAAL,GAAc;AACjBb,IAAAA,UAAU,EAAE,IADK;AAEjBC,IAAAA,WAAW,EAAEL,IAFI;AAGjBC,IAAAA,OAAO,EAAE;AAHQ,GAAd,GAIH;AACIA,IAAAA,OAAO,EAAED,IAAI,CAACE,OAAL,IAAgBX,iBAAiB,CAAC,SAAD,CAD9C;AAEIa,IAAAA,UAAU,EAAE,KAFhB;AAGIC,IAAAA,WAAW,EAAE,IAHjB;AAIIC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAJV,GAJJ;AAUH","sourcesContent":["import { LOGIN, LOGOUT, VALIDATE } from '../util/ActionConstants';\r\nimport { LOGIN_ERROR_CODES } from '../util/Messages';\r\n\r\nexport default function (state = {}, action) {\r\n\r\n    const { payload } = action;\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            let login;\r\n            if (payload && payload.status === 200) {\r\n                login = getLogedInUser(payload)\r\n            } else {\r\n                const { response } = payload;\r\n                const data = response ? response.data || {} : {};\r\n                login = {\r\n\r\n                    respMsg: data.message || LOGIN_ERROR_CODES['generic'],\r\n                    error: data.message || LOGIN_ERROR_CODES['generic'],\r\n                    isLoggedIn: false,\r\n                    userDetails: null,\r\n                    time: new Date().getTime()\r\n                }\r\n            }\r\n\r\n            /*            let data = {\"userId\":\"56412077\",\"name\":\"Alex\",\"username\":null,\"email\":\"abc1@gmail.com\",\"authorities\":[{\"authority\":\"1000\"},{\"authority\":\"1001\"}],\"enabled\":true,\"credentialsNonExpired\":true,\"accountNonExpired\":true,\"accountNonLocked\":true};\r\n                       login = {\r\n                           isLoggedIn: true,\r\n                           userDetails: data,\r\n                           respMsg: null\r\n                       } */\r\n\r\n            return login;\r\n\r\n        case LOGOUT:\r\n            return { isLoggedIn: false, userDetails: null, respMsg:  payload.msg || \"You Have Been Logged Out\" }\r\n\r\n        case VALIDATE:\r\n            let validate;\r\n\r\n            if (payload && payload.status === 200) {\r\n                validate = getLogedInUser(payload);\r\n            } else {\r\n                validate = {\r\n                    isLoggedIn: false,\r\n                    userDetails: null,\r\n                    time: new Date().getTime()\r\n                }\r\n\r\n            }\r\n\r\n            return validate;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction getLogedInUser(payload) {\r\n    const { data } = payload;\r\n    data.privilages = data.authorities.map(a => parseInt(a.authority));\r\n    return data.userId ? {\r\n        isLoggedIn: true,\r\n        userDetails: data,\r\n        respMsg: null\r\n    } : {\r\n            respMsg: data.message || LOGIN_ERROR_CODES['generic'],\r\n            isLoggedIn: false,\r\n            userDetails: null,\r\n            time: new Date().getTime()\r\n        }\r\n}"]},"metadata":{},"sourceType":"module"}