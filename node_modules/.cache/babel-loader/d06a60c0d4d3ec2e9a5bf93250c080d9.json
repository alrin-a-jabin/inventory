{"ast":null,"code":"import { store } from '../../index';\nimport { AjaxUtil } from '../ajax/index';\nimport { setToastNotif, setLogOut, setHeader, setModalPopup, setLoading } from '../../actions';\nimport { saveCurrentState } from \"../../actions/index\";\nimport { AUTH_KEY, CHANNEL } from '../../util/Constants';\nexport const isComplexTab = true; //false => simple, true =>Complex\n\nexport const setNotification = obj => {\n  store.dispatch(setToastNotif({\n    message: obj.message,\n    hasError: obj.hasError,\n    timestamp: obj.timestamp\n  }));\n};\n\nconst logout = () => {\n  store.dispatch(setLogOut());\n};\n\nexport const ajaxUtil = new AjaxUtil({\n  'responseCode': {\n    'success': 200,\n    'unAuth': 401,\n    'resultSuccess': '0'\n  },\n  'messages': {\n    'success': \"Success Message\",\n    'failure': \"Failure Message\"\n  },\n  'setNotification': setNotification,\n  'logout': logout,\n  'authKey': AUTH_KEY,\n  'channel': CHANNEL\n});\nexport const setHeaderUtil = headerName => {\n  store.dispatch(setHeader({\n    \"name\": headerName\n  }));\n};\nexport const saveCurrentStateUtil = obj => {\n  store.dispatch(saveCurrentState(obj));\n};\nexport const setModalPopupUtil = obj => {\n  store.dispatch(setModalPopup({\n    \"rowId\": obj.rowId,\n    \"isOpen\": obj.isOpen,\n    \"onConfirmCallBack\": obj.onConfirmCallBack,\n    \"title\": obj.title,\n    \"content\": obj.content,\n    \"CancelBtnLabel\": obj.CancelBtnLabel,\n    \"confirmBtnLabel\": obj.confirmBtnLabel\n  }));\n};\nexport const setLoadingUtil = obj => {\n  const timestamp = new Date().getTime();\n  store.dispatch(setLoading(obj.isLoading, obj.firstLoad, obj.isLoading ? timestamp : obj.timestamp));\n  return timestamp;\n};","map":{"version":3,"sources":["/home/alrin/Downloads/INVENTORY22/src/components/home/Utils.js"],"names":["store","AjaxUtil","setToastNotif","setLogOut","setHeader","setModalPopup","setLoading","saveCurrentState","AUTH_KEY","CHANNEL","isComplexTab","setNotification","obj","dispatch","message","hasError","timestamp","logout","ajaxUtil","setHeaderUtil","headerName","saveCurrentStateUtil","setModalPopupUtil","rowId","isOpen","onConfirmCallBack","title","content","CancelBtnLabel","confirmBtnLabel","setLoadingUtil","Date","getTime","isLoading","firstLoad"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,SAAnC,EAA8CC,aAA9C,EAA6DC,UAA7D,QAA+E,eAA/E;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,QAAT,EAAkBC,OAAlB,QAAiC,sBAAjC;AAEA,OAAO,MAAMC,YAAY,GAAG,IAArB,C,CAA2B;;AAClC,OAAO,MAAMC,eAAe,GAAIC,GAAD,IAAS;AACtCZ,EAAAA,KAAK,CAACa,QAAN,CACIX,aAAa,CAAC;AACZY,IAAAA,OAAO,EAAEF,GAAG,CAACE,OADD;AAEZC,IAAAA,QAAQ,EAAEH,GAAG,CAACG,QAFF;AAGZC,IAAAA,SAAS,EAAEJ,GAAG,CAACI;AAHH,GAAD,CADjB;AAOD,CARM;;AASP,MAAMC,MAAM,GAAG,MAAM;AACnBjB,EAAAA,KAAK,CAACa,QAAN,CAAeV,SAAS,EAAxB;AACD,CAFD;;AAGA,OAAO,MAAMe,QAAQ,GAAG,IAAIjB,QAAJ,CAAa;AACjC,kBAAiB;AACf,eAAY,GADG;AAEf,cAAW,GAFI;AAGf,qBAAkB;AAHH,GADgB;AAMjC,cAAa;AACX,eAAY,iBADD;AAEX,eAAY;AAFD,GANoB;AAUjC,qBAAoBU,eAVa;AAWjC,YAAWM,MAXsB;AAYjC,aAAWT,QAZsB;AAajC,aAAUC;AAbuB,CAAb,CAAjB;AAgBL,OAAO,MAAMU,aAAa,GAAIC,UAAD,IAAgB;AAC3CpB,EAAAA,KAAK,CAACa,QAAN,CAAeT,SAAS,CAAC;AAAC,YAASgB;AAAV,GAAD,CAAxB;AACD,CAFM;AAGP,OAAO,MAAMC,oBAAoB,GAAGT,GAAG,IAAI;AACzCZ,EAAAA,KAAK,CAACa,QAAN,CAAeN,gBAAgB,CAACK,GAAD,CAA/B;AACD,CAFM;AAIP,OAAO,MAAMU,iBAAiB,GAAIV,GAAD,IAAQ;AACvCZ,EAAAA,KAAK,CAACa,QAAN,CAAeR,aAAa,CAAC;AAC3B,aAASO,GAAG,CAACW,KADc;AAE3B,cAAUX,GAAG,CAACY,MAFa;AAG3B,yBAAqBZ,GAAG,CAACa,iBAHE;AAI3B,aAASb,GAAG,CAACc,KAJc;AAK3B,eAAWd,GAAG,CAACe,OALY;AAM3B,sBAAkBf,GAAG,CAACgB,cANK;AAO3B,uBAAmBhB,GAAG,CAACiB;AAPI,GAAD,CAA5B;AASD,CAVM;AAYP,OAAO,MAAMC,cAAc,GAAIlB,GAAD,IAAS;AACrC,QAAMI,SAAS,GAAG,IAAIe,IAAJ,GAAWC,OAAX,EAAlB;AACAhC,EAAAA,KAAK,CAACa,QAAN,CAAeP,UAAU,CAACM,GAAG,CAACqB,SAAL,EAAgBrB,GAAG,CAACsB,SAApB,EAAgCtB,GAAG,CAACqB,SAAJ,GAAgBjB,SAAhB,GAA4BJ,GAAG,CAACI,SAAhE,CAAzB;AACA,SAAOA,SAAP;AACD,CAJM","sourcesContent":["import { store } from '../../index';\r\nimport { AjaxUtil } from '../ajax/index';\r\nimport { setToastNotif, setLogOut, setHeader, setModalPopup, setLoading } from '../../actions';\r\nimport { saveCurrentState } from \"../../actions/index\";\r\nimport { AUTH_KEY,CHANNEL } from '../../util/Constants';\r\n\r\nexport const isComplexTab = true; //false => simple, true =>Complex\r\nexport const setNotification = (obj) => {\r\n  store.dispatch(\r\n      setToastNotif({\r\n        message: obj.message,\r\n        hasError: obj.hasError,\r\n        timestamp: obj.timestamp\r\n      })\r\n    );\r\n}\r\nconst logout = () => {\r\n  store.dispatch(setLogOut());\r\n}\r\nexport const ajaxUtil = new AjaxUtil({\r\n    'responseCode' : {\r\n      'success' : 200,\r\n      'unAuth' : 401,\r\n      'resultSuccess' : '0'\r\n    },\r\n    'messages' : {\r\n      'success' : \"Success Message\",\r\n      'failure' : \"Failure Message\"\r\n    },\r\n    'setNotification' : setNotification,\r\n    'logout' : logout,\r\n    'authKey': AUTH_KEY,\r\n    'channel':CHANNEL\r\n  });\r\n\r\n  export const setHeaderUtil = (headerName) => {\r\n    store.dispatch(setHeader({\"name\" : headerName}));\r\n  }\r\n  export const saveCurrentStateUtil = obj => {\r\n    store.dispatch(saveCurrentState(obj));\r\n  }\r\n\r\n  export const setModalPopupUtil = (obj) =>{\r\n    store.dispatch(setModalPopup({\r\n      \"rowId\": obj.rowId,\r\n      \"isOpen\": obj.isOpen,\r\n      \"onConfirmCallBack\": obj.onConfirmCallBack,\r\n      \"title\": obj.title,\r\n      \"content\": obj.content,\r\n      \"CancelBtnLabel\": obj.CancelBtnLabel,\r\n      \"confirmBtnLabel\": obj.confirmBtnLabel\r\n    }));\r\n  }\r\n\r\n  export const setLoadingUtil = (obj) => {\r\n    const timestamp = new Date().getTime();\r\n    store.dispatch(setLoading(obj.isLoading, obj.firstLoad, (obj.isLoading ? timestamp : obj.timestamp)));\r\n    return timestamp;\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}