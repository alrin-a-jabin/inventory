{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/module/Modal/ModuleAdd.js\";\nimport React, { useState, useEffect } from 'react';\nimport { post } from 'axios';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { CONSTANTS, GLOBAL_CONSTANTS } from '../../../util/Constants';\nconst url_modules = CONSTANTS.MODULES;\n\nconst ModuleAdd = props => {\n  const {\n    showModuleModal,\n    parent_subject,\n    subject_id\n  } = props;\n  const subject_type_id = 'Module';\n  const [subject_name, setSubjectName] = useState('');\n  const [description, setDescription] = useState('');\n  const moduleList = useSelector(state => state.moduleList);\n  useEffect(() => {\n    if (subject_id) {\n      const setModuleData = moduleList.filter(mod => mod.subject_id === subject_id);\n\n      if (setModuleData.length > 0) {\n        setSubjectName(setModuleData[0].subject_name);\n        setDescription(setModuleData[0].description);\n      }\n    }\n  }, [subject_id]);\n\n  const onChangeSubject = e => {\n    setSubjectName(e.target.value);\n  };\n\n  const onChangeDescription = e => {\n    setDescription(e.target.value);\n  };\n\n  const reset = () => {\n    setSubjectName('');\n    setDescription('');\n  };\n\n  const handleSubmit = () => {\n    const isFormValid = formValidate();\n\n    if (isFormValid) {\n      const url = subject_id ? url_modules.UPDATE_MODULEURL : url_modules.CREATE_MODULEURL;\n      const data = {\n        subject_name,\n        description,\n        subject_type_id,\n        parent_subject\n      };\n\n      if (subject_id) {\n        data.subject_id = subject_id;\n      }\n\n      post(url, data).then(response => {\n        const res = response.data;\n\n        if (res.statusCode == 200) {\n          reset();\n          props.closeModuleModal(true);\n          toast.success('Success: ' + res.message);\n        } else {\n          toast.error('Error: ' + res.message);\n        }\n      }).catch(error => {\n        toast.error('Error: Bad request');\n      });\n    }\n  };\n\n  const formValidate = () => {\n    if (GLOBAL_CONSTANTS.REGEX.test(subject_name)) {\n      toast.error('Error: Module name should not contain any special characters');\n      return;\n    }\n\n    if (subject_name.trim() == \"\") {\n      toast.error('Error: Module name is required');\n      return;\n    }\n\n    if (description.trim() == \"\") {\n      toast.error('Error: Module description is required');\n      return;\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `modal cus-Syllabus-modal  ${showModuleModal ? 'show custom-modal-open' : ''}`,\n    style: {\n      display: `${showModuleModal ? 'block' : 'none'}`\n    },\n    id: \"moduleadd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 cusoverlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content col-md-5 pzero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, `${subject_id ? 'Update' : 'Add'}`, \" Module\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    onClick: () => {\n      reset();\n      props.closeModuleModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: process.env.PUBLIC_URL + \"/images/close.svg\",\n    alt: \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Module Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"subject_name\",\n    type: \"text\",\n    className: \"form-control required\",\n    id: \"formGroupExampleInput\",\n    placeholder: \"Module Name\",\n    onChange: e => onChangeSubject(e),\n    value: subject_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group form_control_space margin_bottom_1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"formGroupExampleInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control required custom_textarea\",\n    id: \"formGroupExampleInput\",\n    placeholder: \"Add Description\",\n    name: \"description\",\n    onChange: e => onChangeDescription(e),\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer modal-custom-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger cancel hide\",\n    \"data-dismiss\": \"modal\",\n    onClick: () => {\n      reset();\n      props.closeModuleModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger reset hide\",\n    onClick: () => reset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSubmit(),\n    className: \"btn btn-danger add hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, `${subject_id ? 'UPDATE' : 'ADD'}`)))));\n};\n\nexport default ModuleAdd;","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/module/Modal/ModuleAdd.js"],"names":["React","useState","useEffect","post","useSelector","toast","CONSTANTS","GLOBAL_CONSTANTS","url_modules","MODULES","ModuleAdd","props","showModuleModal","parent_subject","subject_id","subject_type_id","subject_name","setSubjectName","description","setDescription","moduleList","state","setModuleData","filter","mod","length","onChangeSubject","e","target","value","onChangeDescription","reset","handleSubmit","isFormValid","formValidate","url","UPDATE_MODULEURL","CREATE_MODULEURL","data","then","response","res","statusCode","closeModuleModal","success","message","error","catch","REGEX","test","trim","display","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { post } from 'axios'\nimport { useSelector } from 'react-redux'\nimport { toast } from 'react-toastify';\nimport { CONSTANTS, GLOBAL_CONSTANTS } from '../../../util/Constants'\n\nconst url_modules = CONSTANTS.MODULES;\n\nconst ModuleAdd = (props) => {\n  const { showModuleModal, parent_subject, subject_id } = props;\n  const subject_type_id = 'Module';\n  const [subject_name, setSubjectName] = useState('');\n  const [description, setDescription] = useState('');\n  const moduleList = useSelector(state => state.moduleList);\n\n  useEffect(() => {\n    if (subject_id) {\n      const setModuleData = moduleList.filter((mod) => mod.subject_id === subject_id);\n      if (setModuleData.length > 0) {\n        setSubjectName(setModuleData[0].subject_name);\n        setDescription(setModuleData[0].description);\n      }\n    }\n  }, [subject_id])\n  const onChangeSubject = (e) => {\n    setSubjectName(e.target.value)\n  }\n  const onChangeDescription = (e) => {\n    setDescription(e.target.value)\n  }\n  const reset = () => {\n    setSubjectName('');\n    setDescription('');\n  }\n  const handleSubmit = () => {\n    const isFormValid = formValidate();\n    if (isFormValid) {\n      const url = subject_id ? url_modules.UPDATE_MODULEURL : url_modules.CREATE_MODULEURL;\n      const data = {\n        subject_name,\n        description,\n        subject_type_id,\n        parent_subject\n      }\n      if (subject_id) {\n        data.subject_id = subject_id;\n      }\n      post(url, data).then(response => {\n        const res = response.data;\n        if (res.statusCode == 200) {\n          reset();\n          props.closeModuleModal(true)\n          toast.success('Success: ' + res.message);\n        } else {\n          toast.error('Error: ' + res.message);\n        }\n      }).catch(error => {\n        toast.error('Error: Bad request');\n      })\n    }\n  }\n  const formValidate = () => {\n    if (GLOBAL_CONSTANTS.REGEX.test(subject_name)) {\n      toast.error('Error: Module name should not contain any special characters');\n      return;\n    }\n    if (subject_name.trim() == \"\") {\n      toast.error('Error: Module name is required');\n      return;\n    }\n    if (description.trim() == \"\") {\n      toast.error('Error: Module description is required');\n      return;\n    }\n    return true;\n  }\n  \n  return (\n    <div className={`modal cus-Syllabus-modal  ${showModuleModal ? 'show custom-modal-open' : ''}`} style={{ display: `${showModuleModal ? 'block' : 'none'}` }} id=\"moduleadd\">\n      <div className=\"modal-dialog row\">\n        <div className=\"col-md-7 cusoverlay\" />\n        <div className=\"modal-content col-md-5 pzero\">\n\n          {/* Modal Header */}\n          <div className=\"modal-header\">\n            <h4 className=\"modal-title\">{`${subject_id ? 'Update' : 'Add'}`} Module</h4>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => { reset(); props.closeModuleModal(false) }}>\n              <img src={process.env.PUBLIC_URL + \"/images/close.svg\"} alt=\"close\" />\n            </button>\n          </div>\n          {/* Modal body */}\n          <div className=\"modal-body\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"formGroupExampleInput\">Module Name</label>\n                <input name=\"subject_name\"\n                  type=\"text\"\n                  className=\"form-control required\"\n                  id=\"formGroupExampleInput\"\n                  placeholder=\"Module Name\"\n                  onChange={(e) => onChangeSubject(e)}\n                  value={subject_name}\n                />\n              </div>\n              <div className=\"form-group form_control_space margin_bottom_1rem\">\n                <label htmlFor=\"formGroupExampleInput\">Description</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control required custom_textarea\"\n                  id=\"formGroupExampleInput\"\n                  placeholder=\"Add Description\" name=\"description\" onChange={(e) => onChangeDescription(e)} value={description}\n                />\n              </div>\n            </form>\n          </div>\n          {/* Modal footer */}\n          <div className=\"modal-footer modal-custom-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-danger cancel hide\"\n              data-dismiss=\"modal\"\n              onClick={() => { reset(); props.closeModuleModal(false) }}\n            >\n              Cancel\n                  </button>\n            <button type=\"button\" className=\"btn btn-danger reset hide\" onClick={() => reset()}>\n              Reset\n                  </button>\n            <button type=\"button\" onClick={() => handleSubmit()} className=\"btn btn-danger add hide\">\n              {`${subject_id ? 'UPDATE' : 'ADD'}`}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ModuleAdd;"]},"metadata":{},"sourceType":"module"}