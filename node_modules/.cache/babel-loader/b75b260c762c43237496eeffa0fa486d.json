{"ast":null,"code":"import uuidv1 from 'uuid/v1';\nimport md5 from 'md5';\nimport moment from 'moment';\nimport CryptoJS from 'crypto-js';\nexport function getToken(auth, channel, isEncrpt = false, encrptKey = \"key\") {\n  let autVal = auth;\n  if (isEncrpt && getCookie(\"X-Auth-Token\")) autVal = encryptAuth(moment(new Date()).format(\"DDMMYYYYhhmmssSSS\") + '||' + getCookie(\"X-Auth-Token\"), encrptKey);\n  const entity = getCookie(\"X-Entity\") ? {\n    \"X-Entity\": getCookie(\"X-Entity\")\n  } : {};\n  return {\n    \"X-Auth-Token\": getCookie(\"X-Auth-Token\"),\n    \"X-UserId\": getCookie(\"X-UserId\"),\n    \"X-Msisdn\": getCookie(\"X-Msisdn\"),\n    \"orderId\": getuuid(),\n    \"Authorization\": getCookie(\"X-Auth-Token\") ? autVal + ' ' + getCookie(\"X-Auth-Token\") : autVal,\n    \"X-Channel\": channel,\n    \"Access-Control-Allow-Origin\": \"*\",\n    ...entity\n  };\n}\n\nfunction getCookie(name) {\n  let nameEQ = name + \"=\";\n  let ca = document.cookie.split(';');\n\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n\n    while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n\n    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n  }\n\n  return null;\n}\n\nexport function setToken(token, userId, msisdn = \"\") {\n  if (!token && !userId) {\n    document.cookie = `X-Auth-Token=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/`;\n    document.cookie = `X-UserId=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/`;\n    document.cookie = `X-Msisdn=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/`;\n  } else {\n    const date = new Date();\n    date.setTime(date.getTime() + 24 * 60 * 60 * 1000);\n    document.cookie = `X-Auth-Token=${token};expires=${date.toUTCString()};path=/`;\n    document.cookie = `X-UserId=${userId};expires=${date.toUTCString()};path=/`;\n    document.cookie = `X-Msisdn=${msisdn};expires=${date.toUTCString()};path=/`;\n  }\n}\nexport function getuuid() {\n  return uuidv1();\n}\nexport function encrypt(type, value) {\n  switch (type) {\n    case 'md5':\n      return md5(value);\n\n    default:\n      return value;\n  }\n}\nexport function encryptAuth(data, key) {\n  const keyHex = CryptoJS.enc.Utf8.parse(key);\n  const encrypted = CryptoJS.TripleDES.encrypt(data, keyHex, {\n    mode: CryptoJS.mode.ECB,\n    padding: CryptoJS.pad.Pkcs7\n  });\n  return encrypted.toString();\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/ajax/elements/util/Utils.js"],"names":["uuidv1","md5","moment","CryptoJS","getToken","auth","channel","isEncrpt","encrptKey","autVal","getCookie","encryptAuth","Date","format","entity","getuuid","name","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","setToken","token","userId","msisdn","date","setTime","getTime","toUTCString","encrypt","type","value","data","key","keyHex","enc","Utf8","parse","encrypted","TripleDES","mode","ECB","padding","pad","Pkcs7","toString"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,OAAxB,EAAgCC,QAAQ,GAAC,KAAzC,EAA+CC,SAAS,GAAC,KAAzD,EAAgE;AACnE,MAAIC,MAAM,GAACJ,IAAX;AACA,MAAGE,QAAQ,IAAEG,SAAS,CAAC,cAAD,CAAtB,EACID,MAAM,GAACE,WAAW,CAACT,MAAM,CAAC,IAAIU,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,mBAA1B,IAA+C,IAA/C,GAAoDH,SAAS,CAAC,cAAD,CAA9D,EAA+EF,SAA/E,CAAlB;AAEJ,QAAMM,MAAM,GAACJ,SAAS,CAAC,UAAD,CAAT,GAAsB;AAAC,gBAAYA,SAAS,CAAC,UAAD;AAAtB,GAAtB,GAA0D,EAAvE;AACA,SAAO;AACH,oBAAgBA,SAAS,CAAC,cAAD,CADtB;AAEH,gBAAYA,SAAS,CAAC,UAAD,CAFlB;AAGH,gBAAYA,SAAS,CAAC,UAAD,CAHlB;AAIH,eAAWK,OAAO,EAJf;AAKH,qBAAkBL,SAAS,CAAC,cAAD,CAAT,GAA0BD,MAAM,GAAC,GAAP,GAAWC,SAAS,CAAC,cAAD,CAA9C,GAA+DD,MAL9E;AAMH,iBAAaH,OANV;AAOH,mCAA+B,GAP5B;AAQH,OAAGQ;AARA,GAAP;AAUH;;AACD,SAASJ,SAAT,CAAmBM,IAAnB,EAAyB;AACrB,MAAIC,MAAM,GAAGD,IAAI,GAAG,GAApB;AACA,MAAIE,EAAE,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAT;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,EAAE,CAACK,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChC,QAAIE,CAAC,GAAGN,EAAE,CAACI,CAAD,CAAV;;AACA,WAAOE,CAAC,CAACC,MAAF,CAAS,CAAT,MAAgB,GAAvB,EAA4BD,CAAC,GAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAeF,CAAC,CAACD,MAAjB,CAAJ;;AAC5B,QAAIC,CAAC,CAACG,OAAF,CAAUV,MAAV,MAAsB,CAA1B,EAA6B,OAAOO,CAAC,CAACE,SAAF,CAAYT,MAAM,CAACM,MAAnB,EAA2BC,CAAC,CAACD,MAA7B,CAAP;AAChC;;AACD,SAAO,IAAP;AACH;;AACD,OAAO,SAASK,QAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,MAAM,GAAC,EAAxC,EAA4C;AAC/C,MAAI,CAACF,KAAD,IAAU,CAACC,MAAf,EAAuB;AACnBX,IAAAA,QAAQ,CAACC,MAAT,GAAmB,4DAAnB;AACAD,IAAAA,QAAQ,CAACC,MAAT,GAAmB,wDAAnB;AACAD,IAAAA,QAAQ,CAACC,MAAT,GAAmB,wDAAnB;AACH,GAJD,MAIO;AACH,UAAMY,IAAI,GAAG,IAAIpB,IAAJ,EAAb;AACAoB,IAAAA,IAAI,CAACC,OAAL,CAAaD,IAAI,CAACE,OAAL,KAAkB,KAAK,EAAL,GAAU,EAAV,GAAe,IAA9C;AACAf,IAAAA,QAAQ,CAACC,MAAT,GAAmB,gBAAeS,KAAM,YAAWG,IAAI,CAACG,WAAL,EAAmB,SAAtE;AACAhB,IAAAA,QAAQ,CAACC,MAAT,GAAmB,YAAWU,MAAO,YAAWE,IAAI,CAACG,WAAL,EAAmB,SAAnE;AACAhB,IAAAA,QAAQ,CAACC,MAAT,GAAmB,YAAWW,MAAO,YAAWC,IAAI,CAACG,WAAL,EAAmB,SAAnE;AACH;AACJ;AACD,OAAO,SAASpB,OAAT,GAAmB;AACtB,SAAOf,MAAM,EAAb;AACH;AACD,OAAO,SAASoC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AACnC,UAAQD,IAAR;AACE,SAAK,KAAL;AACE,aAAOpC,GAAG,CAACqC,KAAD,CAAV;;AACF;AACE,aAAOA,KAAP;AAJJ;AAMD;AAED,OAAO,SAAS3B,WAAT,CAAqB4B,IAArB,EAA0BC,GAA1B,EAA+B;AAClC,QAAMC,MAAM,GAAGtC,QAAQ,CAACuC,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBJ,GAAxB,CAAf;AACA,QAAMK,SAAS,GAAG1C,QAAQ,CAAC2C,SAAT,CAAmBV,OAAnB,CAA2BG,IAA3B,EAAiCE,MAAjC,EAAyC;AACvDM,IAAAA,IAAI,EAAE5C,QAAQ,CAAC4C,IAAT,CAAcC,GADmC;AAEvDC,IAAAA,OAAO,EAAE9C,QAAQ,CAAC+C,GAAT,CAAaC;AAFiC,GAAzC,CAAlB;AAKA,SAAON,SAAS,CAACO,QAAV,EAAP;AACH","sourcesContent":["import uuidv1 from 'uuid/v1';\nimport md5 from 'md5';\nimport moment from 'moment';\nimport CryptoJS from 'crypto-js';\n\nexport function getToken(auth, channel,isEncrpt=false,encrptKey=\"key\") {\n    let autVal=auth;\n    if(isEncrpt&&getCookie(\"X-Auth-Token\"))\n        autVal=encryptAuth(moment(new Date()).format(\"DDMMYYYYhhmmssSSS\")+'||'+getCookie(\"X-Auth-Token\"),encrptKey);\n    \n    const entity=getCookie(\"X-Entity\")?{\"X-Entity\": getCookie(\"X-Entity\")}:{};\n    return {\n        \"X-Auth-Token\": getCookie(\"X-Auth-Token\"),\n        \"X-UserId\": getCookie(\"X-UserId\"),\n        \"X-Msisdn\": getCookie(\"X-Msisdn\"),\n        \"orderId\": getuuid(),\n        \"Authorization\" : getCookie(\"X-Auth-Token\")?autVal+' '+getCookie(\"X-Auth-Token\"):autVal,\n        \"X-Channel\": channel,\n        \"Access-Control-Allow-Origin\": \"*\",\n        ...entity\n    }\n}\nfunction getCookie(name) {\n    let nameEQ = name + \"=\";\n    let ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n}\nexport function setToken(token, userId ,msisdn=\"\") {\n    if (!token && !userId) {\n        document.cookie = `X-Auth-Token=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/`;\n        document.cookie = `X-UserId=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/`;\n        document.cookie = `X-Msisdn=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/`;\n    } else {\n        const date = new Date();\n        date.setTime(date.getTime() + (24 * 60 * 60 * 1000));\n        document.cookie = `X-Auth-Token=${token};expires=${date.toUTCString()};path=/`;\n        document.cookie = `X-UserId=${userId};expires=${date.toUTCString()};path=/`;\n        document.cookie = `X-Msisdn=${msisdn};expires=${date.toUTCString()};path=/`;\n    }\n}\nexport function getuuid() {\n    return uuidv1();\n}\nexport function encrypt(type, value) {\n  switch (type) {\n    case 'md5':\n      return md5(value);\n    default:\n      return value;\n  }\n}\n\nexport function encryptAuth(data,key) {\n    const keyHex = CryptoJS.enc.Utf8.parse(key);\n    const encrypted = CryptoJS.TripleDES.encrypt(data, keyHex, {\n        mode: CryptoJS.mode.ECB,\n        padding: CryptoJS.pad.Pkcs7\n    });\n\n    return encrypted.toString()\n}"]},"metadata":{},"sourceType":"module"}