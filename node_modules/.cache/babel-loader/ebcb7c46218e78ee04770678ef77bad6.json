{"ast":null,"code":"var _jsxFileName = \"/home/alrin/Downloads/INVENTORY22/src/components/inventory/allocation-return-log/components/partials/RenderAllocationAndReturnsListTable.js\";\n// import React from 'react';\nimport moment from 'moment';\nimport { UncontrolledTooltip } from 'reactstrap';\nexport default function RenderAllocationAndReturnsListTable(props) {\n  let response = [];\n\n  if (props.data.length <= 0) {\n    response.push( /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, \"No Data\")));\n  } else {\n    response = props.data.map((row, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, row.fileName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, moment(row.date, 'YYYY-MM-DD h:mm:ss').format('DD-MM-YYYY h:mm a')), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, row.fileType), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, row.totalRecords), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, row.status == 'SUCCESS' ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 43\n      }\n    }, row.status) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 98\n      }\n    }, \"FAILED\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: row.status == 'SUCCESS' ? \"btn-action btn-action-desabled\" : \"cursor-pointer btn-action btn-action-active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-repeat\",\n      \"aria-hidden\": \"true\",\n      id: \"UncontrolledTooltipExample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n      placement: \"bottom\",\n      target: \"UncontrolledTooltipExample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Retry\")));\n  }\n\n  return response;\n}","map":{"version":3,"sources":["/home/alrin/Downloads/INVENTORY22/src/components/inventory/allocation-return-log/components/partials/RenderAllocationAndReturnsListTable.js"],"names":["moment","UncontrolledTooltip","RenderAllocationAndReturnsListTable","props","response","data","length","push","map","row","index","fileName","date","format","fileType","totalRecords","status"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,mBAAT,QAAoC,YAApC;AACA,eAAe,SAASC,mCAAT,CAA6CC,KAA7C,EAAoD;AACjE,MAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAID,KAAK,CAACE,IAAN,CAAWC,MAAX,IAAqB,CAAzB,EAA4B;AAC1BF,IAAAA,QAAQ,CAACG,IAAT,eACE;AAAI,MAAA,GAAG,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,OAAO,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD,GAND,MAMO;AACLH,IAAAA,QAAQ,GAAGD,KAAK,CAACE,IAAN,CAAWG,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,kBACxB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,GAAG,CAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,GAAG,CAACE,QAAT,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,MAAM,CAACS,GAAG,CAACG,IAAL,EAAW,oBAAX,CAAN,CAAuCC,MAAvC,CAA8C,mBAA9C,CAAL,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,GAAG,CAACK,QAAT,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAML,GAAG,CAACM,YAAV,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMN,GAAG,CAACO,MAAJ,IAAc,SAAf,gBAA6B;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCP,GAAG,CAACO,MAApC,CAA7B,gBAAoF;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAzF,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAGP,GAAG,CAACO,MAAJ,IAAc,SAAf,GAA4B,gCAA5B,GAA+D,6CAD5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAG,MAAA,SAAS,EAAC,cAAb;AAA4B,qBAAY,MAAxC;AAAgD,MAAA,EAAE,EAAC,4BAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CAPF,eAeE,oBAAC,mBAAD;AAAqB,MAAA,SAAS,EAAC,QAA/B;AAAwC,MAAA,MAAM,EAAC,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfF,CADS,CAAX;AAsBD;;AACD,SACEZ,QADF;AAGD","sourcesContent":["// import React from 'react';\nimport moment from 'moment';\nimport { UncontrolledTooltip } from 'reactstrap';\nexport default function RenderAllocationAndReturnsListTable(props) {\n  let response = [];\n\n  if (props.data.length <= 0) {\n    response.push(\n      <tr key=\"1\">\n        <td colSpan=\"12\">No Data</td>\n      </tr>\n    )\n  } else {\n    response = props.data.map((row, index) => (\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td>{row.fileName}</td>\n        <td>{moment(row.date, 'YYYY-MM-DD h:mm:ss').format('DD-MM-YYYY h:mm a')}</td>\n        <td>{row.fileType}</td>\n        <td >{row.totalRecords}</td>\n        <td>{(row.status == 'SUCCESS') ? (<span className=\"text-success\">{row.status}</span>) : (<span className=\"text-danger\">FAILED</span>)}</td>\n        <td >\n          <button\n            className={(row.status == 'SUCCESS') ? \"btn-action btn-action-desabled\" : \"cursor-pointer btn-action btn-action-active\"}\n          >\n            <i className=\"fa fa-repeat\" aria-hidden=\"true\"  id=\"UncontrolledTooltipExample\" >\n            </i>\n          </button>\n        </td>\n        <UncontrolledTooltip placement='bottom' target='UncontrolledTooltipExample'>\n        Retry\n      </UncontrolledTooltip>\n      \n      </tr>\n    ))\n  }\n  return (\n    response\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}