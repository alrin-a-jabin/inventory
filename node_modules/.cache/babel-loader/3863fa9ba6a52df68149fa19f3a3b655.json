{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/schedule/Training/Master/Components/User/AddUser.js\";\nimport React, { Component } from 'react';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nfunction RenderOptions(props) {\n  const {\n    data,\n    keyValue,\n    value\n  } = props;\n\n  if (data.length > 0) {\n    let options = data.map((option, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: option[keyValue],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, \" \", option[value], \" \"));\n    return [/*#__PURE__*/React.createElement(\"option\", {\n      key: \"-10\",\n      selected: true,\n      value: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, \" Please Select\"), ...options];\n  }\n\n  return /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, \"Please Select\");\n}\n\nexport default class AddUserTraining extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getChannels = () => {\n      this.props.ajaxUtil.sendRequest(this.props.url_training.GET_CHANNELS, {}, response => {\n        this.setState({\n          channels: response\n        });\n\n        if (response.length > 0) {\n          this.getRegions(response[0].id);\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.handleSelectChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n\n      switch (name) {\n        case 'selectedChannel':\n          this.getRegions(value);\n          break;\n\n        case 'selectedRegion':\n          this.getClusters(value);\n          break;\n\n        case 'selectedCluster':\n          this.getUserRoles();\n          break;\n\n        case 'selectedRole':\n          this.getUserByRole(value);\n          break;\n\n        case 'selectedUser':\n          this.state.users.map(user => {\n            if (user.userId == value) {\n              this.setState({\n                selectedValue: user\n              });\n            }\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.getRegions = clusterId => {\n      this.props.ajaxUtil.sendRequest(`${this.props.url_training.GET_REGIONS}?channelId=${clusterId}&typeId=2`, {}, response => {\n        this.setState({\n          regions: response\n        });\n\n        if (response.length > 0) {\n          this.getClusters(response[0].id);\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.getClusters = regionId => {\n      this.props.ajaxUtil.sendRequest(`${this.props.url_training.GET_CLUSTERS}/${regionId}`, {}, response => {\n        this.setState({\n          clusters: response\n        });\n\n        if (response.length > 0) {\n          this.getUserRoles(response[0].id);\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.getUserRoles = () => {\n      this.props.ajaxUtil.sendRequest(this.props.url_training.GET_USER_ROLES, {}, response => {\n        this.setState({\n          userRoles: response\n        });\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.getUserByRole = roleId => {\n      const url = `${this.props.url_training.GET_USER_BY_ROLE}?designation=${roleId}&order=desc&page=1&size=0&sort=createdDate`;\n      this.props.ajaxUtil.sendRequest(url, {}, response => {\n        if (response.hasOwnProperty('content')) {\n          this.setState({\n            users: response.content\n          });\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.getTrainingType = () => {\n      const url = `${this.props.url_training.LIST_TRAINING}?page=1&size=1500&sort=id&status=&order=desc&keyword=`;\n      this.props.ajaxUtil.sendRequest(url, {}, response => {\n        if (response.hasOwnProperty('data')) {\n          this.setState({\n            trainingTypes: response.data\n          });\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.submitForm = () => {\n      console.log(this.state);\n      const {\n        selectedUser,\n        selectedTrainingType,\n        position\n      } = this.state;\n\n      if (selectedUser == -1 || selectedTrainingType == -1 || position == -1 || selectedUser.trim().length <= 0 || selectedTrainingType.trim().length <= 0 || position.trim().length <= 0) {\n        this.props.setNotification({\n          message: 'Please Fill Up',\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n        return;\n      }\n\n      const data = {\n        id: null,\n        role_id: this.state.selectedRole,\n        user_id: selectedUser,\n        position: position,\n        training_type_id: selectedTrainingType,\n        name: this.state.selectedValue['firstName'] + ' ' + this.state.selectedValue['lastName']\n      };\n      this.props.ajaxUtil.sendRequest(this.props.url_training.CREATE_TRAINING_USER, data, response => {\n        this.props.setNotification({\n          message: response.message,\n          hasError: !response.status,\n          timestamp: new Date().getTime()\n        });\n\n        if (response.status) {\n          this.props.getUserList();\n          this.props.closeUserModal();\n        }\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        selectedChannel: -1,\n        selectedCluster: -1,\n        selectedRegion: -1,\n        selectedRole: -1,\n        selectedUser: -1\n      });\n      document.getElementById(\"form\").reset();\n    };\n\n    this.state = {\n      file: {},\n      users: [],\n      channels: [],\n      regions: [],\n      clusters: [],\n      userRoles: [],\n      selectedTrainingType: null,\n      position: null,\n      trainingTypes: [],\n      selectedChannel: -1,\n      selectedCluster: -1,\n      selectedRegion: -1,\n      selectedRole: -1,\n      selectedUser: -1,\n      selectedValue: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getChannels();\n    this.getTrainingType();\n  } // get channels\n\n\n  render() {\n    const {\n      handleSelectChange,\n      submitForm\n    } = this;\n    const {\n      channels,\n      selectedChannel,\n      selectedRegion,\n      regions,\n      selectedCluster,\n      clusters,\n      userRoles,\n      selectedRole\n    } = this.state;\n    return /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"form\",\n      action: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, \"Channel\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: selectedChannel,\n      onChange: event => handleSelectChange(event),\n      className: \"form-control required\",\n      name: \"selectedChannel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: channels,\n      keyValue: \"id\",\n      value: \"channelName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, \"Regions\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: selectedRegion,\n      onChange: event => handleSelectChange(event),\n      className: \"form-control required\",\n      name: \"selectedRegion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: regions,\n      keyValue: \"id\",\n      value: \"locationName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, \"Cluster\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: selectedCluster,\n      onChange: event => handleSelectChange(event),\n      className: \"form-control required\",\n      name: \"selectedCluster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: clusters,\n      keyValue: \"id\",\n      value: \"locationName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }, \"User Role\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: selectedRole,\n      onChange: event => handleSelectChange(event),\n      className: \"form-control required\",\n      name: \"selectedRole\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: userRoles,\n      keyValue: \"id\",\n      value: \"designationName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, \"Staff Id's\"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"selectedUser\",\n      className: \"form-control required\",\n      onChange: event => handleSelectChange(event),\n      value: this.state.selectedUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: this.state.users,\n      keyValue: \"userId\",\n      value: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header__sub_sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }, this.state.file['name'])), this.state.selectedValue.hasOwnProperty('firstName') ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"showing__list__wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 23\n      }\n    }, \"Profile Details\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, \"Name: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 34\n      }\n    }, this.state.selectedValue['firstName'], \" \", this.state.selectedValue['lastName'])), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }, \"Contact: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 37\n      }\n    }, this.state.selectedValue['mobileNumber'])), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }, \"Email Id: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 38\n      }\n    }, this.state.selectedValue['emailAddress'])), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }, \"Address: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 37\n      }\n    }, this.state.selectedValue['address'])), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    }, \"Area: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 34\n      }\n    }, this.state.selectedValue['area'])), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, \"Region: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 36\n      }\n    }, this.state.selectedValue['region'])))) : /*#__PURE__*/React.createElement(React.Fragment, null))), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"user__devider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, \"Add Position\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }\n    }, \"Position\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.position,\n      onChange: event => handleSelectChange(event),\n      type: \"text\",\n      className: \"form-control required\",\n      name: \"position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }, \"Training Type\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: event => handleSelectChange(event),\n      className: \"form-control required Select select-paceholder\",\n      name: \"selectedTrainingType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: this.state.trainingTypes,\n      keyValue: \"id\",\n      value: \"training_type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 23\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12  mt-3 mb-3 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.closeUserModal,\n      type: \"button\",\n      className: \"btn btn-danger cancel \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetForm,\n      type: \"button\",\n      className: \"btn btn-danger reset \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 15\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => submitForm(),\n      type: \"button\",\n      className: \"btn btn-danger add \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }\n    }, \" Add\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/schedule/Training/Master/Components/User/AddUser.js"],"names":["React","Component","PerfectScrollbar","RenderOptions","props","data","keyValue","value","length","options","map","option","index","AddUserTraining","constructor","getChannels","ajaxUtil","sendRequest","url_training","GET_CHANNELS","response","setState","channels","getRegions","id","loadingFunction","method","isShowSuccess","handleSelectChange","event","name","currentTarget","getClusters","getUserRoles","getUserByRole","state","users","user","userId","selectedValue","clusterId","GET_REGIONS","regions","regionId","GET_CLUSTERS","clusters","GET_USER_ROLES","userRoles","roleId","url","GET_USER_BY_ROLE","hasOwnProperty","content","getTrainingType","LIST_TRAINING","trainingTypes","submitForm","console","log","selectedUser","selectedTrainingType","position","trim","setNotification","message","hasError","timestamp","Date","getTime","role_id","selectedRole","user_id","training_type_id","CREATE_TRAINING_USER","status","getUserList","closeUserModal","resetForm","selectedChannel","selectedCluster","selectedRegion","document","getElementById","reset","file","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nfunction RenderOptions(props) {\n  const { data, keyValue, value } = props;\n  if (data.length > 0) {\n    let options = data.map((option, index) => (\n      <option key={index} value={option[keyValue]}> {option[value]} </option>\n    ))\n    return [<option key=\"-10\" selected value={-1} > Please Select</option>, ...options];\n  }\n  return (\n    <option>Please Select</option>\n  )\n}\nexport default class AddUserTraining extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: {},\n      users: [],\n      channels: [],\n      regions: [],\n      clusters: [],\n      userRoles: [],\n      selectedTrainingType: null,\n      position: null,\n      trainingTypes: [],\n      selectedChannel: -1,\n      selectedCluster: -1,\n      selectedRegion: -1,\n      selectedRole: -1,\n      selectedUser: -1,\n      selectedValue: {}\n    }\n  }\n\n  componentDidMount() {\n    this.getChannels();\n    this.getTrainingType();\n  }\n\n  // get channels\n  getChannels = () => {\n    this.props.ajaxUtil.sendRequest(this.props.url_training.GET_CHANNELS, {}, response => {\n      this.setState({ channels: response })\n      if (response.length > 0) {\n        this.getRegions(response[0].id)\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  // handle select input change \n  handleSelectChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value })\n    switch (name) {\n      case 'selectedChannel':\n        this.getRegions(value);\n        break;\n      case 'selectedRegion':\n        this.getClusters(value);\n        break;\n      case 'selectedCluster':\n        this.getUserRoles();\n        break;\n      case 'selectedRole':\n        this.getUserByRole(value);\n        break;\n      case 'selectedUser':\n        this.state.users.map((user) => {\n          if (user.userId == value) {\n            this.setState({ selectedValue: user })\n          }\n        })\n        break;\n      default:\n        break;\n    }\n  }\n  // get region for selected cluster\n  getRegions = (clusterId) => {\n    this.props.ajaxUtil.sendRequest(`${this.props.url_training.GET_REGIONS}?channelId=${clusterId}&typeId=2`, {}, response => {\n      this.setState({ regions: response })\n      if (response.length > 0) {\n        this.getClusters(response[0].id)\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  // get Clusters by region\n  getClusters = (regionId) => {\n    this.props.ajaxUtil.sendRequest(`${this.props.url_training.GET_CLUSTERS}/${regionId}`, {}, response => {\n      this.setState({ clusters: response })\n      if (response.length > 0) {\n        this.getUserRoles(response[0].id)\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  // get user roles\n  getUserRoles = () => {\n    this.props.ajaxUtil.sendRequest(this.props.url_training.GET_USER_ROLES, {}, response => {\n      this.setState({ userRoles: response })\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n\n  // get user by role\n  getUserByRole = (roleId) => {\n    const url = `${this.props.url_training.GET_USER_BY_ROLE}?designation=${roleId}&order=desc&page=1&size=0&sort=createdDate`\n    this.props.ajaxUtil.sendRequest(url, {}, response => {\n      if (response.hasOwnProperty('content')) {\n        this.setState({ users: response.content })\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n\n  // get training type\n  getTrainingType = () => {\n    const url = `${this.props.url_training.LIST_TRAINING}?page=1&size=1500&sort=id&status=&order=desc&keyword=`\n    this.props.ajaxUtil.sendRequest(url, {}, response => {\n      if (response.hasOwnProperty('data')) {\n        this.setState({ trainingTypes: response.data })\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n\n  submitForm = () => {\n    console.log(this.state)\n\n    const { selectedUser, selectedTrainingType, position } = this.state;\n    if (selectedUser == -1 || selectedTrainingType == -1 || position == -1 || selectedUser.trim().length <= 0 || selectedTrainingType.trim().length <= 0 || position.trim().length <= 0) {\n      this.props.setNotification({\n        message: 'Please Fill Up',\n        hasError: true,\n        timestamp: new Date().getTime()\n      });\n      return;\n    }\n\n    const data = {\n      id: null,\n      role_id: this.state.selectedRole,\n      user_id: selectedUser,\n      position: position,\n      training_type_id: selectedTrainingType,\n      name: this.state.selectedValue['firstName'] + ' ' + this.state.selectedValue['lastName']\n    }\n    this.props.ajaxUtil.sendRequest(this.props.url_training.CREATE_TRAINING_USER, data, response => {\n      this.props.setNotification({\n        message: response.message,\n        hasError: !response.status,\n        timestamp: new Date().getTime()\n      });\n      if (response.status) {\n        this.props.getUserList()\n        this.props.closeUserModal();\n      }\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n\n\n  }\n  resetForm = () => {\n    this.setState({\n      selectedChannel: -1,\n      selectedCluster: -1,\n      selectedRegion: -1,\n      selectedRole: -1,\n      selectedUser: -1,\n    })\n    document.getElementById(\"form\").reset()\n  }\n\n  render() {\n    const { handleSelectChange, submitForm } = this;\n    const { channels, selectedChannel, selectedRegion, regions, selectedCluster, clusters, userRoles, selectedRole } = this.state;\n    return (\n      <PerfectScrollbar>\n        <div className=\"container\">\n          <div className=\"row mt-3\">\n            <div className=\"col-lg-6\">\n              <form  id=\"form\" action>\n                <div className=\" form-group mb-30\">\n                  <label>Channel</label>\n                  <select\n                    value={selectedChannel}\n                    onChange={(event) => handleSelectChange(event)}\n                    className=\"form-control required\"\n                    name=\"selectedChannel\">\n                    <RenderOptions\n                      data={channels}\n                      keyValue=\"id\"\n                      value=\"channelName\"\n                    />\n                  </select>\n                </div>\n                <div className=\" form-group mb-30\">\n                  <label>Regions</label>\n                  <select\n                    value={selectedRegion}\n                    onChange={(event) => handleSelectChange(event)}\n                    className=\"form-control required\"\n                    name=\"selectedRegion\">\n                    <RenderOptions\n                      data={regions}\n                      keyValue=\"id\"\n                      value=\"locationName\"\n                    />\n                  </select>\n                </div>\n                <div className=\" form-group mb-30\">\n                  <label>Cluster</label>\n                  <select\n                    value={selectedCluster}\n                    onChange={(event) => handleSelectChange(event)}\n                    className=\"form-control required\"\n                    name=\"selectedCluster\">\n                    <RenderOptions\n                      data={clusters}\n                      keyValue=\"id\"\n                      value=\"locationName\"\n                    />\n                  </select>\n                </div>\n                <div className=\" form-group mb-30\">\n                  <label>User Role</label>\n                  <select\n                    value={selectedRole}\n                    onChange={(event) => handleSelectChange(event)}\n                    className=\"form-control required\"\n                    name=\"selectedRole\">\n                    <RenderOptions\n                      data={userRoles}\n                      keyValue=\"id\"\n                      value=\"designationName\"\n                    />\n                  </select>\n                </div>\n                <div className=\"form-group mb-30\">\n                  <label >Staff Id's</label>\n                  <select\n                    name=\"selectedUser\"\n                    className=\"form-control required\"\n                    onChange={(event) => handleSelectChange(event)}\n                    value={this.state.selectedUser} >\n                    <RenderOptions\n                      data={this.state.users}\n                      keyValue=\"userId\"\n                      value=\"firstName\"\n                    />\n                  </select>\n                </div>\n              </form>\n            </div>\n            <div className=\"col-lg-6\">\n              <div className=\"header__sub_sub\">\n                <div className=\"header_wrap\">\n                  <h6>{this.state.file['name']}</h6>\n\n                </div>\n                {this.state.selectedValue.hasOwnProperty('firstName') ?\n                  (\n                    <div className=\"showing__list__wrap\">\n                      <h6>Profile Details</h6>\n                      <div className=\"details__content\">\n                        <p>Name: <strong>{this.state.selectedValue['firstName']} {this.state.selectedValue['lastName']}</strong></p>\n                        <p>Contact: <strong>{this.state.selectedValue['mobileNumber']}</strong></p>\n                        <p>Email Id: <strong>{this.state.selectedValue['emailAddress']}</strong></p>\n                        <p>Address: <strong>{this.state.selectedValue['address']}</strong></p>\n                        <p>Area: <strong>{this.state.selectedValue['area']}</strong></p>\n                        <p>Region: <strong>{this.state.selectedValue['region']}</strong></p>\n                      </div>\n                    </div>\n                  )\n                  : <></>}\n\n              </div>\n            </div>\n            <hr className=\"user__devider\" />\n            <div className=\"col-md-12\">\n              <h4>Add Position</h4>\n              <div className=\"row\">\n                <div className=\"col-lg-6\">\n                  <div className=\"form-group mb-30\">\n                    <label>Position</label>\n                    <input\n                      value={this.state.position}\n                      onChange={(event) => handleSelectChange(event)}\n                      type=\"text\"\n                      className=\"form-control required\"\n                      name=\"position\" />\n                  </div>\n                </div>\n                <div className=\"col-lg-6\">\n                  <div className=\"form-group mb-30\">\n                    <label>Training Type</label>\n                    <select\n                      onChange={(event) => handleSelectChange(event)}\n                      className=\"form-control required Select select-paceholder\"\n                      name=\"selectedTrainingType\">\n\n                      <RenderOptions\n                        data={this.state.trainingTypes}\n                        keyValue=\"id\"\n                        value=\"training_type\"\n                      />\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12  mt-3 mb-3 text-right\">\n\n              <button\n                onClick={this.props.closeUserModal}\n                type=\"button\"\n                className=\"btn btn-danger cancel \">Cancel</button>\n              <button\n                onClick={() => this.resetForm}\n                type=\"button\"\n                className=\"btn btn-danger reset \">Reset</button>\n              <button\n                onClick={() => submitForm()}\n                type=\"button\"\n                className=\"btn btn-danger add \"> Add</button>\n\n            </div>\n\n          </div>\n        </div>\n      </PerfectScrollbar>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}