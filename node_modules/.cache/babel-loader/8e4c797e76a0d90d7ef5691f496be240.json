{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/MBookLet/Components/MaterialList/AddParticipant.js\";\nimport React, { Component } from 'react';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nfunction RenderOptions(props) {\n  const {\n    data,\n    keyValue,\n    value\n  } = props;\n\n  if (data.length > 0) {\n    let options = data.map((option, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: option[keyValue],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, \" \", option[value], \" \"));\n    return [/*#__PURE__*/React.createElement(\"option\", {\n      key: \"-10\",\n      selected: true,\n      value: null,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, \" Please Select\"), ...options];\n  }\n\n  return /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"Please Select\");\n}\n\nexport default class AddParticipant extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getOutletClasses = () => {\n      const url = this.props.url_Booklet.OUTLET_CLASS;\n      this.props.ajaxUtil.sendRequest(url, {\n        \"tableName\": \"OUTLET_CLASS\"\n      }, response => {\n        if (Array.isArray(response)) {\n          this.setState({\n            outletClasses: response\n          });\n        } else {\n          this.props.setNotification({\n            message: response.responseMessage,\n            hasError: true,\n            timestamp: new Date().getTime()\n          });\n        }\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.getOutletClass = id => {\n      const url = this.props.url_Booklet.OUTLET_API + `?channelId=10&order=desc&page=1&size=0&sort=createdDate`;\n      this.props.ajaxUtil.sendRequest(url, {}, response => {\n        if (response.hasOwnProperty('content')) {\n          this.setState({\n            outletClass: response.content\n          });\n        } else {\n          this.props.setNotification({\n            message: response.responseMessage,\n            hasError: true,\n            timestamp: new Date().getTime()\n          });\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.handleDrag = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDragIn = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDragOut = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDrop = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      console.log(e.dataTransfer.files);\n      this.readFromFile(e.dataTransfer.files[0]);\n    };\n\n    this.uploadFile = () => {\n      this.props.ajaxUtil.sendRequest(this.props.url_Booklet.GET_CHANNELS, {}, response => {\n        this.setState({\n          channels: response\n        });\n\n        if (response.length > 0) {\n          this.getRegions(response[0].id);\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.readFromFile = file => {\n      this.setState({\n        file\n      });\n\n      const handleFile = e => {\n        let datas = [];\n        const content = e.target.result;\n        content.split('\\n').forEach((line, index) => {\n          if (index !== 0) {\n            let data = line.split(\",\");\n\n            if (data.length == 7) {\n              console.log(data);\n              datas.push({\n                channel_id: data[0],\n                region_id: data[1],\n                cluster_id: data[2],\n                outlet: data[3],\n                outlet_class: data[4],\n                role_id: data[5],\n                user_id: data[6],\n                assessment_id: this.props.material.schedule.assessment_id\n              });\n            }\n          }\n        });\n        this.setState({\n          fileValues: datas\n        }); // this.uploadFile();\n      };\n\n      if (file['name'].indexOf('.csv') >= 0) {\n        var reader = new FileReader();\n        reader.onload = handleFile; // start reading the file. When it is done, calls the onload event defined above.\n\n        reader.readAsBinaryString(file);\n      } else {\n        alert(\"Invalid File\");\n      }\n    };\n\n    this.fileChange = event => {\n      this.readFromFile(event.target.files[0]);\n    };\n\n    this.getChannels = () => {\n      this.props.ajaxUtil.sendRequest(this.props.url_Booklet.GET_CHANNELS, {}, response => {\n        this.setState({\n          channels: response\n        });\n\n        if (response.length > 0) {\n          this.getRegions(response[0].id);\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.handleSelectChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n\n      switch (name) {\n        case 'selectedChannel':\n          this.getOutletClass(value);\n          this.getRegions(value);\n          break;\n\n        case 'selectedRegion':\n          this.getClusters(value);\n          break;\n\n        case 'selectedCluster':\n          this.getUserRoles();\n          break;\n\n        case 'selectedRole':\n          this.getUserByRole(value);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.getRegions = clusterId => {\n      this.props.ajaxUtil.sendRequest(`${this.props.url_Booklet.GET_REGIONS}?channelId=${clusterId}&typeId=2`, {}, response => {\n        this.setState({\n          regions: response\n        });\n\n        if (response.length > 0) {\n          this.getClusters(response[0].id);\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.getClusters = regionId => {\n      this.props.ajaxUtil.sendRequest(`${this.props.url_Booklet.GET_CLUSTERS}/${regionId}`, {}, response => {\n        this.setState({\n          clusters: response\n        });\n\n        if (response.length > 0) {\n          this.getUserRoles(response[0].id);\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.getUserRoles = () => {\n      this.props.ajaxUtil.sendRequest(this.props.url_Booklet.GET_USER_ROLES, {}, response => {\n        this.setState({\n          userRoles: response\n        });\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.getUserByRole = roleId => {\n      const url = `${this.props.url_Booklet.GET_USER_BY_ROLE}?designation=${roleId}&order=desc&page=1&size=0&sort=createdDate`;\n      this.props.ajaxUtil.sendRequest(url, {}, response => {\n        console.log(response);\n\n        if (response.hasOwnProperty('content')) {\n          const user = response.content.map(user => ({\n            id: user.userId,\n            name: user.firstName\n          }));\n          this.setState({\n            users: user\n          });\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.onSelect = (selectedList, selectedItem) => {\n      this.setState({\n        fileValues: []\n      });\n      this.setState({\n        selectedValue: [...selectedList]\n      });\n    };\n\n    this.onRemove = (selectedList, removedItem) => {\n      this.setState({\n        fileValues: []\n      });\n      this.setState({\n        selectedValue: [...selectedList]\n      });\n    };\n\n    this.deleteFile = () => {\n      this.setState({\n        file: {}\n      });\n      this.setState({\n        selectedValue: []\n      });\n    };\n\n    this.submitForm = () => {\n      if (this.state.fileValues.length > 0) {\n        this.props.ajaxUtil.sendRequest(this.props.url_Booklet.BULK_UPLOAD, this.state.fileValues, response => {\n          this.props.setNotification({\n            message: response.message,\n            hasError: !response.status,\n            timestamp: new Date().getTime()\n          });\n\n          if (response.status) {\n            this.props.getMaterialList();\n            this.props.closeAddParticipantModel();\n          }\n        }, this.props.loadingFunction, {\n          method: 'POST',\n          isShowSuccess: false\n        });\n        return;\n      }\n\n      const users = this.state.selectedValue.map(user => user.id);\n\n      if (users.length <= 0) {\n        this.props.setNotification({\n          message: 'please select users',\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n        return;\n      } // : null,\n      //   selectedCluster: null,\n      //   selectedRegion: null,\n      //   selectedRole: null,\n\n\n      this.props.ajaxUtil.sendRequest(this.props.url_Booklet.ADD_PARTICIPANT, {\n        schedule_id: this.props.material.schedule.assessment_id,\n        roles: users,\n        channel: this.state.selectedChannel,\n        cluster: this.state.selectedCluster,\n        role: this.state.selectedRole,\n        region: this.state.selectedRegion\n      }, response => {\n        this.props.setNotification({\n          message: response.message,\n          hasError: !response.status,\n          timestamp: new Date().getTime()\n        });\n\n        if (response.status) {\n          this.props.getMaterialList();\n          this.props.closeAddParticipantModel();\n        }\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.state = {\n      file: {},\n      users: [],\n      channels: [],\n      regions: [],\n      clusters: [],\n      userRoles: [],\n      outletClass: [],\n      selectedOutlet: null,\n      selectedOutletClass: null,\n      users: [],\n      selectedChannel: null,\n      selectedCluster: null,\n      selectedRegion: null,\n      selectedRole: null,\n      selectedUsers: null,\n      dragging: false,\n      selectedValue: [],\n      fileValues: [],\n      uploadDiv: React.createRef(),\n      outletClasses: []\n    };\n  } // const { ajaxUtil, loadingFunction, setNotification\n\n\n  componentDidMount() {\n    this.getOutletClasses();\n    this.getChannels();\n    let div = this.state.uploadDiv.current;\n    div.addEventListener('dragenter', this.handleDragIn);\n    div.addEventListener('dragleave', this.handleDragOut);\n    div.addEventListener('dragover', this.handleDrag);\n    div.addEventListener('drop', this.handleDrop);\n  }\n\n  componentWillUnmount() {\n    let div = this.state.uploadDiv.current;\n    div.removeEventListener('dragenter', this.handleDragIn);\n    div.removeEventListener('dragleave', this.handleDragOut);\n    div.removeEventListener('dragover', this.handleDrag);\n    div.removeEventListener('drop', this.handleDrop);\n  }\n\n  render() {\n    const {\n      handleSelectChange,\n      onSelect,\n      onRemove,\n      fileChange,\n      submitForm,\n      deleteFile\n    } = this;\n    const {\n      outletClasses,\n      selectedOutlet,\n      selectedOutletClass,\n      outletClass,\n      channels,\n      selectedChannel,\n      selectedRegion,\n      regions,\n      selectedCluster,\n      clusters,\n      userRoles,\n      selectedRole,\n      uploadDiv,\n      fileValues\n    } = this.state;\n    return /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 19\n      }\n    }, \"Channel\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: selectedChannel,\n      onChange: event => handleSelectChange(event),\n      className: \"form-control required\",\n      name: \"selectedChannel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: channels,\n      keyValue: \"id\",\n      value: \"channelName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 19\n      }\n    }, \"Regions\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: selectedRegion,\n      onChange: event => handleSelectChange(event),\n      className: \"form-control required\",\n      name: \"selectedRegion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: regions,\n      keyValue: \"id\",\n      value: \"locationName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 19\n      }\n    }, \"Cluster\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: selectedCluster,\n      onChange: event => handleSelectChange(event),\n      className: \"form-control required\",\n      name: \"selectedCluster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: clusters,\n      keyValue: \"id\",\n      value: \"locationName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 19\n      }\n    }, \"Outlet\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: selectedOutlet,\n      onChange: event => handleSelectChange(event),\n      className: \"form-control required\",\n      name: \"selectedOutlet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: outletClass,\n      keyValue: \"id\",\n      value: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 19\n      }\n    }, \"Outlet Class\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: selectedOutletClass,\n      onChange: event => handleSelectChange(event),\n      className: \"form-control required\",\n      name: \"selectedOutletClass\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: outletClasses,\n      keyValue: \"id\",\n      value: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 19\n      }\n    }, \"User Role\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: selectedRole,\n      onChange: event => handleSelectChange(event),\n      className: \"form-control required\",\n      name: \"selectedRole\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(RenderOptions, {\n      data: userRoles,\n      keyValue: \"id\",\n      value: \"designationName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 19\n      }\n    }, \"Staff Id's\"), /*#__PURE__*/React.createElement(Multiselect, {\n      options: this.state.users,\n      onSelect: onSelect,\n      onRemove: onRemove,\n      displayValue: \"name\",\n      selectedValues: this.state.selectedValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      ref: uploadDiv,\n      className: \"Drag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 19\n      }\n    }, \"Drag & drop your files here\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"fileElem\",\n      multiple: true,\n      accept: \".csv\",\n      onChange: fileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"button\",\n      htmlFor: \"fileElem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 19\n      }\n    }, \"Select some files\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 19\n      }\n    }, \"File Format .doc, . Pdf Supported\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/dms/data/mbooklet_sample.csv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 19\n      }\n    }, \"sample\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header__sub_sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 19\n      }\n    }, this.state.file['name']), this.state.file['name'] ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger cancel \",\n      onClick: () => deleteFile(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 46\n      }\n    }, \"Remove\") : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"showing__list__wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 17\n      }\n    }, this.state.fileValues.length > 0 ? /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 21\n      }\n    }, \"Showing \", this.state.fileValues.length, \" Results\") : /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 23\n      }\n    }, \"Showing \", this.state.selectedValue.length, \" Results\"), this.state.selectedValue.map((user, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"showing__list__item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 25\n      }\n    }, user.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 25\n      }\n    }, \"User . ID - \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 40\n      }\n    }, user.id)))), this.state.fileValues.map((user, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"showing__list__item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 25\n      }\n    }, \"Role . ID - \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 41\n      }\n    }, user.role_id)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 25\n      }\n    }, \"User . ID - \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 40\n      }\n    }, user.user_id))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12  mt-3 mb-3 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.closeAddParticipantModel,\n      type: \"button\",\n      className: \"btn btn-danger cancel \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 15\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {},\n      type: \"button\",\n      className: \"btn btn-danger reset \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 15\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => submitForm(),\n      type: \"button\",\n      className: \"btn btn-danger add \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 15\n      }\n    }, \" Add\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/MBookLet/Components/MaterialList/AddParticipant.js"],"names":["React","Component","PerfectScrollbar","Multiselect","RenderOptions","props","data","keyValue","value","length","options","map","option","index","AddParticipant","constructor","getOutletClasses","url","url_Booklet","OUTLET_CLASS","ajaxUtil","sendRequest","response","Array","isArray","setState","outletClasses","setNotification","message","responseMessage","hasError","timestamp","Date","getTime","loadingFunction","method","isShowSuccess","getOutletClass","id","OUTLET_API","hasOwnProperty","outletClass","content","handleDrag","e","preventDefault","stopPropagation","handleDragIn","handleDragOut","handleDrop","console","log","dataTransfer","files","readFromFile","uploadFile","GET_CHANNELS","channels","getRegions","file","handleFile","datas","target","result","split","forEach","line","push","channel_id","region_id","cluster_id","outlet","outlet_class","role_id","user_id","assessment_id","material","schedule","fileValues","indexOf","reader","FileReader","onload","readAsBinaryString","alert","fileChange","event","getChannels","handleSelectChange","name","currentTarget","getClusters","getUserRoles","getUserByRole","clusterId","GET_REGIONS","regions","regionId","GET_CLUSTERS","clusters","GET_USER_ROLES","userRoles","roleId","GET_USER_BY_ROLE","user","userId","firstName","users","onSelect","selectedList","selectedItem","selectedValue","onRemove","removedItem","deleteFile","submitForm","state","BULK_UPLOAD","status","getMaterialList","closeAddParticipantModel","ADD_PARTICIPANT","schedule_id","roles","channel","selectedChannel","cluster","selectedCluster","role","selectedRole","region","selectedRegion","selectedOutlet","selectedOutletClass","selectedUsers","dragging","uploadDiv","createRef","componentDidMount","div","current","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,6CAAP;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAA4BH,KAAlC;;AACA,MAAIC,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB;AACnB,QAAIC,OAAO,GAAGJ,IAAI,CAACK,GAAL,CAAS,CAACC,MAAD,EAASC,KAAT,kBACrB;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAED,MAAM,CAACL,QAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA+CK,MAAM,CAACJ,KAAD,CAArD,MADY,CAAd;AAGA,WAAO,cAAC;AAAQ,MAAA,GAAG,EAAC,KAAZ;AAAkB,MAAA,QAAQ,MAA1B;AAA2B,MAAA,KAAK,EAAE,IAAlC;AAAwC,MAAA,QAAQ,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAD,EAA2E,GAAGE,OAA9E,CAAP;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AAGD;;AACD,eAAe,MAAMI,cAAN,SAA6Bb,SAA7B,CAAuC;AACpDc,EAAAA,WAAW,CAACV,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmCnBW,gBAnCmB,GAmCA,MAAM;AACvB,YAAMC,GAAG,GAAG,KAAKZ,KAAL,CAAWa,WAAX,CAAuBC,YAAnC;AACA,WAAKd,KAAL,CAAWe,QAAX,CAAoBC,WAApB,CAAgCJ,GAAhC,EAAqC;AACnC,qBAAa;AADsB,OAArC,EAEGK,QAAQ,IAAI;AACb,YAAIC,KAAK,CAACC,OAAN,CAAcF,QAAd,CAAJ,EAA6B;AAC3B,eAAKG,QAAL,CAAc;AAAEC,YAAAA,aAAa,EAAEJ;AAAjB,WAAd;AACD,SAFD,MAEO;AACL,eAAKjB,KAAL,CAAWsB,eAAX,CAA2B;AACzBC,YAAAA,OAAO,EAAEN,QAAQ,CAACO,eADO;AAEzBC,YAAAA,QAAQ,EAAE,IAFe;AAGzBC,YAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAHc,WAA3B;AAMD;AACF,OAbD,EAaG,KAAK5B,KAAL,CAAW6B,eAbd,EAcE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE;AAAjC,OAdF;AAeD,KApDkB;;AAAA,SAqDnBC,cArDmB,GAqDDC,EAAD,IAAQ;AACvB,YAAMrB,GAAG,GAAG,KAAKZ,KAAL,CAAWa,WAAX,CAAuBqB,UAAvB,GAAqC,yDAAjD;AACA,WAAKlC,KAAL,CAAWe,QAAX,CAAoBC,WAApB,CAAgCJ,GAAhC,EAAqC,EAArC,EAAyCK,QAAQ,IAAI;AACnD,YAAIA,QAAQ,CAACkB,cAAT,CAAwB,SAAxB,CAAJ,EAAwC;AACtC,eAAKf,QAAL,CAAc;AAAEgB,YAAAA,WAAW,EAAEnB,QAAQ,CAACoB;AAAxB,WAAd;AACD,SAFD,MAEO;AACL,eAAKrC,KAAL,CAAWsB,eAAX,CAA2B;AACzBC,YAAAA,OAAO,EAAEN,QAAQ,CAACO,eADO;AAEzBC,YAAAA,QAAQ,EAAE,IAFe;AAGzBC,YAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAHc,WAA3B;AAMD;AACF,OAXD,EAWG,KAAK5B,KAAL,CAAW6B,eAXd,EAYE;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,aAAa,EAAE;AAAhC,OAZF;AAaD,KApEkB;;AAAA,SA4EnBO,UA5EmB,GA4ELC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACAD,MAAAA,CAAC,CAACE,eAAF;AACD,KA/EkB;;AAAA,SAgFnBC,YAhFmB,GAgFHH,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACAD,MAAAA,CAAC,CAACE,eAAF;AACD,KAnFkB;;AAAA,SAoFnBE,aApFmB,GAoFFJ,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACAD,MAAAA,CAAC,CAACE,eAAF;AACD,KAvFkB;;AAAA,SAwFnBG,UAxFmB,GAwFLL,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACAD,MAAAA,CAAC,CAACE,eAAF;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACQ,YAAF,CAAeC,KAA3B;AACA,WAAKC,YAAL,CAAkBV,CAAC,CAACQ,YAAF,CAAeC,KAAf,CAAqB,CAArB,CAAlB;AAED,KA9FkB;;AAAA,SA+FnBE,UA/FmB,GA+FN,MAAM;AACjB,WAAKlD,KAAL,CAAWe,QAAX,CAAoBC,WAApB,CAAgC,KAAKhB,KAAL,CAAWa,WAAX,CAAuBsC,YAAvD,EAAqE,EAArE,EAAyElC,QAAQ,IAAI;AACnF,aAAKG,QAAL,CAAc;AAAEgC,UAAAA,QAAQ,EAAEnC;AAAZ,SAAd;;AACA,YAAIA,QAAQ,CAACb,MAAT,GAAkB,CAAtB,EAAyB;AACvB,eAAKiD,UAAL,CAAgBpC,QAAQ,CAAC,CAAD,CAAR,CAAYgB,EAA5B;AACD;AACF,OALD,EAKG,KAAKjC,KAAL,CAAW6B,eALd,EAME;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,aAAa,EAAE;AAAhC,OANF;AAOD,KAvGkB;;AAAA,SAwGnBkB,YAxGmB,GAwGHK,IAAD,IAAU;AACvB,WAAKlC,QAAL,CAAc;AAAEkC,QAAAA;AAAF,OAAd;;AAGA,YAAMC,UAAU,GAAIhB,CAAD,IAAO;AACxB,YAAIiB,KAAK,GAAG,EAAZ;AACA,cAAMnB,OAAO,GAAGE,CAAC,CAACkB,MAAF,CAASC,MAAzB;AAEArB,QAAAA,OAAO,CAACsB,KAAR,CAAc,IAAd,EAAoBC,OAApB,CAA4B,CAACC,IAAD,EAAOrD,KAAP,KAAiB;AAC3C,cAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,gBAAIP,IAAI,GAAG4D,IAAI,CAACF,KAAL,CAAW,GAAX,CAAX;;AAEA,gBAAI1D,IAAI,CAACG,MAAL,IAAe,CAAnB,EAAsB;AACpByC,cAAAA,OAAO,CAACC,GAAR,CAAY7C,IAAZ;AACAuD,cAAAA,KAAK,CAACM,IAAN,CAAW;AACTC,gBAAAA,UAAU,EAAE9D,IAAI,CAAC,CAAD,CADP;AAET+D,gBAAAA,SAAS,EAAE/D,IAAI,CAAC,CAAD,CAFN;AAGTgE,gBAAAA,UAAU,EAAEhE,IAAI,CAAC,CAAD,CAHP;AAITiE,gBAAAA,MAAM,EAAEjE,IAAI,CAAC,CAAD,CAJH;AAKTkE,gBAAAA,YAAY,EAAElE,IAAI,CAAC,CAAD,CALT;AAMTmE,gBAAAA,OAAO,EAAEnE,IAAI,CAAC,CAAD,CANJ;AAOToE,gBAAAA,OAAO,EAAEpE,IAAI,CAAC,CAAD,CAPJ;AAQTqE,gBAAAA,aAAa,EAAE,KAAKtE,KAAL,CAAWuE,QAAX,CAAoBC,QAApB,CAA6BF;AARnC,eAAX;AAUD;AACF;AACF,SAlBD;AAmBA,aAAKlD,QAAL,CAAc;AAAEqD,UAAAA,UAAU,EAAEjB;AAAd,SAAd,EAvBwB,CAwBxB;AACD,OAzBD;;AA0BA,UAAIF,IAAI,CAAC,MAAD,CAAJ,CAAaoB,OAAb,CAAqB,MAArB,KAAgC,CAApC,EAAuC;AACrC,YAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAgBtB,UAAhB,CAFqC,CAGrC;;AACAoB,QAAAA,MAAM,CAACG,kBAAP,CAA0BxB,IAA1B;AACD,OALD,MAKO;AACLyB,QAAAA,KAAK,CAAC,cAAD,CAAL;AACD;AAGF,KAhJkB;;AAAA,SAiJnBC,UAjJmB,GAiJLC,KAAD,IAAW;AAEtB,WAAKhC,YAAL,CAAkBgC,KAAK,CAACxB,MAAN,CAAaT,KAAb,CAAmB,CAAnB,CAAlB;AACD,KApJkB;;AAAA,SAsJnBkC,WAtJmB,GAsJL,MAAM;AAClB,WAAKlF,KAAL,CAAWe,QAAX,CAAoBC,WAApB,CAAgC,KAAKhB,KAAL,CAAWa,WAAX,CAAuBsC,YAAvD,EAAqE,EAArE,EAAyElC,QAAQ,IAAI;AACnF,aAAKG,QAAL,CAAc;AAAEgC,UAAAA,QAAQ,EAAEnC;AAAZ,SAAd;;AACA,YAAIA,QAAQ,CAACb,MAAT,GAAkB,CAAtB,EAAyB;AACvB,eAAKiD,UAAL,CAAgBpC,QAAQ,CAAC,CAAD,CAAR,CAAYgB,EAA5B;AACD;AACF,OALD,EAKG,KAAKjC,KAAL,CAAW6B,eALd,EAME;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,aAAa,EAAE;AAAhC,OANF;AAOD,KA9JkB;;AAAA,SAgKnBoD,kBAhKmB,GAgKGF,KAAD,IAAW;AAC9B,YAAM;AAAEG,QAAAA,IAAF;AAAQjF,QAAAA;AAAR,UAAkB8E,KAAK,CAACI,aAA9B;AACA,WAAKjE,QAAL,CAAc;AAAE,SAACgE,IAAD,GAAQjF;AAAV,OAAd;;AACA,cAAQiF,IAAR;AACE,aAAK,iBAAL;AACE,eAAKpD,cAAL,CAAoB7B,KAApB;AACA,eAAKkD,UAAL,CAAgBlD,KAAhB;AACA;;AACF,aAAK,gBAAL;AACE,eAAKmF,WAAL,CAAiBnF,KAAjB;AACA;;AACF,aAAK,iBAAL;AACE,eAAKoF,YAAL;AACA;;AACF,aAAK,cAAL;AACE,eAAKC,aAAL,CAAmBrF,KAAnB;AACA;;AACF;AACE;AAfJ;AAiBD,KApLkB;;AAAA,SAsLnBkD,UAtLmB,GAsLLoC,SAAD,IAAe;AAC1B,WAAKzF,KAAL,CAAWe,QAAX,CAAoBC,WAApB,CAAiC,GAAE,KAAKhB,KAAL,CAAWa,WAAX,CAAuB6E,WAAY,cAAaD,SAAU,WAA7F,EAAyG,EAAzG,EAA6GxE,QAAQ,IAAI;AACvH,aAAKG,QAAL,CAAc;AAAEuE,UAAAA,OAAO,EAAE1E;AAAX,SAAd;;AACA,YAAIA,QAAQ,CAACb,MAAT,GAAkB,CAAtB,EAAyB;AACvB,eAAKkF,WAAL,CAAiBrE,QAAQ,CAAC,CAAD,CAAR,CAAYgB,EAA7B;AACD;AACF,OALD,EAKG,KAAKjC,KAAL,CAAW6B,eALd,EAME;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,aAAa,EAAE;AAAhC,OANF;AAOD,KA9LkB;;AAAA,SAgMnBuD,WAhMmB,GAgMJM,QAAD,IAAc;AAC1B,WAAK5F,KAAL,CAAWe,QAAX,CAAoBC,WAApB,CAAiC,GAAE,KAAKhB,KAAL,CAAWa,WAAX,CAAuBgF,YAAa,IAAGD,QAAS,EAAnF,EAAsF,EAAtF,EAA0F3E,QAAQ,IAAI;AACpG,aAAKG,QAAL,CAAc;AAAE0E,UAAAA,QAAQ,EAAE7E;AAAZ,SAAd;;AACA,YAAIA,QAAQ,CAACb,MAAT,GAAkB,CAAtB,EAAyB;AACvB,eAAKmF,YAAL,CAAkBtE,QAAQ,CAAC,CAAD,CAAR,CAAYgB,EAA9B;AACD;AACF,OALD,EAKG,KAAKjC,KAAL,CAAW6B,eALd,EAME;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,aAAa,EAAE;AAAhC,OANF;AAOD,KAxMkB;;AAAA,SA0MnBwD,YA1MmB,GA0MJ,MAAM;AAEnB,WAAKvF,KAAL,CAAWe,QAAX,CAAoBC,WAApB,CAAgC,KAAKhB,KAAL,CAAWa,WAAX,CAAuBkF,cAAvD,EAAuE,EAAvE,EAA2E9E,QAAQ,IAAI;AACrF,aAAKG,QAAL,CAAc;AAAE4E,UAAAA,SAAS,EAAE/E;AAAb,SAAd;AACD,OAFD,EAEG,KAAKjB,KAAL,CAAW6B,eAFd,EAGE;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,aAAa,EAAE;AAAhC,OAHF;AAID,KAhNkB;;AAAA,SAmNnByD,aAnNmB,GAmNFS,MAAD,IAAY;AAE1B,YAAMrF,GAAG,GAAI,GAAE,KAAKZ,KAAL,CAAWa,WAAX,CAAuBqF,gBAAiB,gBAAeD,MAAO,4CAA7E;AACA,WAAKjG,KAAL,CAAWe,QAAX,CAAoBC,WAApB,CAAgCJ,GAAhC,EAAqC,EAArC,EAAyCK,QAAQ,IAAI;AACnD4B,QAAAA,OAAO,CAACC,GAAR,CAAY7B,QAAZ;;AACA,YAAIA,QAAQ,CAACkB,cAAT,CAAwB,SAAxB,CAAJ,EAAwC;AACtC,gBAAMgE,IAAI,GAAGlF,QAAQ,CAACoB,OAAT,CAAiB/B,GAAjB,CAAsB6F,IAAD,KAAW;AAAElE,YAAAA,EAAE,EAAEkE,IAAI,CAACC,MAAX;AAAmBhB,YAAAA,IAAI,EAAEe,IAAI,CAACE;AAA9B,WAAX,CAArB,CAAb;AACA,eAAKjF,QAAL,CAAc;AAAEkF,YAAAA,KAAK,EAAEH;AAAT,WAAd;AACD;AACF,OAND,EAMG,KAAKnG,KAAL,CAAW6B,eANd,EAOE;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,aAAa,EAAE;AAAhC,OAPF;AAQD,KA9NkB;;AAAA,SA+NnBwE,QA/NmB,GA+NR,CAACC,YAAD,EAAeC,YAAf,KAAgC;AACzC,WAAKrF,QAAL,CAAc;AAAEqD,QAAAA,UAAU,EAAE;AAAd,OAAd;AACA,WAAKrD,QAAL,CAAc;AAAEsF,QAAAA,aAAa,EAAE,CAAC,GAAGF,YAAJ;AAAjB,OAAd;AACD,KAlOkB;;AAAA,SAoOnBG,QApOmB,GAoOR,CAACH,YAAD,EAAeI,WAAf,KAA+B;AACxC,WAAKxF,QAAL,CAAc;AAAEqD,QAAAA,UAAU,EAAE;AAAd,OAAd;AACA,WAAKrD,QAAL,CAAc;AAAEsF,QAAAA,aAAa,EAAE,CAAC,GAAGF,YAAJ;AAAjB,OAAd;AACD,KAvOkB;;AAAA,SAyOnBK,UAzOmB,GAyON,MAAM;AACjB,WAAKzF,QAAL,CAAc;AAAEkC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACA,WAAKlC,QAAL,CAAc;AAAEsF,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD,KA5OkB;;AAAA,SA8OnBI,UA9OmB,GA8ON,MAAM;AACjB,UAAI,KAAKC,KAAL,CAAWtC,UAAX,CAAsBrE,MAAtB,GAA+B,CAAnC,EAAsC;AACpC,aAAKJ,KAAL,CAAWe,QAAX,CAAoBC,WAApB,CAAgC,KAAKhB,KAAL,CAAWa,WAAX,CAAuBmG,WAAvD,EAAoE,KAAKD,KAAL,CAAWtC,UAA/E,EAA2FxD,QAAQ,IAAI;AACrG,eAAKjB,KAAL,CAAWsB,eAAX,CAA2B;AACzBC,YAAAA,OAAO,EAAEN,QAAQ,CAACM,OADO;AAEzBE,YAAAA,QAAQ,EAAE,CAACR,QAAQ,CAACgG,MAFK;AAGzBvF,YAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAHc,WAA3B;;AAKA,cAAIX,QAAQ,CAACgG,MAAb,EAAqB;AACnB,iBAAKjH,KAAL,CAAWkH,eAAX;AACA,iBAAKlH,KAAL,CAAWmH,wBAAX;AACD;AACF,SAVD,EAUG,KAAKnH,KAAL,CAAW6B,eAVd,EAWE;AAAEC,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,aAAa,EAAE;AAAjC,SAXF;AAaA;AACD;;AACD,YAAMuE,KAAK,GAAG,KAAKS,KAAL,CAAWL,aAAX,CAAyBpG,GAAzB,CAA8B6F,IAAD,IAAUA,IAAI,CAAClE,EAA5C,CAAd;;AACA,UAAIqE,KAAK,CAAClG,MAAN,IAAgB,CAApB,EAAuB;AACrB,aAAKJ,KAAL,CAAWsB,eAAX,CAA2B;AACzBC,UAAAA,OAAO,EAAE,qBADgB;AAEzBE,UAAAA,QAAQ,EAAE,IAFe;AAGzBC,UAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAHc,SAA3B;AAKA;AACD,OAzBgB,CA0BjB;AACA;AACA;AACA;;;AAEA,WAAK5B,KAAL,CAAWe,QAAX,CAAoBC,WAApB,CAAgC,KAAKhB,KAAL,CAAWa,WAAX,CAAuBuG,eAAvD,EAAwE;AACtEC,QAAAA,WAAW,EAAE,KAAKrH,KAAL,CAAWuE,QAAX,CAAoBC,QAApB,CAA6BF,aAD4B;AAEtEgD,QAAAA,KAAK,EAAEhB,KAF+D;AAGtEiB,QAAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS,eAHkD;AAItEC,QAAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,eAJkD;AAKtEC,QAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWa,YALqD;AAMtEC,QAAAA,MAAM,EAAE,KAAKd,KAAL,CAAWe;AANmD,OAAxE,EAOG7G,QAAQ,IAAI;AACb,aAAKjB,KAAL,CAAWsB,eAAX,CAA2B;AACzBC,UAAAA,OAAO,EAAEN,QAAQ,CAACM,OADO;AAEzBE,UAAAA,QAAQ,EAAE,CAACR,QAAQ,CAACgG,MAFK;AAGzBvF,UAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAHc,SAA3B;;AAKA,YAAIX,QAAQ,CAACgG,MAAb,EAAqB;AACnB,eAAKjH,KAAL,CAAWkH,eAAX;AACA,eAAKlH,KAAL,CAAWmH,wBAAX;AACD;AACF,OAjBD,EAiBG,KAAKnH,KAAL,CAAW6B,eAjBd,EAkBE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE;AAAjC,OAlBF;AAqBD,KAlSkB;;AAEjB,SAAKgF,KAAL,GAAa;AACXzD,MAAAA,IAAI,EAAE,EADK;AAEXgD,MAAAA,KAAK,EAAE,EAFI;AAGXlD,MAAAA,QAAQ,EAAE,EAHC;AAIXuC,MAAAA,OAAO,EAAE,EAJE;AAKXG,MAAAA,QAAQ,EAAE,EALC;AAMXE,MAAAA,SAAS,EAAE,EANA;AAOX5D,MAAAA,WAAW,EAAE,EAPF;AAQX2F,MAAAA,cAAc,EAAE,IARL;AASXC,MAAAA,mBAAmB,EAAE,IATV;AAUX1B,MAAAA,KAAK,EAAE,EAVI;AAWXkB,MAAAA,eAAe,EAAE,IAXN;AAYXE,MAAAA,eAAe,EAAE,IAZN;AAaXI,MAAAA,cAAc,EAAE,IAbL;AAcXF,MAAAA,YAAY,EAAE,IAdH;AAeXK,MAAAA,aAAa,EAAE,IAfJ;AAgBXC,MAAAA,QAAQ,EAAE,KAhBC;AAiBXxB,MAAAA,aAAa,EAAE,EAjBJ;AAkBXjC,MAAAA,UAAU,EAAE,EAlBD;AAmBX0D,MAAAA,SAAS,EAAExI,KAAK,CAACyI,SAAN,EAnBA;AAoBX/G,MAAAA,aAAa,EAAE;AApBJ,KAAb;AAsBD,GAzBmD,CA0BpD;;;AACAgH,EAAAA,iBAAiB,GAAG;AAClB,SAAK1H,gBAAL;AACA,SAAKuE,WAAL;AACA,QAAIoD,GAAG,GAAG,KAAKvB,KAAL,CAAWoB,SAAX,CAAqBI,OAA/B;AACAD,IAAAA,GAAG,CAACE,gBAAJ,CAAqB,WAArB,EAAkC,KAAK9F,YAAvC;AACA4F,IAAAA,GAAG,CAACE,gBAAJ,CAAqB,WAArB,EAAkC,KAAK7F,aAAvC;AACA2F,IAAAA,GAAG,CAACE,gBAAJ,CAAqB,UAArB,EAAiC,KAAKlG,UAAtC;AACAgG,IAAAA,GAAG,CAACE,gBAAJ,CAAqB,MAArB,EAA6B,KAAK5F,UAAlC;AACD;;AAmCD6F,EAAAA,oBAAoB,GAAG;AACrB,QAAIH,GAAG,GAAG,KAAKvB,KAAL,CAAWoB,SAAX,CAAqBI,OAA/B;AACAD,IAAAA,GAAG,CAACI,mBAAJ,CAAwB,WAAxB,EAAqC,KAAKhG,YAA1C;AACA4F,IAAAA,GAAG,CAACI,mBAAJ,CAAwB,WAAxB,EAAqC,KAAK/F,aAA1C;AACA2F,IAAAA,GAAG,CAACI,mBAAJ,CAAwB,UAAxB,EAAoC,KAAKpG,UAAzC;AACAgG,IAAAA,GAAG,CAACI,mBAAJ,CAAwB,MAAxB,EAAgC,KAAK9F,UAArC;AACD;;AAyND+F,EAAAA,MAAM,GAAG;AACP,UAAM;AAAExD,MAAAA,kBAAF;AAAsBoB,MAAAA,QAAtB;AAAgCI,MAAAA,QAAhC;AAA0C3B,MAAAA,UAA1C;AAAsD8B,MAAAA,UAAtD;AAAkED,MAAAA;AAAlE,QAAiF,IAAvF;AACA,UAAM;AAAExF,MAAAA,aAAF;AAAiB0G,MAAAA,cAAjB;AAAiCC,MAAAA,mBAAjC;AAAsD5F,MAAAA,WAAtD;AAAmEgB,MAAAA,QAAnE;AAA6EoE,MAAAA,eAA7E;AAA8FM,MAAAA,cAA9F;AAA8GnC,MAAAA,OAA9G;AAAuH+B,MAAAA,eAAvH;AAAwI5B,MAAAA,QAAxI;AAAkJE,MAAAA,SAAlJ;AAA6J4B,MAAAA,YAA7J;AAA2KO,MAAAA,SAA3K;AAAsL1D,MAAAA;AAAtL,QAAqM,KAAKsC,KAAhN;AACA,wBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,MAAA,KAAK,EAAES,eADT;AAEE,MAAA,QAAQ,EAAGvC,KAAD,IAAWE,kBAAkB,CAACF,KAAD,CAFzC;AAGE,MAAA,SAAS,EAAC,uBAHZ;AAIE,MAAA,IAAI,EAAC,iBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAE7B,QADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,KAAK,EAAC,aAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF,CADF,eAeE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,MAAA,KAAK,EAAE0E,cADT;AAEE,MAAA,QAAQ,EAAG7C,KAAD,IAAWE,kBAAkB,CAACF,KAAD,CAFzC;AAGE,MAAA,SAAS,EAAC,uBAHZ;AAIE,MAAA,IAAI,EAAC,gBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAEU,OADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,KAAK,EAAC,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF,CAfF,eA6BE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,MAAA,KAAK,EAAE+B,eADT;AAEE,MAAA,QAAQ,EAAGzC,KAAD,IAAWE,kBAAkB,CAACF,KAAD,CAFzC;AAGE,MAAA,SAAS,EAAC,uBAHZ;AAIE,MAAA,IAAI,EAAC,iBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAEa,QADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,KAAK,EAAC,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF,CA7BF,eA2CE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,MAAA,KAAK,EAAEiC,cADT;AAEE,MAAA,QAAQ,EAAG9C,KAAD,IAAWE,kBAAkB,CAACF,KAAD,CAFzC;AAGE,MAAA,SAAS,EAAC,uBAHZ;AAIE,MAAA,IAAI,EAAC,gBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAE7C,WADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,KAAK,EAAC,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF,CA3CF,eAyDE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,MAAA,KAAK,EAAE4F,mBADT;AAEE,MAAA,QAAQ,EAAG/C,KAAD,IAAWE,kBAAkB,CAACF,KAAD,CAFzC;AAGE,MAAA,SAAS,EAAC,uBAHZ;AAIE,MAAA,IAAI,EAAC,qBAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAE5D,aADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,KAAK,EAAC,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF,CAzDF,eAuEE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,MAAA,KAAK,EAAEuG,YADT;AAEE,MAAA,QAAQ,EAAG3C,KAAD,IAAWE,kBAAkB,CAACF,KAAD,CAFzC;AAGE,MAAA,SAAS,EAAC,uBAHZ;AAIE,MAAA,IAAI,EAAC,cAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAEe,SADR;AAEE,MAAA,QAAQ,EAAC,IAFX;AAGE,MAAA,KAAK,EAAC,iBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF,CAvEF,eAqFE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAE,KAAKe,KAAL,CAAWT,KADtB;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,QAAQ,EAAEI,QAHZ;AAIE,MAAA,YAAY,EAAC,MAJf;AAKE,MAAA,cAAc,EAAE,KAAKI,KAAL,CAAWL,aAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CArFF,eAgGE;AAAK,MAAA,GAAG,EAAEyB,SAAV;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,UAAtB;AAAiC,MAAA,QAAQ,MAAzC;AAA0C,MAAA,MAAM,EAAC,MAAjD;AAAwD,MAAA,QAAQ,EAAEnD,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,OAAO,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJF,CAhGF,eAsGE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,IAAI,EAAC,+BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAtGF,CADF,CADF,eA6GE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK+B,KAAL,CAAWzD,IAAX,CAAgB,MAAhB,CAAL,CADF,EAEG,KAAKyD,KAAL,CAAWzD,IAAX,CAAgB,MAAhB,iBAA0B;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAA2C,MAAA,OAAO,EAAE,MAAMuD,UAAU,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B,gBAAqH,yCAFxH,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKE,KAAL,CAAWtC,UAAX,CAAsBrE,MAAtB,GAA+B,CAA/B,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAK2G,KAAL,CAAWtC,UAAX,CAAsBrE,MAAnC,aADA,gBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAK2G,KAAL,CAAWL,aAAX,CAAyBtG,MAAtC,aAJN,EAQI,KAAK2G,KAAL,CAAWL,aAAX,CAAyBpG,GAAzB,CAA6B,CAAC6F,IAAD,EAAO3F,KAAP,kBAC3B;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,GAAG,EAAEA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK2F,IAAI,CAACf,IAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASe,IAAI,CAAClE,EAAd,CAAf,CAFF,CADF,CARJ,EAgBI,KAAK8E,KAAL,CAAWtC,UAAX,CAAsBnE,GAAtB,CAA0B,CAAC6F,IAAD,EAAO3F,KAAP,kBACxB;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,GAAG,EAAEA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS2F,IAAI,CAAC/B,OAAd,CAAhB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS+B,IAAI,CAAC9B,OAAd,CAAf,CAFF,CADF,CAhBJ,CALF,CADF,CA7GF,eA6IE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AACE,MAAA,OAAO,EAAE,KAAKrE,KAAL,CAAWmH,wBADtB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AACE,MAAA,OAAO,EAAE,MAAM,CAAG,CADpB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAUE;AACE,MAAA,OAAO,EAAE,MAAML,UAAU,EAD3B;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,qBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CA7IF,CADF,CADF,CADF;AAqKD;;AA7cmD","sourcesContent":["import React, { Component } from 'react';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nfunction RenderOptions(props) {\n  const { data, keyValue, value } = props;\n  if (data.length > 0) {\n    let options = data.map((option, index) => (\n      <option key={index} value={option[keyValue]}> {option[value]} </option>\n    ))\n    return [<option key=\"-10\" selected value={null} disabled> Please Select</option>, ...options];\n  }\n  return (\n    <option>Please Select</option>\n  )\n}\nexport default class AddParticipant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: {},\n      users: [],\n      channels: [],\n      regions: [],\n      clusters: [],\n      userRoles: [],\n      outletClass: [],\n      selectedOutlet: null,\n      selectedOutletClass: null,\n      users: [],\n      selectedChannel: null,\n      selectedCluster: null,\n      selectedRegion: null,\n      selectedRole: null,\n      selectedUsers: null,\n      dragging: false,\n      selectedValue: [],\n      fileValues: [],\n      uploadDiv: React.createRef(),\n      outletClasses: [],\n    }\n  }\n  // const { ajaxUtil, loadingFunction, setNotification\n  componentDidMount() {\n    this.getOutletClasses();\n    this.getChannels();\n    let div = this.state.uploadDiv.current\n    div.addEventListener('dragenter', this.handleDragIn)\n    div.addEventListener('dragleave', this.handleDragOut)\n    div.addEventListener('dragover', this.handleDrag)\n    div.addEventListener('drop', this.handleDrop)\n  }\n  getOutletClasses = () => {\n    const url = this.props.url_Booklet.OUTLET_CLASS;\n    this.props.ajaxUtil.sendRequest(url, {\n      \"tableName\": \"OUTLET_CLASS\"\n    }, response => {\n      if (Array.isArray(response)) {\n        this.setState({ outletClasses: response })\n      } else {\n        this.props.setNotification({\n          message: response.responseMessage,\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n\n      }\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  getOutletClass = (id) => {\n    const url = this.props.url_Booklet.OUTLET_API + `?channelId=10&order=desc&page=1&size=0&sort=createdDate`;\n    this.props.ajaxUtil.sendRequest(url, {}, response => {\n      if (response.hasOwnProperty('content')) {\n        this.setState({ outletClass: response.content });\n      } else {\n        this.props.setNotification({\n          message: response.responseMessage,\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  componentWillUnmount() {\n    let div = this.state.uploadDiv.current\n    div.removeEventListener('dragenter', this.handleDragIn)\n    div.removeEventListener('dragleave', this.handleDragOut)\n    div.removeEventListener('dragover', this.handleDrag)\n    div.removeEventListener('drop', this.handleDrop)\n  }\n  handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  handleDragIn = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  handleDragOut = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log(e.dataTransfer.files)\n    this.readFromFile(e.dataTransfer.files[0]);\n\n  }\n  uploadFile = () => {\n    this.props.ajaxUtil.sendRequest(this.props.url_Booklet.GET_CHANNELS, {}, response => {\n      this.setState({ channels: response })\n      if (response.length > 0) {\n        this.getRegions(response[0].id)\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  readFromFile = (file) => {\n    this.setState({ file })\n\n\n    const handleFile = (e) => {\n      let datas = [];\n      const content = e.target.result;\n\n      content.split('\\n').forEach((line, index) => {\n        if (index !== 0) {\n          let data = line.split(\",\");\n\n          if (data.length == 7) {\n            console.log(data)\n            datas.push({\n              channel_id: data[0],\n              region_id: data[1],\n              cluster_id: data[2],\n              outlet: data[3],\n              outlet_class: data[4],\n              role_id: data[5],\n              user_id: data[6],\n              assessment_id: this.props.material.schedule.assessment_id\n            })\n          }\n        }\n      });\n      this.setState({ fileValues: datas })\n      // this.uploadFile();\n    }\n    if (file['name'].indexOf('.csv') >= 0) {\n      var reader = new FileReader();\n      reader.onload = handleFile;\n      // start reading the file. When it is done, calls the onload event defined above.\n      reader.readAsBinaryString(file);\n    } else {\n      alert(\"Invalid File\");\n    }\n\n\n  }\n  fileChange = (event) => {\n\n    this.readFromFile(event.target.files[0]);\n  }\n  // get channels\n  getChannels = () => {\n    this.props.ajaxUtil.sendRequest(this.props.url_Booklet.GET_CHANNELS, {}, response => {\n      this.setState({ channels: response })\n      if (response.length > 0) {\n        this.getRegions(response[0].id)\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  // handle select input change \n  handleSelectChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value })\n    switch (name) {\n      case 'selectedChannel':\n        this.getOutletClass(value);\n        this.getRegions(value);\n        break;\n      case 'selectedRegion':\n        this.getClusters(value);\n        break;\n      case 'selectedCluster':\n        this.getUserRoles();\n        break;\n      case 'selectedRole':\n        this.getUserByRole(value);\n        break;\n      default:\n        break;\n    }\n  }\n  // get region for selected cluster\n  getRegions = (clusterId) => {\n    this.props.ajaxUtil.sendRequest(`${this.props.url_Booklet.GET_REGIONS}?channelId=${clusterId}&typeId=2`, {}, response => {\n      this.setState({ regions: response })\n      if (response.length > 0) {\n        this.getClusters(response[0].id)\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  // get Clusters by region\n  getClusters = (regionId) => {\n    this.props.ajaxUtil.sendRequest(`${this.props.url_Booklet.GET_CLUSTERS}/${regionId}`, {}, response => {\n      this.setState({ clusters: response })\n      if (response.length > 0) {\n        this.getUserRoles(response[0].id)\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  // get user roles\n  getUserRoles = () => {\n\n    this.props.ajaxUtil.sendRequest(this.props.url_Booklet.GET_USER_ROLES, {}, response => {\n      this.setState({ userRoles: response })\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n\n  // get user by role\n  getUserByRole = (roleId) => {\n\n    const url = `${this.props.url_Booklet.GET_USER_BY_ROLE}?designation=${roleId}&order=desc&page=1&size=0&sort=createdDate`\n    this.props.ajaxUtil.sendRequest(url, {}, response => {\n      console.log(response)\n      if (response.hasOwnProperty('content')) {\n        const user = response.content.map((user) => ({ id: user.userId, name: user.firstName }))\n        this.setState({ users: user })\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  onSelect = (selectedList, selectedItem) => {\n    this.setState({ fileValues: [] })\n    this.setState({ selectedValue: [...selectedList] });\n  }\n\n  onRemove = (selectedList, removedItem) => {\n    this.setState({ fileValues: [] })\n    this.setState({ selectedValue: [...selectedList] });\n  }\n\n  deleteFile = () => {\n    this.setState({ file: {} });\n    this.setState({ selectedValue: [] })\n  }\n\n  submitForm = () => {\n    if (this.state.fileValues.length > 0) {\n      this.props.ajaxUtil.sendRequest(this.props.url_Booklet.BULK_UPLOAD, this.state.fileValues, response => {\n        this.props.setNotification({\n          message: response.message,\n          hasError: !response.status,\n          timestamp: new Date().getTime()\n        });\n        if (response.status) {\n          this.props.getMaterialList()\n          this.props.closeAddParticipantModel();\n        }\n      }, this.props.loadingFunction,\n        { method: 'POST', isShowSuccess: false });\n\n      return;\n    }\n    const users = this.state.selectedValue.map((user) => user.id);\n    if (users.length <= 0) {\n      this.props.setNotification({\n        message: 'please select users',\n        hasError: true,\n        timestamp: new Date().getTime()\n      });\n      return;\n    }\n    // : null,\n    //   selectedCluster: null,\n    //   selectedRegion: null,\n    //   selectedRole: null,\n\n    this.props.ajaxUtil.sendRequest(this.props.url_Booklet.ADD_PARTICIPANT, {\n      schedule_id: this.props.material.schedule.assessment_id,\n      roles: users,\n      channel: this.state.selectedChannel,\n      cluster: this.state.selectedCluster,\n      role: this.state.selectedRole,\n      region: this.state.selectedRegion\n    }, response => {\n      this.props.setNotification({\n        message: response.message,\n        hasError: !response.status,\n        timestamp: new Date().getTime()\n      });\n      if (response.status) {\n        this.props.getMaterialList()\n        this.props.closeAddParticipantModel();\n      }\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n\n\n  }\n\n  render() {\n    const { handleSelectChange, onSelect, onRemove, fileChange, submitForm, deleteFile } = this;\n    const { outletClasses, selectedOutlet, selectedOutletClass, outletClass, channels, selectedChannel, selectedRegion, regions, selectedCluster, clusters, userRoles, selectedRole, uploadDiv, fileValues } = this.state;\n    return (\n      <PerfectScrollbar>\n        <div className=\"container\">\n          <div className=\"row mt-3\">\n            <div className=\"col-lg-6\">\n              <form action>\n                <div className=\" form-group mb-30\">\n                  <label>Channel</label>\n                  <select\n                    value={selectedChannel}\n                    onChange={(event) => handleSelectChange(event)}\n                    className=\"form-control required\"\n                    name=\"selectedChannel\">\n                    <RenderOptions\n                      data={channels}\n                      keyValue=\"id\"\n                      value=\"channelName\"\n                    />\n                  </select>\n                </div>\n                <div className=\" form-group mb-30\">\n                  <label>Regions</label>\n                  <select\n                    value={selectedRegion}\n                    onChange={(event) => handleSelectChange(event)}\n                    className=\"form-control required\"\n                    name=\"selectedRegion\">\n                    <RenderOptions\n                      data={regions}\n                      keyValue=\"id\"\n                      value=\"locationName\"\n                    />\n                  </select>\n                </div>\n                <div className=\" form-group mb-30\">\n                  <label>Cluster</label>\n                  <select\n                    value={selectedCluster}\n                    onChange={(event) => handleSelectChange(event)}\n                    className=\"form-control required\"\n                    name=\"selectedCluster\">\n                    <RenderOptions\n                      data={clusters}\n                      keyValue=\"id\"\n                      value=\"locationName\"\n                    />\n                  </select>\n                </div>\n                <div className=\" form-group mb-30\">\n                  <label>Outlet</label>\n                  <select\n                    value={selectedOutlet}\n                    onChange={(event) => handleSelectChange(event)}\n                    className=\"form-control required\"\n                    name=\"selectedOutlet\">\n                    <RenderOptions\n                      data={outletClass}\n                      keyValue=\"id\"\n                      value=\"name\"\n                    />\n                  </select>\n                </div>\n                <div className=\" form-group mb-30\">\n                  <label>Outlet Class</label>\n                  <select\n                    value={selectedOutletClass}\n                    onChange={(event) => handleSelectChange(event)}\n                    className=\"form-control required\"\n                    name=\"selectedOutletClass\">\n                    <RenderOptions\n                      data={outletClasses}\n                      keyValue=\"id\"\n                      value=\"name\"\n                    />\n                  </select>\n                </div>\n                <div className=\" form-group mb-30\">\n                  <label>User Role</label>\n                  <select\n                    value={selectedRole}\n                    onChange={(event) => handleSelectChange(event)}\n                    className=\"form-control required\"\n                    name=\"selectedRole\">\n                    <RenderOptions\n                      data={userRoles}\n                      keyValue=\"id\"\n                      value=\"designationName\"\n                    />\n                  </select>\n                </div>\n                <div className=\"form-group mb-30\">\n                  <label >Staff Id's</label>\n                  <Multiselect\n                    options={this.state.users}\n                    onSelect={onSelect}\n                    onRemove={onRemove}\n                    displayValue=\"name\"\n                    selectedValues={this.state.selectedValue}\n                  />\n                </div>\n\n                <div ref={uploadDiv} className=\"Drag\">\n                  <h6>Drag &amp; drop your files here</h6>\n                  <input type=\"file\" id=\"fileElem\" multiple accept=\".csv\" onChange={fileChange} />\n                  <label className=\"button\" htmlFor=\"fileElem\">Select some files</label>\n                  <p>File Format .doc, . Pdf Supported</p>\n                </div>\n                <div className=\"form-group text-center\">\n                  <a href=\"/dms/data/mbooklet_sample.csv\">sample</a>\n                </div>\n              </form>\n            </div>\n            <div className=\"col-lg-6\">\n              <div className=\"header__sub_sub\">\n                <div className=\"header_wrap\">\n                  <h6>{this.state.file['name']}</h6>\n                  {this.state.file['name'] ? <button className=\"btn btn-danger cancel \" onClick={() => deleteFile()} >Remove</button> : <></>}\n                </div>\n                <div className=\"showing__list__wrap\">\n                  {(this.state.fileValues.length > 0 ? (\n                    <h6>Showing {this.state.fileValues.length} Results</h6>\n                  ) : (\n                      <h6>Showing {this.state.selectedValue.length} Results</h6>\n                    ))}\n\n                  {\n                    this.state.selectedValue.map((user, index) => (\n                      <div className=\"showing__list__item\" key={index}>\n                        <h5>{user.name}</h5>\n                        <p>User . ID - <strong>{user.id}</strong></p>\n                      </div>\n                    ))\n                  }\n                  {\n                    this.state.fileValues.map((user, index) => (\n                      <div className=\"showing__list__item\" key={index}>\n                        <h5>Role . ID - <strong>{user.role_id}</strong></h5>\n                        <p>User . ID - <strong>{user.user_id}</strong></p>\n                      </div>\n                    ))\n                  }\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-12  mt-3 mb-3 text-right\">\n\n              <button\n                onClick={this.props.closeAddParticipantModel}\n                type=\"button\"\n                className=\"btn btn-danger cancel \">Cancel</button>\n              <button\n                onClick={() => { }}\n                type=\"button\"\n                className=\"btn btn-danger reset \">Reset</button>\n              <button\n                onClick={() => submitForm()}\n                type=\"button\"\n                className=\"btn btn-danger add \"> Add</button>\n\n            </div>\n\n          </div>\n        </div>\n      </PerfectScrollbar>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}