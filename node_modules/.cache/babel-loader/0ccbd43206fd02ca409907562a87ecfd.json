{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/home/SideMenu.js\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, Collapse } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport _ from 'lodash';\nimport { saveCurrentState } from '../../actions/index';\nimport { store } from '../../index';\nimport { FULLSCRREN_PATHS } from '../../util/Constants';\n\nclass SideMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openedMenu: null\n    };\n    this.state = {\n      navigatedMenu: null\n    };\n    this.toggle = this.toggle.bind(this);\n    this.renderMenus = this.renderMenus.bind(this);\n    this.checkPrivilages = this.checkPrivilages.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.clearState = this.clearState.bind(this);\n    this.onMenuMouseOver = this.onMenuMouseOver.bind(this);\n    this.onMenuMouseLeave = this.onMenuMouseLeave.bind(this);\n    this.state = {\n      \"windowHeight\": 0\n    };\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      \"windowHeight\": window.innerHeight\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isNavMouseOver && prevProps.isNavMouseOver != this.props.isNavMouseOver && this.state.openedMenu) {\n      this.setState({\n        openedMenu: null\n      });\n    }\n  }\n\n  toggle(id) {\n    const openedMenu = this.state.openedMenu === id ? null : id;\n    this.setState({\n      openedMenu\n    });\n  }\n\n  checkPrivilages(menuPrivilages) {\n    if (menuPrivilages && menuPrivilages.length > 0) {\n      const diff = _.difference(menuPrivilages, this.props.privilages, _.isEqual);\n\n      if (_.isEqual(diff.sort(), menuPrivilages.sort())) {\n        //No Privilages available for this menu\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  onMenuMouseOver() {\n    this.props.onNavMouseOver();\n  }\n\n  onMenuMouseLeave() {\n    this.setState({\n      navigatedMenu: this.state.openedMenu\n    });\n    this.setState({\n      openedMenu: null\n    });\n    this.props.onNavMouseRemove();\n  }\n\n  clearState(linkTo) {\n    store.dispatch(saveCurrentState(null));\n    if (FULLSCRREN_PATHS.includes(linkTo) && !this.props.isNavMouseOver) this.props.toggleSideNav();\n  }\n\n  renderMenus(menus, isSubmenu, isNavShown) {\n    return menus && Array.isArray(menus) ? menus.map(menu => {\n      if (menu.privilages && menu.privilages.length > 0) {\n        if (this.checkPrivilages(menu.privilages) === false) return false;\n      }\n\n      let isSelectParent = false;\n\n      if (menu.submenus && menu.submenus.length > 0) {\n        let subMenuPrivilages = [];\n        menu.submenus.forEach(submenu => {\n          if (submenu.privilages) {\n            subMenuPrivilages.push(...submenu.privilages);\n          }\n\n          if (`${submenu.linkTo}` === window.location.pathname) {\n            isSelectParent = true;\n          }\n        });\n        if (this.checkPrivilages(subMenuPrivilages) === false) return false;\n      }\n\n      console.log(\"==log==\", isSelectParent);\n      return /*#__PURE__*/React.createElement(ListGroupItem, {\n        key: menu.id,\n        className: isNavShown ? \"\" : \"listgroupshown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, menu.submenus && Array.isArray(menu.submenus) ? [/*#__PURE__*/React.createElement(\"a\", {\n        className: (isNavShown ? \"\" : \"menutext \" + (this.state.navigatedMenu === menu.id ? \"opened\" : \"\")) + (isSelectParent ? \"selected\" : this.state.openedMenu === menu.id ? \"opened\" : \"\"),\n        onClick: () => this.toggle(menu.id),\n        key: `anchor-${menu.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `fa ${menu.icon} menu-icon ` + (isNavShown ? \"\" : \"iconshown\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }), menu.label), /*#__PURE__*/React.createElement(\"i\", Object.assign({\n        className: \"fa fa-angle-right submenu-icon\"\n      }, this.state.openedMenu === menu.id ? {\n        style: {\n          transform: 'rotate(90deg)'\n        }\n      } : {}, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(Collapse, {\n        isOpen: this.state.openedMenu === menu.id,\n        key: `submenu-${menu.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        className: \"side-submenu-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 23\n        }\n      }, this.renderMenus(menu.submenus, true, isNavShown)))] : /*#__PURE__*/React.createElement(NavLink, {\n        to: menu.linkTo,\n        onClick: () => this.clearState(menu.linkTo),\n        isActive: (match, location) => {\n          return location.pathname.substring(0, menu.linkTo.length) === menu.linkTo;\n        },\n        activeClassName: \"opened\",\n        className: isNavShown ? \"\" : \"menutext \" + (this.state.navigatedMenu === menu.id ? \"opened\" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, !isSubmenu ? /*#__PURE__*/React.createElement(\"i\", {\n        className: `fa ${menu.icon} menu-icon ` + (isNavShown ? \"\" : \"iconshown\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 36\n        }\n      }) : \"\", menu.label));\n    }) : false;\n  }\n\n  render() {\n    const sideNavSubStyle = {\n      height: this.state.windowHeight - 118\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo-div primary-color text-center \" + (this.props.isNavShown ? '' : 'toogleIconDiv'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"head-toggle-menu \" + (this.props.isNavShown ? '' : 'toogleIconSpan'),\n      onClick: this.props.toggleSideNav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-bars \" + (this.props.isNavShown ? '' : 'toogleIconMenu'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 133\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.logo,\n      alt: \"6d Technlogies\",\n      className: \"head-logo-img \" + (this.props.isNavShown ? '' : 'minSideBar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: sideNavSubStyle,\n      className: \"side-nav-menu-in scrollbar \" + (this.props.isNavShown ? '' : 'side-nav-shown'),\n      onMouseOver: this.props.isNavMouseOver ? this.onMenuMouseOver : '',\n      onMouseLeave: this.props.isNavMouseOver ? this.onMenuMouseLeave : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      className: \"side-menu-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, this.renderMenus(this.props.menus, false, this.props.isNavShown))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }), this.props.isFooterDiv ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu_footer text-center \" + (this.props.isNavShown ? '' : 'minSideBar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, this.props.footerText) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu_footer text-center\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 20\n      }\n    }));\n  }\n\n}\n\nexport default SideMenu;","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/home/SideMenu.js"],"names":["React","Component","ListGroup","ListGroupItem","Collapse","NavLink","_","saveCurrentState","store","FULLSCRREN_PATHS","SideMenu","constructor","props","state","openedMenu","navigatedMenu","toggle","bind","renderMenus","checkPrivilages","updateWindowDimensions","clearState","onMenuMouseOver","onMenuMouseLeave","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","setState","innerHeight","componentDidUpdate","prevProps","isNavMouseOver","id","menuPrivilages","length","diff","difference","privilages","isEqual","sort","onNavMouseOver","onNavMouseRemove","linkTo","dispatch","includes","toggleSideNav","menus","isSubmenu","isNavShown","Array","isArray","map","menu","isSelectParent","submenus","subMenuPrivilages","forEach","submenu","push","location","pathname","console","log","icon","label","style","transform","match","substring","render","sideNavSubStyle","height","windowHeight","logo","isFooterDiv","footerText","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem, Collapse } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport { saveCurrentState } from '../../actions/index';\r\nimport {store} from '../../index';\r\nimport {FULLSCRREN_PATHS} from '../../util/Constants';\r\n\r\nclass SideMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { openedMenu: null };\r\n    this.state = {navigatedMenu: null};\r\n    this.toggle = this.toggle.bind(this);\r\n    this.renderMenus = this.renderMenus.bind(this);\r\n    this.checkPrivilages = this.checkPrivilages.bind(this);\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    this.clearState = this.clearState.bind(this);\r\n    this.onMenuMouseOver=this.onMenuMouseOver.bind(this);\r\n    this.onMenuMouseLeave=this.onMenuMouseLeave.bind(this);\r\n    this.state = { \"windowHeight\": 0 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  updateWindowDimensions() {\r\n    this.setState({ \"windowHeight\": window.innerHeight });\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.isNavMouseOver&&prevProps.isNavMouseOver!=this.props.isNavMouseOver&&this.state.openedMenu){\r\n        this.setState({openedMenu:null})  \r\n    }\r\n  }\r\n\r\n\r\n  toggle(id) {\r\n    const openedMenu = this.state.openedMenu === id ? null : id;\r\n    this.setState({ openedMenu });\r\n  }\r\n\r\n  checkPrivilages(menuPrivilages) {\r\n    if (menuPrivilages && menuPrivilages.length > 0) {\r\n      const diff = _.difference(menuPrivilages, this.props.privilages, _.isEqual);\r\n      if (_.isEqual(diff.sort(), menuPrivilages.sort())) {\r\n        //No Privilages available for this menu\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  onMenuMouseOver(){\r\n      this.props.onNavMouseOver();\r\n  }\r\n  onMenuMouseLeave(){\r\n    this.setState({navigatedMenu:this.state.openedMenu});\r\n    this.setState({openedMenu:null});\r\n    this.props.onNavMouseRemove();\r\n  }\r\n  clearState(linkTo) {\r\n    store.dispatch(saveCurrentState(\r\n      null\r\n    ));\r\n    if(FULLSCRREN_PATHS.includes(linkTo)&&!this.props.isNavMouseOver)\r\n      this.props.toggleSideNav();    \r\n  }\r\n\r\n  renderMenus(menus, isSubmenu, isNavShown) {\r\n    return menus && Array.isArray(menus) ? (\r\n      menus.map(\r\n        menu => {\r\n          if (menu.privilages && menu.privilages.length > 0) {\r\n            if (this.checkPrivilages(menu.privilages) === false)\r\n              return false;\r\n          }\r\n          let isSelectParent = false;\r\n          if (menu.submenus && menu.submenus.length > 0) {\r\n            let subMenuPrivilages = [];\r\n            menu.submenus.forEach(\r\n              submenu => {\r\n                if (submenu.privilages) {\r\n                  subMenuPrivilages.push(...submenu.privilages);\r\n                }\r\n                if (`${submenu.linkTo}` === window.location.pathname) {\r\n                  isSelectParent = true;\r\n                }\r\n              }\r\n            );\r\n            if (this.checkPrivilages(subMenuPrivilages) === false)\r\n              return false;\r\n          }\r\n          console.log(\"==log==\",isSelectParent);\r\n          return (\r\n            \r\n            <ListGroupItem key={menu.id} className={(isNavShown ? \"\":\"listgroupshown\")} >\r\n              {\r\n                \r\n                menu.submenus && Array.isArray(menu.submenus) ?\r\n                  [\r\n                    \r\n                    <a className={(isNavShown ? \"\":\"menutext \" + (this.state.navigatedMenu === menu.id ? \"opened\" : \"\")) + (isSelectParent ? \"selected\" : (this.state.openedMenu === menu.id ? \"opened\" : \"\"))} onClick={() => this.toggle(menu.id)} key={`anchor-${menu.id}`}>\r\n                      <span>\r\n                        <i className={`fa ${menu.icon} menu-icon ` + (isNavShown ? \"\":\"iconshown\")} />\r\n                        {menu.label}\r\n                      </span>\r\n                      <i className=\"fa fa-angle-right submenu-icon\"\r\n                        {...(this.state.openedMenu === menu.id ? { style: { transform: 'rotate(90deg)' } } : {})}\r\n                      ></i>\r\n                    </a>,\r\n                    <Collapse isOpen={this.state.openedMenu === menu.id} key={`submenu-${menu.id}`}>\r\n                      <ListGroup className=\"side-submenu-item\">\r\n                        {this.renderMenus(menu.submenus, true, isNavShown)}\r\n                      </ListGroup>\r\n                    </Collapse>\r\n                  ] :\r\n                  <NavLink to={menu.linkTo} onClick={() => this.clearState(menu.linkTo)}\r\n                   isActive={ (match, location) => { return location.pathname.substring(0, menu.linkTo.length) === menu.linkTo } }\r\n                   activeClassName=\"opened\" className={(isNavShown ? \"\":\"menutext \" + (this.state.navigatedMenu === menu.id ? \"opened\" : \"\"))}>\r\n                    {(!isSubmenu ? <i className={`fa ${menu.icon} menu-icon ` + (isNavShown ? \"\":\"iconshown\")} /> : \"\")}\r\n                    {menu.label}\r\n                  </NavLink>\r\n              }\r\n            </ListGroupItem>\r\n          )\r\n        }\r\n      )\r\n    ) : (false)\r\n  }\r\n\r\n  render() {\r\n    const sideNavSubStyle = {\r\n      height: this.state.windowHeight - 118\r\n    };\r\n    return (\r\n      <div>\r\n        <div className={\"logo-div primary-color text-center \"+ (this.props.isNavShown ? '' : 'toogleIconDiv')}>\r\n          <span className={\"head-toggle-menu \"+ (this.props.isNavShown ? '' : 'toogleIconSpan')} onClick={this.props.toggleSideNav}><i className={\"fa fa-bars \" + (this.props.isNavShown ? '' : 'toogleIconMenu')}></i></span>\r\n          <img src={this.props.logo} alt=\"6d Technlogies\" className={\"head-logo-img \"+(this.props.isNavShown ? '' : 'minSideBar')}/>\r\n        </div>\r\n        <div style={sideNavSubStyle} className={\"side-nav-menu-in scrollbar \"+ (this.props.isNavShown ? '' : 'side-nav-shown')} \r\n        onMouseOver={this.props.isNavMouseOver?this.onMenuMouseOver:''} onMouseLeave={this.props.isNavMouseOver?this.onMenuMouseLeave:''} >\r\n          <ListGroup className=\"side-menu-item\">\r\n            {this.renderMenus(this.props.menus, false, this.props.isNavShown)}\r\n          </ListGroup>\r\n        </div>\r\n        <div style={{height:'10px'}}>\r\n        </div>\r\n        {this.props.isFooterDiv ? \r\n          <div className={\"menu_footer text-center \" + (this.props.isNavShown ? '' : 'minSideBar')}>\r\n            {this.props.footerText}\r\n          </div> : <div className=\"menu_footer text-center\" style={{display: 'none'}}>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu;\r\n"]},"metadata":{},"sourceType":"module"}