{"ast":null,"code":"var _jsxFileName = \"/home/alrin/Downloads/INVENTORY22/src/components/role-management/components/ViewRoles.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { Popup, POPUP_ALIGN } from '@6d-ui/popup';\nimport SearchFilter from \"./SearchFilter\";\nimport RoleDetails from \"./RoleDetails\";\nimport { ROLES as DataTableHeader } from './util/DataTableHeader';\nimport { DataTableContainer } from \"../../data-table\";\nconst modules = [];\nexport default class View extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearchFilterSubmit = onSearchFn => data => {\n      this.setState({\n        filterParams: data || {}\n      });\n      onSearchFn(data);\n    };\n\n    this.renderSearchFilter = searchFilterProps => React.createElement(SearchFilter, Object.assign({}, this.state, {\n      ajaxUtil: this.props.ajaxUtil // onCancel={() => searchFilterProps.toggleAction(0, null)}\n      ,\n      onCancel: () => searchFilterProps.togglePopup(0, null),\n      onSubmitClick: this.handleSearchFilterSubmit(searchFilterProps.onSearch)\n    }, this.state.filterParams, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }));\n\n    this.FORM_MODAL = props.globalConstants.FORM_MODAL;\n\n    if (!props.previousState) {\n      this.state = {\n        filterParams: {}\n      };\n    } else {\n      this.state = {\n        roleId: \"\",\n        roleName: \"\",\n        permissions: \"\",\n        ajaxUtil: props.previousState.ajaxUtil,\n        filterParams: props.previousState.filterParams\n      };\n    }\n\n    this.toggleAction = this.toggleAction.bind(this);\n    this.deleteRow = this.deleteRow.bind(this);\n    props.setHeader(\"Roles\");\n  }\n\n  deleteRow(obj, message, callback) {\n    this.props.setModalPopup({\n      'rowId': obj,\n      'isOpen': true,\n      'onConfirmCallBack': this.onConfirmCallBack.bind(this, callback),\n      'title': \"Confirm Delete\",\n      'content': message,\n      'CancelBtnLabel': \"Cancel\",\n      'confirmBtnLabel': \"Delete\"\n    });\n  }\n\n  onConfirmCallBack(callback, rowId) {\n    this.props.ajaxUtil.sendRequest(this.props.url_Roles.DELETE_URL + rowId, {}, callback, this.props.loadingFunction, {\n      method: 'GET',\n      isShowSuccess: true\n    });\n  }\n\n  toggleAction(type, id) {\n    if (type === this.FORM_MODAL.View) {\n      this.props.ajaxUtil.sendRequest(this.props.url_Roles.GET_FEATURES, {}, response => {\n        if (!response) {\n          this.props.setNotification({\n            message: \"Failed to load modules\",\n            hasError: true,\n            timestamp: new Date().getTime()\n          });\n        } else {\n          _.pullAll(modules, modules);\n\n          response && response.response.forEach((module, index) => {\n            modules.push(module);\n          });\n          this.props.ajaxUtil.sendRequest(`${this.props.url_Roles.SEARCH_URL}/${id}`, {}, response => {\n            this.viewDataCallBack(response);\n          }, this.props.loadingFunction, {\n            method: 'GET',\n            isShowSuccess: false\n          });\n        }\n      }, this.props.loadingFunction, {\n        method: \"GET\",\n        isShowSuccess: false\n      });\n      return false;\n    } else {\n      this.setState({\n        modal: type,\n        actionParamId: id\n      });\n    }\n  }\n\n  viewDataCallBack(response) {\n    if (!response) {\n      this.props.setNotification({\n        message: \"Failed to load Role Details\",\n        hasError: true,\n        timestamp: new Date().getTime()\n      });\n    } else {\n      // const roleDetails = response.roleMaster;\n      const roleDetails = response;\n      const roleFeatures = roleDetails.featureList;\n      const currentFeatures = [];\n      roleFeatures.forEach((features, index) => {\n        currentFeatures.push(features.featureId);\n      });\n      const permissions = {};\n      modules.forEach((module, index) => {\n        permissions[module.id] = this.getCurrentPermissions(module.featureMaster, currentFeatures);\n      });\n      this.setState({\n        isLoading: false,\n        roleId: roleDetails.roleId,\n        roleName: roleDetails.roleName,\n        // roleDesc: roleDetails.roleDesc,\n        // createdUser: roleDetails.createdUser,\n        createdDate: roleDetails.createdDate,\n        permissions: permissions,\n        modules: modules,\n        modal: 4\n      });\n    }\n  }\n\n  getCurrentPermissions(permissions, currentFeatures) {\n    const permissionList = [];\n\n    _.forEach(permissions, function (feature) {\n      if (_.indexOf(currentFeatures, feature.featureId) >= 0) {\n        const temp = {\n          value: feature.featureId,\n          label: feature.featureName\n        };\n        permissionList.push(temp);\n      }\n    });\n\n    return permissionList;\n  }\n\n  render() {\n    const propsForDataTable = {\n      privilages: this.props.privilages,\n      menuPrivilages: this.props.menuPrivilages,\n      ajaxUtil: this.props.ajaxUtil,\n      listUrl: this.props.url_Roles.SEARCH_URL,\n      previousState: this.props.previousState,\n      apiVersion: 3,\n      defaultRowCount: this.props.globalConstants.INITIAL_ROW_COUNT,\n      rowIdParam: 'roleId',\n      tableHeaderLabels: DataTableHeader.LABEL_LIST,\n      loadingFunction: this.props.loadingFunction,\n      header: \"Roles\",\n      togglePopup: this.toggleAction,\n      deleteRow: this.deleteRow,\n      deleteMessage: 'Are you sure to Delete role',\n      deleteMessageParam: ['roleName'],\n      saveState: state => this.props.saveCurrentState({\n        [this.props.previousStateKey]: state\n      }),\n      orderByCol: \"roleId\",\n      tabPriv: {\n        info: true,\n        delete: true\n      },\n      renderSearchFilter: this.renderSearchFilter,\n      filterLabelList: DataTableHeader.SEARCH_FIELDS,\n      tableSearchFilters: DataTableHeader.SEARCH_FILTERS\n    };\n\n    if (this.state.modal === 2) {\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/Roles/create\",\n        push: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }));\n    }\n\n    if (this.state.modal === 3) {\n      const editUrl = `/Roles/edit/${this.state.actionParamId}`;\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: editUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"custom-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(DataTableContainer, Object.assign({}, propsForDataTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(Popup, {\n      type: POPUP_ALIGN.RIGHT,\n      title: \"View\",\n      isOpen: this.state.modal === 4,\n      close: this.toggleAction,\n      minWidth: \"85%\",\n      component: React.createElement(RoleDetails, Object.assign({}, this.state, {\n        ajaxUtil: this.props.ajaxUtil,\n        onCancel: () => this.toggleAction(0, null),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/Downloads/INVENTORY22/src/components/role-management/components/ViewRoles.js"],"names":["React","Component","Fragment","Switch","Redirect","_","Popup","POPUP_ALIGN","SearchFilter","RoleDetails","ROLES","DataTableHeader","DataTableContainer","modules","View","constructor","props","handleSearchFilterSubmit","onSearchFn","data","setState","filterParams","renderSearchFilter","searchFilterProps","state","ajaxUtil","togglePopup","onSearch","FORM_MODAL","globalConstants","previousState","roleId","roleName","permissions","toggleAction","bind","deleteRow","setHeader","obj","message","callback","setModalPopup","onConfirmCallBack","rowId","sendRequest","url_Roles","DELETE_URL","loadingFunction","method","isShowSuccess","type","id","GET_FEATURES","response","setNotification","hasError","timestamp","Date","getTime","pullAll","forEach","module","index","push","SEARCH_URL","viewDataCallBack","modal","actionParamId","roleDetails","roleFeatures","featureList","currentFeatures","features","featureId","getCurrentPermissions","featureMaster","isLoading","createdDate","permissionList","feature","indexOf","temp","value","label","featureName","render","propsForDataTable","privilages","menuPrivilages","listUrl","apiVersion","defaultRowCount","INITIAL_ROW_COUNT","rowIdParam","tableHeaderLabels","LABEL_LIST","header","deleteMessage","deleteMessageParam","saveState","saveCurrentState","previousStateKey","orderByCol","tabPriv","info","delete","filterLabelList","SEARCH_FIELDS","tableSearchFilters","SEARCH_FILTERS","editUrl","RIGHT"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Switch, Redirect } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport { Popup, POPUP_ALIGN } from '@6d-ui/popup';\r\nimport SearchFilter from \"./SearchFilter\";\r\nimport RoleDetails from \"./RoleDetails\";\r\nimport { ROLES as DataTableHeader } from './util/DataTableHeader';\r\nimport { DataTableContainer } from \"../../data-table\";\r\n\r\nconst modules = [];\r\n\r\nexport default class View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.FORM_MODAL = props.globalConstants.FORM_MODAL;\r\n\r\n    if (!props.previousState) {\r\n      this.state = {\r\n        filterParams: {}\r\n      };\r\n    } else {\r\n      this.state = {\r\n        roleId: \"\",\r\n        roleName: \"\",\r\n        permissions: \"\",\r\n        ajaxUtil: props.previousState.ajaxUtil,\r\n        filterParams: props.previousState.filterParams,\r\n      };\r\n    }\r\n\r\n    this.toggleAction = this.toggleAction.bind(this);\r\n    this.deleteRow = this.deleteRow.bind(this);\r\n    props.setHeader(\"Roles\");\r\n  }\r\n\r\n  deleteRow(obj, message, callback) {\r\n    this.props.setModalPopup({\r\n      'rowId': obj,\r\n      'isOpen': true,\r\n      'onConfirmCallBack': this.onConfirmCallBack.bind(this, callback),\r\n      'title': \"Confirm Delete\",\r\n      'content': message,\r\n      'CancelBtnLabel': \"Cancel\",\r\n      'confirmBtnLabel': \"Delete\"\r\n    });\r\n  }\r\n\r\n  onConfirmCallBack(callback, rowId) {\r\n    this.props.ajaxUtil.sendRequest(this.props.url_Roles.DELETE_URL+rowId, {}, callback, this.props.loadingFunction,\r\n      { method: 'GET', isShowSuccess: true });\r\n  }\r\n\r\n  toggleAction(type, id) {\r\n\r\n    if (type === this.FORM_MODAL.View) {\r\n      this.props.ajaxUtil.sendRequest(this.props.url_Roles.GET_FEATURES,\r\n        {},\r\n        response => {\r\n\r\n          if (!response) {\r\n            this.props.setNotification({\r\n              message: \"Failed to load modules\",\r\n              hasError: true,\r\n              timestamp: new Date().getTime()\r\n            });\r\n          } else {\r\n            _.pullAll(modules, modules);\r\n            response&&response.response.forEach((module, index) => {\r\n              modules.push(module);\r\n            });\r\n\r\n            this.props.ajaxUtil.sendRequest(`${this.props.url_Roles.SEARCH_URL}/${id}`, {},\r\n              response => {\r\n\r\n                this.viewDataCallBack(response)\r\n\r\n              },\r\n              this.props.loadingFunction,\r\n              { method: 'GET', isShowSuccess: false });\r\n          }\r\n\r\n\r\n        },\r\n        this.props.loadingFunction,\r\n        { method: \"GET\", isShowSuccess: false });\r\n      return false;\r\n    } else {\r\n      this.setState({ modal: type, actionParamId: id });\r\n    }\r\n  }\r\n\r\n  viewDataCallBack(response) {\r\n    if (!response) {\r\n      this.props.setNotification({\r\n        message: \"Failed to load Role Details\",\r\n        hasError: true,\r\n        timestamp: new Date().getTime()\r\n      });\r\n    } else {\r\n      // const roleDetails = response.roleMaster;\r\n      const roleDetails = response;\r\n      const roleFeatures = roleDetails.featureList;\r\n      const currentFeatures = [];\r\n      roleFeatures.forEach((features, index) => {\r\n        currentFeatures.push(features.featureId);\r\n      });\r\n      const permissions = {};\r\n\r\n      modules.forEach((module, index) => {\r\n        permissions[module.id] = this.getCurrentPermissions(\r\n          module.featureMaster,\r\n          currentFeatures\r\n        );\r\n      });\r\n      this.setState({\r\n        isLoading: false,\r\n        roleId: roleDetails.roleId,\r\n        roleName: roleDetails.roleName,\r\n        // roleDesc: roleDetails.roleDesc,\r\n        // createdUser: roleDetails.createdUser,\r\n        createdDate: roleDetails.createdDate,\r\n        permissions: permissions,\r\n        modules: modules,\r\n        modal: 4\r\n      });\r\n    }\r\n  }\r\n  getCurrentPermissions(permissions, currentFeatures) {\r\n    const permissionList = [];\r\n    _.forEach(permissions, function (feature) {\r\n      if (_.indexOf(currentFeatures, feature.featureId) >= 0) {\r\n        const temp = {\r\n          value: feature.featureId,\r\n          label: feature.featureName\r\n        };\r\n\r\n        permissionList.push(temp);\r\n      }\r\n    });\r\n\r\n    return permissionList;\r\n  }\r\n\r\n  handleSearchFilterSubmit = onSearchFn => data => {\r\n\r\n    this.setState({ filterParams: data || {} });\r\n    onSearchFn(data);\r\n  }\r\n\r\n  renderSearchFilter = searchFilterProps => <SearchFilter\r\n    {...this.state}\r\n    ajaxUtil={this.props.ajaxUtil}\r\n    // onCancel={() => searchFilterProps.toggleAction(0, null)}\r\n    onCancel={() => searchFilterProps.togglePopup(0, null)}\r\n    onSubmitClick={this.handleSearchFilterSubmit(searchFilterProps.onSearch)}\r\n    {...this.state.filterParams}\r\n  />\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const propsForDataTable = {\r\n      privilages: this.props.privilages,\r\n      menuPrivilages: this.props.menuPrivilages,\r\n      ajaxUtil: this.props.ajaxUtil,\r\n      listUrl: this.props.url_Roles.SEARCH_URL,\r\n      previousState: this.props.previousState,\r\n      apiVersion: 3,\r\n      defaultRowCount: this.props.globalConstants.INITIAL_ROW_COUNT,\r\n      rowIdParam: 'roleId',\r\n      tableHeaderLabels: DataTableHeader.LABEL_LIST,\r\n      loadingFunction: this.props.loadingFunction,\r\n      header: \"Roles\",\r\n      togglePopup: this.toggleAction,\r\n      deleteRow: this.deleteRow,\r\n      deleteMessage: 'Are you sure to Delete role',\r\n      deleteMessageParam: ['roleName'],\r\n      saveState: state => this.props.saveCurrentState({ [this.props.previousStateKey]: state }),\r\n      orderByCol: \"roleId\",\r\n      tabPriv: { info: true,delete:true },\r\n      renderSearchFilter: this.renderSearchFilter,\r\n      filterLabelList: DataTableHeader.SEARCH_FIELDS,\r\n      tableSearchFilters: DataTableHeader.SEARCH_FILTERS,\r\n\r\n    }\r\n\r\n    if (this.state.modal === 2) {\r\n      return (\r\n        <Switch>\r\n          <Redirect to=\"/Roles/create\" push />\r\n        </Switch>\r\n      );\r\n    }\r\n    if (this.state.modal === 3) {\r\n      const editUrl = `/Roles/edit/${this.state.actionParamId}`;\r\n      return (\r\n        <Switch>\r\n          <Redirect to={editUrl} />\r\n        </Switch>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"custom-container\">\r\n        <DataTableContainer\r\n          {...propsForDataTable}\r\n        >\r\n        </DataTableContainer>\r\n\r\n        <Popup\r\n          type={POPUP_ALIGN.RIGHT}\r\n          title=\"View\"\r\n          isOpen={this.state.modal === 4}\r\n          close={this.toggleAction}\r\n          minWidth=\"85%\"\r\n          component={\r\n            <RoleDetails\r\n              {...this.state}\r\n              ajaxUtil={this.props.ajaxUtil}\r\n              onCancel={() => this.toggleAction(0, null)}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}