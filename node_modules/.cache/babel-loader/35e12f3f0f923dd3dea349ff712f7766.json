{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/kmsdashboard/Quiz/MaterialList.js\";\nimport React, { Component } from 'react';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport DateTimeRangeContainer from 'react-advanced-datetimerange-picker';\nimport moment from \"moment\";\nimport { get, post } from 'axios';\nimport { connect } from 'react-redux';\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { CONSTANTS } from '../../../util/Constants';\nimport * as MENUS from './constants';\nimport { isTemplateMiddle } from 'typescript';\nimport PaginationList from './util/paginationList';\nconst url_material = CONSTANTS.MATERIALS;\nconst url_questions = CONSTANTS.QUESTION;\nconst url_quiz = CONSTANTS.QUIZ;\n\nclass MaterialList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getQuestions = id => {\n      const questionListUrl = `${url_questions.LIST_URL}?page=1&size=10&sort=question_id&order=desc&status=1&keyword&material_id=${id}&approval_status=1`;\n      this.props.ajaxUtil.sendRequest(questionListUrl, {}, questionList => {\n        if (questionList.hasOwnProperty('data')) {\n          if (questionList.data != null && questionList.data.length > 0) {\n            this.setState({\n              questionList: questionList.data,\n              filteredQuestionList: questionList.data\n            });\n          }\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.onClickQuestion = (questionId, index) => {\n      const {\n        questionList,\n        selectedQuestion,\n        questionsPerQuiz\n      } = this.state;\n\n      if (selectedQuestion.length == questionsPerQuiz) {\n        toast.error('You cannot add any more questions. Please increase the limit');\n        return false;\n      }\n\n      const isQuestionAvailable = selectedQuestion.filter(question => question.question_id === questionId);\n\n      if (isQuestionAvailable.length > 0) {\n        selectedQuestion.splice(index, 1);\n      } else {\n        const addQuestion = questionList.filter(question => question.question_id === questionId);\n\n        if (addQuestion.length > 0) {\n          selectedQuestion.push(addQuestion[0]);\n        }\n      }\n\n      this.setState({\n        selectedQuestion\n      });\n    };\n\n    this.onChangeQuiz = questionsPerQuiz => {\n      this.setState({\n        questionsPerQuiz\n      });\n    };\n\n    this.onChangeTime = timePerQuiz => {\n      this.setState({\n        timePerQuiz\n      });\n    };\n\n    this.onChangeScore = passingScore => {\n      this.setState({\n        passingScore\n      });\n    };\n\n    this.applyCallback = (stDate, edDate) => {\n      const start_date = stDate.format(\"DD-MM-YYYY HH:mm\");\n      const end_date = edDate.format(\"DD-MM-YYYY HH:mm\");\n      const start_time = stDate.format(\"HH:mm\");\n      const end_time = edDate.format(\"HH:mm\");\n      this.setState({\n        start_date,\n        end_date,\n        start_time,\n        end_time\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        selectedQuestion: [],\n        questionsPerQuiz: 1,\n        startDate: '',\n        endDate: '',\n        timePerQuiz: 1\n      });\n    };\n\n    this.submitQuestion = async () => {\n      if (this.validateForm()) {\n        const {\n          selectedQuestion,\n          passingScore,\n          material_id,\n          questionsPerQuiz,\n          start_date,\n          end_date,\n          start_time,\n          end_time,\n          timePerQuiz\n        } = this.state;\n        let questions = [];\n        selectedQuestion.forEach((question, index) => {\n          questions.push(question.question_id);\n        });\n        const data = {\n          material_id,\n          training_type: \"1\",\n          type: \"dailyquiz\",\n          questionCount: questionsPerQuiz,\n          start_date,\n          start_time,\n          end_date,\n          end_time,\n          questions,\n          passing_score: passingScore,\n          settime: timePerQuiz\n        };\n        const quizAddUrl = url_quiz.CREATE_URL;\n        const isQuizAdded = (await trackPromise(post(quizAddUrl, data))).data;\n\n        if (isQuizAdded.st == 1) {\n          this.reset();\n          this.setState({\n            showQuizModal: false\n          });\n          toast.success(`Success: ${isQuizAdded.message}`);\n          this.getMaterialList();\n        } else {\n          toast.success(`Error: ${isQuizAdded.message}`);\n        }\n      }\n    };\n\n    this.validateForm = () => {\n      const {\n        selectedQuestion,\n        start_date,\n        end_date,\n        timePerQuiz\n      } = this.state;\n\n      if (selectedQuestion.length === 0) {\n        toast.error('Atleast one question should be added to the quiz');\n        return false;\n      }\n\n      if (start_date == '') {\n        toast.error('Please select a start date and time for the quiz');\n        return false;\n      }\n\n      if (end_date == '') {\n        toast.error('Please select a end date and time for the quiz');\n        return false;\n      }\n\n      if (timePerQuiz == '') {\n        toast.error('Please enter time for quiz');\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onAddQuestion = material_id => {\n      this.getQuestions(material_id);\n      this.setState({\n        material_id,\n        showQuizModal: true\n      });\n    };\n\n    this.cancel = () => {\n      this.reset();\n      this.setState({\n        showQuizModal: false\n      });\n    };\n\n    this.filterQuestion = filterQuery => {\n      let {\n        questionList\n      } = this.state;\n      let filteredQuestionList = questionList;\n\n      if (filterQuery.length > 0) {\n        filteredQuestionList = questionList.filter(question => question.question_content.toLowerCase().indexOf(filterQuery.toLowerCase()) !== -1);\n      }\n\n      this.setState({\n        filteredQuestionList\n      });\n    };\n\n    this.filterQuestionDifficulty = question_difficulty => {\n      let {\n        questionList\n      } = this.state;\n      let filteredQuestionList = questionList;\n      filteredQuestionList = questionList.filter(question => question.question_difficulty === question_difficulty);\n      this.setState({\n        filteredQuestionList,\n        question_difficulty\n      });\n    };\n\n    let now = new Date();\n    let start = moment(new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0, 0));\n    let end = moment(start).add(1, \"days\").subtract(1, \"seconds\");\n    this.state = {\n      materialList: [],\n      search: '',\n      questionList: [],\n      filteredQuestionList: [],\n      selectedQuestion: [],\n      questionsPerQuiz: 1,\n      start: start,\n      end: end,\n      start_date: '',\n      end_date: '',\n      start_time: '',\n      end_time: '',\n      showQuizModal: false,\n      question_difficulty: 0,\n      timePerQuiz: 1,\n      passingScore: 1,\n      totalMaterial: 0\n    };\n  }\n\n  materialDataUpdate(menu, material_id, material_name, module_id, module_name) {\n    this.props.currentMenu(menu);\n    this.props.materialUpdate(material_id, material_name);\n    this.props.moduleUpdate(module_id, module_name);\n  }\n\n  async componentDidMount() {\n    this.getMaterialList();\n  }\n\n  getMaterialList(search = '') {\n    const materialListUrl = url_material.LIST_URL + '?page=1&size=20&sort=material_id&order=desc&status=&material_type=Promotion&keyword=' + search + '&module_id=' + this.props.currentModuleId + '&approval_status=1';\n    this.props.ajaxUtil.sendRequest(materialListUrl, {}, materialList => {\n      this.setState({\n        totalMaterial: materialList.totalElements\n      });\n\n      if (materialList.hasOwnProperty('data')) {\n        if (materialList.data != null && materialList.data.length > 0) {\n          this.setState({\n            materialList: materialList.data\n          });\n        }\n      }\n    }, this.props.loadingFunction, {\n      method: 'GET',\n      isShowSuccess: false\n    });\n  }\n\n  async statusUpdate(id, subStatus) {\n    const data = {\n      material_id: id,\n      status: !Number(subStatus)\n    };\n    const moduleStatusUrl = url_material.UPDATE_STATUS_MATERIAL;\n    this.props.ajaxUtil.sendRequest(moduleStatusUrl, data, response => {\n      response.statusCode == 200 ? toast.success(response.message) : toast.error(response.message);\n      this.getMaterialList();\n    }, this.props.loadingFunction, {\n      method: 'POST',\n      isShowSuccess: false\n    });\n  }\n\n  render() {\n    const {\n      materialList,\n      filteredQuestionList,\n      selectedQuestion,\n      questionsPerQuiz,\n      start_date,\n      end_date,\n      start,\n      end,\n      showQuizModal,\n      question_difficulty,\n      timePerQuiz,\n      totalMaterial,\n      passingScore\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 d-material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainbg cus-pills h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"nav nav-pills\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-link active\",\n      \"data-toggle\": \"pill\",\n      href: \"#Materials\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, \"Materials\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content pzero  d-material-tabcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-pane active\",\n      id: \"Materials\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Modules-txt h-100 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-10 modulesheader mt-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, \"All Entities  | \", totalMaterial > 0 ? totalMaterial < 10 ? `0${totalMaterial}` : totalMaterial : 0, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 d-flex align-items-center justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchbox \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"What are you looking for ?\",\n      onChange: e => this.getMaterialList(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 48\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/images/filter.svg\",\n      alt: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"display dtable\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }\n    }, \"S.No\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, \"Module\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, \"Materials\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 25\n      }\n    }, \"Quiz\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, materialList ? materialList.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 27\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 27\n      }\n    }, item.subject_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 27\n      }\n    }, item.material_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => this.materialDataUpdate(MENUS.QUIZ_MENU, item.material_id, item.material_name, item.subject_id, item.subject_name),\n      className: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    }, item.quiz_count), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => this.onAddQuestion(item.material_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/images/plus.svg\",\n      alt: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 31\n      }\n    }, \"Add Quiz\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-switch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: `status${item.material_id}`,\n      onChange: () => this.statusUpdate(item.material_id, item.material_status),\n      checked: Number(item.material_status),\n      name: \"example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: `status${item.material_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 33\n      }\n    })))))) : /*#__PURE__*/React.createElement(\"tr\", {\n      colspan: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 28\n      }\n    }, \"No Materials Found\"))), /*#__PURE__*/React.createElement(PaginationList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `modal cus-Syllabus-modal fade addquiz  ${showQuizModal ? 'show custom-modal-open' : ''}`,\n      style: {\n        display: `${showQuizModal ? 'block' : 'none'}`\n      },\n      id: \"addQuestion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-1 cusoverlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content col-md-11 pzero\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"modal-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, \"Add Quiz\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      onClick: this.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/images/close.svg\",\n      alt: \"close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 100\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 leftbg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-selectbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control marginFix\",\n      name: \"difficulty\",\n      value: question_difficulty,\n      onChange: e => this.filterQuestionDifficulty(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 29\n      }\n    }, \"Easy\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 29\n      }\n    }, \"Hard\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group flex-grow-1 position-relative \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control Search\",\n      placeholder: \"Search\",\n      id: \"email\",\n      onChange: e => this.filterQuestion(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 23\n      }\n    }, \"showing \", filteredQuestionList.length, \" Results\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-keywords mt-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 23\n      }\n    }, filteredQuestionList && filteredQuestionList.map((question, index) => {\n      const isSelected = selectedQuestion.filter(quest => quest.question_id === question.question_id);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        onClick: () => this.onClickQuestion(question.question_id, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: `${isSelected && isSelected.length > 0 ? 'fa fa-minus' : 'fa fa-plus'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 113\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 35\n        }\n      }, question.question_content));\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 rightbg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newquizbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newquizboxheader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }\n    }, \"New Quiz\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 25\n      }\n    }, \"Drag the question from left to Right\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"iconbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/images/calendar.png\",\n      alt: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/images/expand.png\",\n      alt: \"expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group react-bootstrap-daterangepicker-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 29\n      }\n    }, \"Date Picker Range\"), /*#__PURE__*/React.createElement(DateTimeRangeContainer // ranges={ranges}\n    , {\n      start: start,\n      end: end // local={local}\n      // maxDate={maxDate}\n      ,\n      applyCallback: this.applyCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"date\",\n      value: `${start_date}  -  ${end_date}`,\n      name: \"datefilter\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 31\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 29\n      }\n    }, \"Questions per Quiz\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"questions\",\n      name: \"datefilter\",\n      onChange: e => this.onChangeQuiz(e.target.value),\n      value: questionsPerQuiz,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 29\n      }\n    }, \"Quiz duration in minutes\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"setTime\",\n      onChange: e => this.onChangeTime(e.target.value),\n      value: timePerQuiz,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 29\n      }\n    }, \"Passing Score\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"passingScore\",\n      onChange: e => this.onChangeScore(e.target.value),\n      value: passingScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newquizboxbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 23\n      }\n    }, selectedQuestion && selectedQuestion.map((quest, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-box mzero\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-box-header d-flex justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 33\n      }\n    }, \"Question \", index + 1)), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"d-flex icp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => this.onClickQuestion(quest.question_id, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-minus\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 110\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control Search\",\n      disabled: true,\n      value: quest.question_content,\n      placeholder: \"Do you know what is your ICP? (Ideal Customer Profile) ?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 35\n      }\n    })))), quest.option.map((answer, ansIndex) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input answer-options\",\n      id: `right_answer_${ansIndex}`,\n      name: `right_answer_${answer.question_id}`,\n      checked: parseInt(answer.option_answer),\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: `right_answer_${ansIndex}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"option-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 37\n      }\n    }, \"Answer \", ansIndex + 1), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 37\n      }\n    }, answer.option_content))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown cus-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary dropdown-toggle\",\n      type: \"button\",\n      id: \"dropdownMenuButton\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 31\n      }\n    }, \"Difficulty Level\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"difficulty-dropdown\",\n      name: \"difficulty\",\n      disabled: true,\n      value: quest.question_difficulty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 33\n      }\n    }, \"Easy\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 33\n      }\n    }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 33\n      }\n    }, \"Hard\")))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger cancel \",\n      \"data-dismiss\": \"modal\",\n      onClick: this.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger reset\",\n      onClick: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger add\",\n      onClick: this.submitQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }\n    }, \"ADD\"))))));\n  }\n\n}\n\nexport class materialPagination extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }\n    }, \"Hello\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentModuleId: state.dashboard.currentModuleId,\n    currentModuleName: state.dashboard.currentModuleName\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    materialUpdate: (id, materialName) => {\n      dispatch({\n        type: 'material',\n        payload: {\n          id: id,\n          materialName: materialName\n        }\n      });\n    },\n    moduleUpdate: (id, moduleName) => {\n      dispatch({\n        type: 'module',\n        payload: {\n          id: id,\n          moduleName: moduleName\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialList);","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/kmsdashboard/Quiz/MaterialList.js"],"names":["React","Component","DateRangePicker","DateTimeRangeContainer","moment","get","post","connect","trackPromise","usePromiseTracker","ToastContainer","toast","CONSTANTS","MENUS","isTemplateMiddle","PaginationList","url_material","MATERIALS","url_questions","QUESTION","url_quiz","QUIZ","MaterialList","constructor","props","getQuestions","id","questionListUrl","LIST_URL","ajaxUtil","sendRequest","questionList","hasOwnProperty","data","length","setState","filteredQuestionList","loadingFunction","method","isShowSuccess","onClickQuestion","questionId","index","selectedQuestion","questionsPerQuiz","state","error","isQuestionAvailable","filter","question","question_id","splice","addQuestion","push","onChangeQuiz","onChangeTime","timePerQuiz","onChangeScore","passingScore","applyCallback","stDate","edDate","start_date","format","end_date","start_time","end_time","reset","startDate","endDate","submitQuestion","validateForm","material_id","questions","forEach","training_type","type","questionCount","passing_score","settime","quizAddUrl","CREATE_URL","isQuizAdded","st","showQuizModal","success","message","getMaterialList","onAddQuestion","cancel","filterQuestion","filterQuery","question_content","toLowerCase","indexOf","filterQuestionDifficulty","question_difficulty","now","Date","start","getFullYear","getMonth","getDate","end","add","subtract","materialList","search","totalMaterial","materialDataUpdate","menu","material_name","module_id","module_name","currentMenu","materialUpdate","moduleUpdate","componentDidMount","materialListUrl","currentModuleId","totalElements","statusUpdate","subStatus","status","Number","moduleStatusUrl","UPDATE_STATUS_MATERIAL","response","statusCode","render","e","target","value","process","env","PUBLIC_URL","width","map","item","subject_name","QUIZ_MENU","subject_id","quiz_count","material_status","display","isSelected","quest","option","answer","ansIndex","parseInt","option_answer","option_content","materialPagination","mapStateToProps","dashboard","currentModuleName","mapDispatchToProps","dispatch","materialName","payload","moduleName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport DateTimeRangeContainer from 'react-advanced-datetimerange-picker'\nimport moment from \"moment\"\nimport { get, post } from 'axios'\nimport { connect } from 'react-redux'\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { CONSTANTS } from '../../../util/Constants'\n\nimport * as MENUS from './constants';\nimport { isTemplateMiddle } from 'typescript';\nimport PaginationList from './util/paginationList';\n\nconst url_material = CONSTANTS.MATERIALS;\nconst url_questions = CONSTANTS.QUESTION;\nconst url_quiz = CONSTANTS.QUIZ;\n\nclass MaterialList extends Component {\n  constructor(props) {\n    super(props);\n    let now = new Date();\n    let start = moment(new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0, 0));\n    let end = moment(start).add(1, \"days\").subtract(1, \"seconds\");\n    this.state = {\n      materialList: [],\n      search: '',\n      questionList: [],\n      filteredQuestionList: [],\n      selectedQuestion: [],\n      questionsPerQuiz: 1,\n      start: start,\n      end: end,\n      start_date: '',\n      end_date: '',\n      start_time: '',\n      end_time: '',\n      showQuizModal: false,\n      question_difficulty: 0,\n      timePerQuiz:1,\n      passingScore:1,\n      totalMaterial:0\n    }\n  }\n  materialDataUpdate(menu, material_id, material_name, module_id, module_name) {\n    this.props.currentMenu(menu);\n    this.props.materialUpdate(material_id, material_name);\n    this.props.moduleUpdate(module_id, module_name)\n  }\n\n  async componentDidMount() {\n    this.getMaterialList();\n  }\n\n  getMaterialList(search = '') {\n      const materialListUrl = url_material.LIST_URL + '?page=1&size=20&sort=material_id&order=desc&status=&material_type=Promotion&keyword=' + search + '&module_id=' + this.props.currentModuleId+'&approval_status=1';\n      this.props.ajaxUtil.sendRequest(materialListUrl, {}, materialList => {\n        this.setState({ totalMaterial: materialList.totalElements });\n        if (materialList.hasOwnProperty('data')) {\n          if (materialList.data != null && materialList.data.length > 0) {\n            this.setState({ materialList: materialList.data });\n          }\n        }\n      }, this.props.loadingFunction,  { method: 'GET', isShowSuccess: false });\n  }\n\n  getQuestions = (id) => {\n      const questionListUrl = `${url_questions.LIST_URL}?page=1&size=10&sort=question_id&order=desc&status=1&keyword&material_id=${id}&approval_status=1`;\n      this.props.ajaxUtil.sendRequest(questionListUrl, {}, questionList => {\n        if (questionList.hasOwnProperty('data')) {\n          if (questionList.data != null && questionList.data.length > 0) {\n            this.setState({ questionList:questionList.data, filteredQuestionList: questionList.data })\n          }\n        }\n      }, this.props.loadingFunction,  { method: 'GET', isShowSuccess: false });\n  }\n\n  onClickQuestion = (questionId, index) => {\n    const { questionList, selectedQuestion, questionsPerQuiz } = this.state;\n    if (selectedQuestion.length == questionsPerQuiz) {\n      toast.error('You cannot add any more questions. Please increase the limit');\n      return false;\n    }\n    const isQuestionAvailable = selectedQuestion.filter((question) => question.question_id === questionId);\n    if (isQuestionAvailable.length > 0) {\n      selectedQuestion.splice(index, 1);\n    } else {\n      const addQuestion = questionList.filter((question) => question.question_id === questionId);\n      if (addQuestion.length > 0) {\n        selectedQuestion.push(addQuestion[0]);\n      }\n    }\n    this.setState({ selectedQuestion });\n  }\n  onChangeQuiz = (questionsPerQuiz) => {\n    this.setState({ questionsPerQuiz })\n  }\n  onChangeTime = (timePerQuiz) => {\n    this.setState({ timePerQuiz })\n  }\n  onChangeScore = (passingScore) => {\n    this.setState({ passingScore })\n  }\n\n  applyCallback = (stDate, edDate) => {\n    const start_date = stDate.format(\"DD-MM-YYYY HH:mm\");\n    const end_date = edDate.format(\"DD-MM-YYYY HH:mm\");\n    const start_time = stDate.format(\"HH:mm\");\n    const end_time = edDate.format(\"HH:mm\");\n    this.setState({ start_date, end_date, start_time, end_time });\n  }\n\n  reset = () => {\n    this.setState({ selectedQuestion: [], questionsPerQuiz: 1, startDate: '', endDate: '', timePerQuiz:1 })\n  }\n\n  submitQuestion = async () => {\n    if (this.validateForm()) {\n      const { selectedQuestion, passingScore, material_id, questionsPerQuiz, start_date, end_date, start_time, end_time ,timePerQuiz } = this.state;\n      let questions = []\n      selectedQuestion.forEach((question, index) => {\n        questions.push(question.question_id);\n      })\n      const data = {\n        material_id,\n        training_type: \"1\",\n        type: \"dailyquiz\",\n        questionCount: questionsPerQuiz,\n        start_date,\n        start_time,\n        end_date,\n        end_time,\n        questions,\n        passing_score:passingScore,\n        settime:timePerQuiz\n      }\n      const quizAddUrl = url_quiz.CREATE_URL;\n      const isQuizAdded = (await (trackPromise(post(quizAddUrl, data)))).data;\n      if (isQuizAdded.st == 1) {\n        this.reset();\n        this.setState({ showQuizModal: false });\n        toast.success(`Success: ${isQuizAdded.message}`);\n        this.getMaterialList();\n      } else {\n        toast.success(`Error: ${isQuizAdded.message}`);\n      }\n    }\n  }\n  validateForm = () => {\n    const { selectedQuestion, start_date, end_date,timePerQuiz } = this.state;\n    if (selectedQuestion.length === 0) {\n      toast.error('Atleast one question should be added to the quiz');\n      return false;\n    }\n    if (start_date == '') {\n      toast.error('Please select a start date and time for the quiz');\n      return false;\n    }\n    if (end_date == '') {\n      toast.error('Please select a end date and time for the quiz');\n      return false;\n    }\n    if (timePerQuiz == '') {\n      toast.error('Please enter time for quiz');\n      return false;\n    }\n    return true;\n  }\n\n  onAddQuestion = (material_id) => {\n    this.getQuestions(material_id)\n    this.setState({ material_id, showQuizModal: true })\n  }\n  cancel = () => {\n    this.reset();\n    this.setState({ showQuizModal: false });\n  }\n\n  filterQuestion = (filterQuery) => {\n    let { questionList } = this.state;\n    let filteredQuestionList = questionList;\n    if (filterQuery.length > 0) {\n      filteredQuestionList = questionList.filter((question) => question.question_content.toLowerCase().indexOf(filterQuery.toLowerCase()) !== -1);\n    }\n    this.setState({\n      filteredQuestionList\n    })\n  }\n  filterQuestionDifficulty = (question_difficulty) => {\n    let { questionList } = this.state;\n    let filteredQuestionList = questionList;\n    filteredQuestionList = questionList.filter((question) => question.question_difficulty === question_difficulty);\n    this.setState({\n      filteredQuestionList,\n      question_difficulty\n    })\n  }\n\n  async statusUpdate(id, subStatus){\n    const data = { material_id: id, status:!Number(subStatus) }\n    const moduleStatusUrl = url_material.UPDATE_STATUS_MATERIAL;\n    this.props.ajaxUtil.sendRequest(moduleStatusUrl, data, response => {\n      response.statusCode == 200 ? toast.success(response.message) : toast.error(response.message)\n      this.getMaterialList();\n    }, this.props.loadingFunction,  { method: 'POST' , isShowSuccess:false });\n  }\n\n  render() {\n    const { materialList,\n      filteredQuestionList,\n      selectedQuestion,\n      questionsPerQuiz,\n      start_date,\n      end_date,\n      start,\n      end, showQuizModal,\n      question_difficulty,\n      timePerQuiz,\n      totalMaterial,\n      passingScore\n    } = this.state;\n    return (\n      <div className=\"col-md-12 d-material\">\n        \n        <div className=\"mainbg cus-pills h-100\">\n          <ul className=\"nav nav-pills\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" data-toggle=\"pill\" href=\"#Materials\">Materials</a>\n            </li>\n            {/* <img src={process.env.PUBLIC_URL + \"/images/close.svg\"} className=\"nav-close\" onClick={() => this.props.currentMenu(MENUS.MODULE_MENU)} alt /> */}\n          </ul>\n          <div className=\"tab-content pzero  d-material-tabcontent\">\n            <div className=\"tab-pane active\" id=\"Materials\">\n              <div className=\"Modules-txt h-100 \">\n             \n                <div className=\"d-flex mb-10 modulesheader mt-30\">\n                  <div className=\"col-md-6 d-flex align-items-center\">\n                    <h4>All Entities  | {totalMaterial > 0 ? (totalMaterial < 10 ? `0${totalMaterial}` : totalMaterial) : 0} </h4>\n                  </div>\n                  <div className=\"col-md-6 d-flex align-items-center justify-content-end\">\n                    <div className=\"searchbox \">\n                      <input type=\"search\" placeholder=\"What are you looking for ?\" onChange={(e) => this.getMaterialList(e.target.value)} />\n                      <button className=\"btn\" ><i className=\"fa fa-search\" aria-hidden=\"true\" /></button>\n                    </div>\n                    <div className=\"filter\">\n                      <img src={process.env.PUBLIC_URL + \"/images/filter.svg\"} alt=\"filter\" />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"table-responsive\">\n                  <table className=\"display dtable\" style={{ width: '100%' }}>\n                    <thead>\n                      <tr>\n                        <th>S.No</th>\n                        <th>Module</th>\n                        <th>Materials</th>\n                        <th>Quiz</th>\n                        <th>Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {materialList ? materialList.map((item, index) => (\n                        <tr>\n                          <td>{index + 1}</td>\n                          <td>{item.subject_name}</td>\n                          <td>{item.material_name}</td>\n                          <td>\n                            <a href=\"#\" onClick={() => this.materialDataUpdate(MENUS.QUIZ_MENU, item.material_id, item.material_name, item.subject_id, item.subject_name)} className=\"no\">{item.quiz_count}</a>\n                            <a href=\"#\" onClick={() => this.onAddQuestion(item.material_id)}>\n                              <img src={process.env.PUBLIC_URL + \"/images/plus.svg\"} alt />\n                              <span>Add Quiz</span>\n                            </a>\n                          </td>\n                          <td>\n                            <div className>\n                              <div className=\"custom-control custom-switch\">\n                                <input type=\"checkbox\" className=\"custom-control-input\" id={`status${item.material_id}`} \n                                    onChange={() => this.statusUpdate(item.material_id, item.material_status)} \n                                    checked={Number(item.material_status)}\n                                    name=\"example\" />\n                                <label className=\"custom-control-label\" htmlFor={`status${item.material_id}`} />\n                              </div>\n                            </div>\n                          </td>\n                        </tr>\n                      )) : <tr colspan='4'>No Materials Found</tr>}\n                    </tbody>\n                  </table>\n\n                  <PaginationList />\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={`modal cus-Syllabus-modal fade addquiz  ${showQuizModal ? 'show custom-modal-open' : ''}`} style={{ display: `${showQuizModal ? 'block' : 'none'}` }} id=\"addQuestion\">\n          <div className=\"modal-dialog row\">\n            <div className=\"col-md-1 cusoverlay\" />\n            <div className=\"modal-content col-md-11 pzero\">\n              {/* Modal Header */}\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title\">Add Quiz</h4>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={this.cancel}><img src={process.env.PUBLIC_URL + \"/images/close.svg\"} alt=\"close\" /></button>\n              </div>\n              {/* Modal body */}\n              <div className=\"modal-body\">\n                <div className=\"row\">\n                  <div className=\"col-md-6 leftbg\">\n                    <div className=\"mt-30\">\n                      <div className=\"d-flex\">\n                        <div className=\"custom-selectbox\">\n                          <select className=\"form-control marginFix\" name='difficulty' value={question_difficulty} onChange={(e) => this.filterQuestionDifficulty(e.target.value)}>\n                            <option value={1}>Easy</option>\n                            <option value={3}>Medium</option>\n                            <option value={2}>Hard</option>\n\n                          </select>\n                        </div>\n                        <div className=\"form-group flex-grow-1 position-relative \">\n                          <input type=\"text\" className=\"form-control Search\" placeholder=\"Search\" id=\"email\" onChange={(e) => this.filterQuestion(e.target.value)} />\n                          <button className=\"btn\" />\n                        </div>\n                      </div>\n                      <span className=\"results\">showing {filteredQuestionList.length} Results</span>\n                    </div>\n                    <div className=\"search-keywords mt-30\">\n                      <ul>\n                        {filteredQuestionList && filteredQuestionList.map((question, index) => {\n                          const isSelected = selectedQuestion.filter((quest) => quest.question_id === question.question_id);\n                          return (\n                                <li className=\"d-flex\">\n                                  <a href=\"#\" onClick={() => this.onClickQuestion(question.question_id, index)}><i className={`${isSelected && isSelected.length > 0 ? 'fa fa-minus' : 'fa fa-plus'}`} /></a>\n                                  <span>{question.question_content}</span>\n                                </li>\n                          )\n                        })}\n                      </ul>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-md-6 rightbg\">\n                    <div className=\"newquizbox\">\n                      <div className=\"newquizboxheader\">\n                        <h4 className=\"title\">New Quiz</h4>\n                        <p>Drag the question from left to Right</p>\n                        <div className=\"iconbox\">\n                          <img src={process.env.PUBLIC_URL+\"/images/calendar.png\"} alt=\"expand\" />\n                          <img src={process.env.PUBLIC_URL+\"/images/expand.png\"} alt=\"expand\" />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n                          <div className=\"form-group react-bootstrap-daterangepicker-container\">\n                            <label htmlFor=\"Date\">Date Picker Range</label>\n                            <DateTimeRangeContainer\n                              // ranges={ranges}\n                              start={start}\n                              end={end}\n                              // local={local}\n                              // maxDate={maxDate}\n                              applyCallback={this.applyCallback}\n                            >\n                              <input type=\"text\" className=\"form-control\" id=\"date\" value={`${start_date}  -  ${end_date}`} name=\"datefilter\" readOnly />\n                            </DateTimeRangeContainer>\n                          </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                          <div className=\"form-group\">\n                            <label htmlFor=\"Questions\">Questions per Quiz</label>\n                            <input type=\"text\" className=\"form-control\" id=\"questions\" name=\"datefilter\" onChange={(e) => this.onChangeQuiz(e.target.value)} value={questionsPerQuiz} />\n                          </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                          <div className=\"form-group\">\n                            <label htmlFor=\"Questions\">Quiz duration in minutes</label>\n                            <input type=\"text\" className=\"form-control\" name=\"setTime\" onChange={(e) => this.onChangeTime(e.target.value)} value={timePerQuiz} />\n                          </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                          <div className=\"form-group\">\n                            <label htmlFor=\"Questions\">Passing Score</label>\n                            <input type=\"text\" className=\"form-control\" name=\"passingScore\" onChange={(e) => this.onChangeScore(e.target.value)} value={passingScore} />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"newquizboxbody\">\n                        {selectedQuestion && selectedQuestion.map((quest, index) => (\n                          <div className=\"question-box mzero\">\n                            <div className=\"question-title\">\n                              <div className=\"question-box-header d-flex justify-content-between align-items-center\">\n                                <span>Question {index + 1}</span>\n                              </div>\n                              <ul>\n                                <li className=\"d-flex icp\">\n                                  <a href=\"#\" onClick={() => this.onClickQuestion(quest.question_id, index)}><i className=\"fa fa-minus\" aria-hidden=\"true\" /></a>\n                                  <input type=\"text\" className=\"form-control Search\" disabled value={quest.question_content} placeholder=\"Do you know what is your ICP? (Ideal Customer Profile) ?\" />\n                                </li>\n                              </ul>\n                            </div>\n                            {quest.option.map((answer, ansIndex) => (\n                              <div className=\"question\">\n                                <div className=\"options d-flex align-items-center\">\n                                  <div className=\"custom-control custom-radio\">\n                                    <input type=\"radio\" className=\"custom-control-input answer-options\" id={`right_answer_${ansIndex}`} name={`right_answer_${answer.question_id}`} checked={parseInt(answer.option_answer)} disabled />\n                                    <label className=\"custom-control-label\" htmlFor={`right_answer_${ansIndex}`}></label>\n                                  </div>\n                                  <div className=\"option-box\">\n                                    <span>Answer {ansIndex + 1}</span>\n                                    <h4 className=\"\">{answer.option_content}</h4>\n                                  </div>\n                                </div>\n                              </div>\n                            ))}\n                            <div className=\"dropdown cus-dropdown\">\n                              <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Difficulty Level\n                            </button>\n                              <select className=\"difficulty-dropdown\" name='difficulty' disabled value={quest.question_difficulty}>\n                                <option value={1}>Easy</option>\n                                <option value={3}>Medium</option>\n                                <option value={2}>Hard</option>\n\n                              </select>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Modal footer */}\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-danger cancel \" data-dismiss=\"modal\" onClick={this.cancel}>Cancel</button>\n                <button type=\"button\" className=\"btn btn-danger reset\" onClick={this.reset}>Reset</button>\n                <button type=\"button\" className=\"btn btn-danger add\" onClick={this.submitQuestion}>ADD</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport class materialPagination extends Component{\n  render(){\n    return (\n      <div>\n        <h1>Hello</h1>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentModuleId: state.dashboard.currentModuleId,\n    currentModuleName: state.dashboard.currentModuleName\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    materialUpdate: (id, materialName) => { dispatch({ type: 'material', payload: { id: id, materialName: materialName } }) },\n    moduleUpdate: (id, moduleName) => { dispatch({ type: 'module', payload: { id: id, moduleName: moduleName } }) },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialList)"]},"metadata":{},"sourceType":"module"}