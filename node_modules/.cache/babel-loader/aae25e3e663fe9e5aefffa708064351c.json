{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/schedule/ScheduleTraining/Component/AddQuizModal.js\";\nimport React, { Component } from 'react';\nexport default class AddQuizModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrag = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDragIn = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDragOut = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDrop = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      const question = JSON.parse(e.dataTransfer.getData('question'));\n      let selectedQuestions = [...this.state.selectedQuestions];\n      selectedQuestions.push(question);\n      let selectedQuestionIds = selectedQuestions.map(question => question.question_id);\n      let questionToShow = this.state.allQuestions.filter(question => !selectedQuestionIds.includes(question.question_id));\n      this.setState({\n        selectedQuestions: selectedQuestions\n      });\n      this.setState({\n        questionList: questionToShow\n      });\n    };\n\n    this.getQuestions = () => {\n      const url = this.props.url_training.GET_QUESTIONS + `?material_id=${this.props.selectedMaterialId}&page=1&size=1500&sort=question_id&order=desc&status=1&keyword&approval_status=1`;\n      this.props.ajaxUtil.sendRequest(url, {}, questionList => {\n        if (questionList.hasOwnProperty('data')) {\n          if (questionList.data != null && questionList.data.length > 0) {\n            this.setState({\n              questionList: questionList.data\n            });\n            this.setState({\n              allQuestions: questionList.data\n            });\n          } else {\n            this.props.setNotification({\n              message: questionList.message,\n              hasError: true,\n              timestamp: new Date().getTime()\n            });\n          }\n        } else {\n          this.props.setNotification({\n            message: 'No Questions Found',\n            hasError: true,\n            timestamp: new Date().getTime()\n          });\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.searchQuestion = event => {\n      console.log(event.currentTarget.value);\n      const allQuestions = [...this.state.allQuestions];\n      const questionList = [];\n      allQuestions.forEach(question => {\n        if (JSON.stringify(question).toLowerCase().includes(event.currentTarget.value.toLowerCase())) {\n          questionList.push(question);\n        }\n      });\n      this.setState({\n        questionList\n      });\n    };\n\n    this.setDragData = (event, data) => {\n      event.dataTransfer.setData('question', JSON.stringify(data));\n    };\n\n    this.deleteQuestion = (ques, index) => {\n      let selectedQuestions = [...this.state.selectedQuestions];\n      selectedQuestions = selectedQuestions.filter(question => question.question_id != ques.question_id);\n      let selectedQuestionIds = selectedQuestions.map(question => question.question_id);\n      let questionToShow = this.state.allQuestions.filter(question => !selectedQuestionIds.includes(question.question_id));\n      this.setState({\n        selectedQuestions: selectedQuestions\n      });\n      this.setState({\n        questionList: questionToShow\n      });\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        questionNumber: ''\n      });\n      this.setState({\n        selectedQuestions: []\n      });\n      this.setState({\n        questionList: this.state.allQuestions\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        questionNumber: event.currentTarget.value\n      });\n    };\n\n    this.saveForm = () => {\n      if (this.state.questionNumber.length <= 0 || this.state.selectedQuestions.length <= 0) {\n        this.props.setNotification({\n          message: 'Please Fill Up',\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n        return;\n      }\n\n      const data = {\n        questionNumber: this.state.questionNumber,\n        selectedQuestions: this.state.selectedQuestions\n      };\n      this.props.createQuiz(data);\n    };\n\n    this.state = {\n      searchValue: '',\n      dropDiv: React.createRef(),\n      questionList: [],\n      selectedQuestions: [],\n      allQuestions: [],\n      questionNumber: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n    let div = this.state.dropDiv.current;\n    div.addEventListener('dragenter', this.handleDragIn);\n    div.addEventListener('dragleave', this.handleDragOut);\n    div.addEventListener('dragover', this.handleDrag);\n    div.addEventListener('drop', this.handleDrop);\n  }\n\n  componentWillUnmount() {\n    let div = this.state.dropDiv.current;\n    div.removeEventListener('dragenter', this.handleDragIn);\n    div.removeEventListener('dragleave', this.handleDragOut);\n    div.removeEventListener('dragover', this.handleDrag);\n    div.removeEventListener('drop', this.handleDrop);\n  }\n\n  render() {\n    const {\n      searchQuestion\n    } = this;\n    const {\n      searchValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form__wraper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mt-30 search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      className: \"form-control\",\n      placeholder: \"Search Questions\",\n      onChange: event => searchQuestion(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"drag__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"created__list__wrap drag__element\",\n      draggable: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list_item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, \"list Drag to right side\")))), this.state.questionList.map((question, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      onDragStart: event => this.setDragData(event, question),\n      className: \"created__list__wrap drag__element\",\n      draggable: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list_item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 27\n      }\n    }, question.question_content)))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6 m_15 bg-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new_quiz_wraper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"sub__heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, \"New Quiz\", /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sub__caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 23\n      }\n    }, \"Drag the Options from left to Right\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz__main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      action: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-lg-8 mb-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Training\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, \"Questions per Quiz\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.questionNumber,\n      onChange: event => this.handleChange(event),\n      type: \"text\",\n      className: \"form-control required\",\n      id: \"Training\",\n      placeholder: \"Enter No of Questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"drag__container mt-60\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"created__list__wrap \",\n      draggable: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list_item\",\n      ref: this.state.dropDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 23\n      }\n    }, \"Drag and Drop here\")))), this.state.selectedQuestions.map((question, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"created__list__wrap \",\n      draggable: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list_item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"delete-drag\",\n      onClick: () => this.deleteQuestion(question, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 108\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, question.question_content))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button__work\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.closeAddQuizModal,\n      type: \"button\",\n      className: \"btn btn-danger cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.resetForm,\n      type: \"button\",\n      className: \"btn btn-danger reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.saveForm,\n      type: \"button\",\n      className: \"btn btn-danger add btn__save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, \"Save\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/schedule/ScheduleTraining/Component/AddQuizModal.js"],"names":["React","Component","AddQuizModal","constructor","props","handleDrag","e","preventDefault","stopPropagation","handleDragIn","handleDragOut","handleDrop","question","JSON","parse","dataTransfer","getData","selectedQuestions","state","push","selectedQuestionIds","map","question_id","questionToShow","allQuestions","filter","includes","setState","questionList","getQuestions","url","url_training","GET_QUESTIONS","selectedMaterialId","ajaxUtil","sendRequest","hasOwnProperty","data","length","setNotification","message","hasError","timestamp","Date","getTime","loadingFunction","method","isShowSuccess","searchQuestion","event","console","log","currentTarget","value","forEach","stringify","toLowerCase","setDragData","setData","deleteQuestion","ques","index","resetForm","questionNumber","handleChange","saveForm","createQuiz","searchValue","dropDiv","createRef","componentDidMount","div","current","addEventListener","componentWillUnmount","removeEventListener","render","question_content","closeAddQuizModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nexport default class AddQuizModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: '',\n      dropDiv: React.createRef(),\n      questionList: [],\n      selectedQuestions: [],\n      allQuestions: [],\n      questionNumber: '',\n    }\n  }\n  componentDidMount() {\n    this.getQuestions();\n    let div = this.state.dropDiv.current\n    div.addEventListener('dragenter', this.handleDragIn)\n    div.addEventListener('dragleave', this.handleDragOut)\n    div.addEventListener('dragover', this.handleDrag)\n    div.addEventListener('drop', this.handleDrop)\n  }\n  componentWillUnmount() {\n    let div = this.state.dropDiv.current\n    div.removeEventListener('dragenter', this.handleDragIn)\n    div.removeEventListener('dragleave', this.handleDragOut)\n    div.removeEventListener('dragover', this.handleDrag)\n    div.removeEventListener('drop', this.handleDrop)\n  }\n  handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  handleDragIn = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  handleDragOut = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const question = JSON.parse(e.dataTransfer.getData('question'));\n    let selectedQuestions = [...this.state.selectedQuestions];\n    selectedQuestions.push(question);\n    let selectedQuestionIds = selectedQuestions.map((question) => question.question_id);\n    let questionToShow = this.state.allQuestions.filter((question) => !selectedQuestionIds.includes(question.question_id));\n    this.setState({ selectedQuestions: selectedQuestions });\n    this.setState({ questionList: questionToShow });\n\n  }\n  getQuestions = () => {\n    const url = this.props.url_training.GET_QUESTIONS + `?material_id=${this.props.selectedMaterialId}&page=1&size=1500&sort=question_id&order=desc&status=1&keyword&approval_status=1`\n    this.props.ajaxUtil.sendRequest(url, {}, questionList => {\n      if (questionList.hasOwnProperty('data')) {\n        if (questionList.data != null && questionList.data.length > 0) {\n          this.setState({ questionList: questionList.data });\n          this.setState({ allQuestions: questionList.data });\n\n        } else{\n          this.props.setNotification({\n            message: questionList.message,\n            hasError: true,\n            timestamp: new Date().getTime()\n          });\n        }\n      } else {\n        this.props.setNotification({\n          message: 'No Questions Found',\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  searchQuestion = (event) => {\n    console.log(event.currentTarget.value);\n    const allQuestions = [...this.state.allQuestions];\n    const questionList =[];\n    allQuestions.forEach((question) => {\n      if(JSON.stringify(question).toLowerCase().includes(event.currentTarget.value.toLowerCase())){\n         questionList.push(question);\n      }\n    })\n    this.setState({questionList})\n  }\n  setDragData = (event, data) => {\n    event.dataTransfer.setData('question', JSON.stringify(data));\n  }\n  deleteQuestion = (ques, index) => {\n    let selectedQuestions = [...this.state.selectedQuestions];\n    selectedQuestions = selectedQuestions.filter((question) => question.question_id != ques.question_id);\n    let selectedQuestionIds = selectedQuestions.map((question) => question.question_id);\n    let questionToShow = this.state.allQuestions.filter((question) => !selectedQuestionIds.includes(question.question_id));\n    this.setState({ selectedQuestions: selectedQuestions });\n    this.setState({ questionList: questionToShow });\n  }\n  resetForm = () => {\n    this.setState({ questionNumber: '' })\n    this.setState({ selectedQuestions: [] });\n    this.setState({ questionList: this.state.allQuestions });\n  }\n  handleChange = (event) => {\n    this.setState({ questionNumber: event.currentTarget.value })\n  }\n  saveForm = () => {\n\n    if (this.state.questionNumber.length <= 0 || this.state.selectedQuestions.length <= 0) {\n      this.props.setNotification({\n        message: 'Please Fill Up',\n        hasError: true,\n        timestamp: new Date().getTime()\n      });\n      return;\n    }\n    const data = {\n      questionNumber: this.state.questionNumber,\n      selectedQuestions: this.state.selectedQuestions\n    }\n    this.props.createQuiz(data)\n  }\n  render() {\n    const { searchQuestion } = this;\n    const { searchValue } = this.state;\n\n    return (\n      <div className=\"row m-0\">\n        <div className=\"col-lg-6\">\n          <div className=\"form__wraper\">\n            <form action=\"\">\n              <div className=\"form-group mt-30 search\">\n                <div className=\"input-group mb-3\">\n                  {/* <div className=\"input-group-prepend\">\n                    <button\n                      className=\"btn btn-secondary dropdown-toggle\"\n                      type=\"button\"\n                    // data-toggle=\"dropdown\" \n                    // aria-haspopup=\"true\"\n                    // aria-expanded=\"false\"\n                    >Keyword</button>\n                    <div className=\"dropdown-menu\">\n                      <a className=\"dropdown-item\" href=\"#\">Keyword 1</a>\n                      <a className=\"dropdown-item\" href=\"#\">Keyword 2</a>\n                      <a className=\"dropdown-item\" href=\"#\">Keyword 3</a>\n                    </div>\n                  </div> */}\n                  <input\n                    type=\"search\"\n                    className=\"form-control\"\n                    placeholder=\"Search Questions\"\n                    onChange={(event) => searchQuestion(event)}\n                  />\n                </div>\n              </div>\n              <div className=\"quiz-question\">\n                <div className=\"drag__container\">\n                  <div className=\"created__list__wrap drag__element\" draggable=\"false\">\n                    <div className=\"list_item\">\n                      <div className=\"d-flex align-items-center\">\n                        <h6>list Drag to right side</h6>\n                      </div>\n                    </div>\n                  </div>\n                  {this.state.questionList.map((question, index) => (\n                    <div\n                      key={index}\n                      onDragStart={(event) => this.setDragData(event, question)}\n                      className=\"created__list__wrap drag__element\" draggable=\"true\">\n                      <div className=\"list_item\">\n                        <div className=\"d-flex align-items-center\">\n                          <span><i className=\"fa fa-plus\"></i></span>\n                          <p className=\"ml-1\">{question.question_content}</p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </form>\n          </div>\n\n        </div>\n        <div className=\"col-lg-6 m_15 bg-white\">\n          <div className=\"new_quiz_wraper\">\n            <div className=\"header\">\n              <h4 className=\"sub__heading\">New Quiz\n                      <p className=\"sub__caption\">Drag the Options from left to Right\n                      </p>\n              </h4>\n\n            </div>\n            <div className=\"quiz__main\">\n              <form action=\"\">\n                <div className=\"form-group col-lg-8 mb-30\">\n                  <label htmlFor=\"Training\">Questions per Quiz</label>\n                  <input\n                    value={this.state.questionNumber}\n                    onChange={(event) => this.handleChange(event)}\n                    type=\"text\"\n                    className=\"form-control required\" id=\"Training\"\n                    placeholder=\"Enter No of Questions\" />\n                </div>\n              </form>\n              <div className=\"drag__container mt-60\">\n                <div className=\"created__list__wrap \" draggable=\"false\">\n                  <div className=\"list_item\" ref={this.state.dropDiv}>\n                    <div className=\"d-flex\">\n                      <h6>Drag and Drop here</h6>\n                    </div>\n                  </div>\n                </div>\n                {this.state.selectedQuestions.map((question, index) => (\n                  <div\n                    key={index}\n                    className=\"created__list__wrap \" draggable=\"false\">\n                    <div className=\"list_item\">\n                      <div className=\"d-flex align-items-center\">\n                        <span className=\"delete-drag\" onClick={() => this.deleteQuestion(question, index)}><i className=\"fa fa-trash\"></i></span>\n                        <p className=\"ml-1\">{question.question_content}</p>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-12 text-right\">\n          <div className=\"button__work\">\n\n            <button\n              onClick={this.props.closeAddQuizModal}\n              type=\"button\"\n              className=\"btn btn-danger cancel\">Cancel</button>\n            <button\n              onClick={this.resetForm}\n              type=\"button\"\n              className=\"btn btn-danger reset\">Reset</button>\n            <button\n              onClick={this.saveForm}\n              type=\"button\"\n              className=\"btn btn-danger add btn__save\">Save</button>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}