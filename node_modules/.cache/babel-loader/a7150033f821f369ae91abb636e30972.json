{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/schedule/TrainingList/Components/uploadResult.js\";\nimport React, { Component } from 'react';\nexport default class UploadResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrag = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDragIn = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDragOut = e => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.handleDrop = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      console.log(e.dataTransfer.files); // this.readFromFile(e.dataTransfer.files[0]);\n    };\n\n    this.fileChange = event => {\n      this.readFromFile(event.target.files[0]);\n    };\n\n    this.state = {\n      uploadDiv: React.createRef()\n    };\n  }\n\n  componentDidMount() {\n    let div = this.state.uploadDiv.current;\n    console.log(div);\n    div.addEventListener('dragenter', this.handleDragIn);\n    div.addEventListener('dragleave', this.handleDragOut);\n    div.addEventListener('dragover', this.handleDrag);\n    div.addEventListener('drop', this.handleDrop);\n  }\n\n  componentWillUnmount() {\n    let div = this.state.uploadDiv.current;\n    div.removeEventListener('dragenter', this.handleDragIn);\n    div.removeEventListener('dragleave', this.handleDragOut);\n    div.removeEventListener('dragover', this.handleDrag);\n    div.removeEventListener('drop', this.handleDrop);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.state.uploadDiv,\n      className: \"Drag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, \"Drag & drop your files here\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"fileElem\",\n      multiple: true,\n      accept: \".csv\",\n      onChange: this.fileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"button\",\n      htmlFor: \"fileElem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, \"Select some files\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \"File Format .csv Supported\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/schedule/TrainingList/Components/uploadResult.js"],"names":["React","Component","UploadResult","constructor","props","handleDrag","e","preventDefault","stopPropagation","handleDragIn","handleDragOut","handleDrop","console","log","dataTransfer","files","fileChange","event","readFromFile","target","state","uploadDiv","createRef","componentDidMount","div","current","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nexport default class UploadResult extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadDiv: React.createRef(),\n\n    }\n  }\n  componentDidMount() {\n    let div = this.state.uploadDiv.current\n    console.log(div)\n    div.addEventListener('dragenter', this.handleDragIn)\n    div.addEventListener('dragleave', this.handleDragOut)\n    div.addEventListener('dragover', this.handleDrag)\n    div.addEventListener('drop', this.handleDrop)\n  }\n  componentWillUnmount() {\n    let div = this.state.uploadDiv.current\n    div.removeEventListener('dragenter', this.handleDragIn)\n    div.removeEventListener('dragleave', this.handleDragOut)\n    div.removeEventListener('dragover', this.handleDrag)\n    div.removeEventListener('drop', this.handleDrop)\n  }\n  handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  handleDragIn = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  handleDragOut = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log(e.dataTransfer.files)\n    // this.readFromFile(e.dataTransfer.files[0]);\n  }\n  fileChange = (event) => {\n\n    this.readFromFile(event.target.files[0]);\n  }\n  render() {\n    return (\n      <div className=\"container-fluid mt-3\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div ref={this.state.uploadDiv} className=\"Drag\">\n              <h6>Drag &amp; drop your files here</h6>\n              <input type=\"file\" id=\"fileElem\" multiple accept=\".csv\" onChange={this.fileChange} />\n              <label className=\"button\" htmlFor=\"fileElem\">Select some files</label>\n              <p>File Format .csv Supported</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}