{"ast":null,"code":"var _jsxFileName = \"/home/alrin/reactproject/kms-ui/src/components/schedule/Training/Master/Components/Training/Training.js\";\nimport React, { Component, Fragment } from 'react';\nimport TrainingListTable from './TrainingListTable';\nimport { Popup, POPUP_ALIGN } from '@6d-ui/popup';\nimport AddEditTrainingType from './AddEditTrainingType';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nexport default class Training extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTrainingList = () => {\n      const url = this.props.url_training.LIST_TRAINING + `?page=1&size=1500&sort=id&status=&order=desc&keyword=`;\n      this.props.ajaxUtil.sendRequest(url, {}, trainingList => {\n        this.setState({\n          trainingListPagination: trainingList\n        });\n\n        if (trainingList.hasOwnProperty('data')) {\n          if (trainingList.data != null && trainingList.data.length > 0) {\n            this.setState({\n              trainingList: trainingList.data\n            });\n          }\n        }\n      }, this.props.loadingFunction, {\n        method: 'GET',\n        isShowSuccess: false\n      });\n    };\n\n    this.openAddTrainingTypeModal = (isUpdate = false) => {\n      this.setState({\n        isUpdate\n      });\n\n      if (!isUpdate) {\n        this.resetForm();\n      }\n\n      this.setState({\n        addTrainingTypeModal: true\n      });\n    };\n\n    this.closeAddTrainingTypeModal = () => {\n      this.setState({\n        addTrainingTypeModal: false\n      });\n    };\n\n    this.openUpdateModal = selectedTrainingType => {\n      this.setState({\n        selectedTrainingType\n      });\n      this.openAddTrainingTypeModal(true);\n    };\n\n    this.handleChange = event => {\n      const selectedTrainingType = this.state.selectedTrainingType;\n      selectedTrainingType[event.currentTarget.name] = event.currentTarget.value;\n      this.setState({\n        selectedTrainingType\n      });\n    };\n\n    this.updateStatus = (data, id) => {\n      // console.log(id);\n      // return;\n      this.props.ajaxUtil.sendRequest(this.props.url_training.UPDATE_TRAINING_TYPE, {\n        id: id,\n        status: data != \"1\" ? '1' : '0'\n      }, trainingList => {\n        let error = true;\n\n        if (trainingList.statusCode == 200) {\n          error = false;\n          this.getTrainingList();\n        }\n\n        this.props.setNotification({\n          message: trainingList.message,\n          hasError: error,\n          timestamp: new Date().getTime()\n        });\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.deleteTrainingType = id => {\n      confirmAlert({\n        title: 'Are you Sure ?',\n        message: '',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => this.performDelete(id)\n        }, {\n          label: 'No',\n          onClick: () => {}\n        }]\n      });\n    };\n\n    this.performDelete = id => {\n      this.props.ajaxUtil.sendRequest(this.props.url_training.UPDATE_TRAINING_TYPE, {\n        id: id,\n        status: '2'\n      }, trainingList => {\n        let error = true;\n\n        if (trainingList.statusCode == 200) {\n          error = false;\n          this.getTrainingList();\n        }\n\n        this.props.setNotification({\n          message: trainingList.message,\n          hasError: error,\n          timestamp: new Date().getTime()\n        });\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.addAndUpdateTrainingType = () => {\n      let trainingType = {};\n\n      if (!this.state.isUpdate) {\n        //save form\n        if (this.state.selectedTrainingType.training_type.trim().length <= 0) {\n          this.props.setNotification({\n            message: 'Please fill the form',\n            hasError: true,\n            timestamp: new Date().getTime()\n          });\n          return;\n        }\n\n        trainingType = {\n          training_type_name: this.state.selectedTrainingType.training_type,\n          description: this.state.selectedTrainingType.description ? this.state.selectedTrainingType.description : \"\",\n          status: true\n        };\n      } else {\n        trainingType = {\n          training_type_id: this.state.selectedTrainingType.id,\n          training_type_name: this.state.selectedTrainingType.training_type,\n          description: this.state.selectedTrainingType.description,\n          status: this.state.selectedTrainingType.status == \"1\" ? true : false\n        };\n      }\n\n      this.closeAddTrainingTypeModal();\n      this.props.ajaxUtil.sendRequest(this.props.url_training.SAVE_TRAINING_TYPE, trainingType, trainingList => {\n        let error = true;\n\n        if (trainingList.statusCode == 200) {\n          error = false;\n          this.closeAddTrainingTypeModal();\n          this.getTrainingList();\n        } else {\n          this.openAddTrainingTypeModal(this.state.isUpdate);\n        }\n\n        this.props.setNotification({\n          message: trainingList.message,\n          hasError: error,\n          timestamp: new Date().getTime()\n        });\n      }, this.props.loadingFunction, {\n        method: 'POST',\n        isShowSuccess: false\n      });\n    };\n\n    this.resetForm = () => {\n      const selectedTrainingType = {\n        training_type: '',\n        description: ''\n      };\n      this.setState({\n        selectedTrainingType\n      });\n    };\n\n    this.timeInterval = '';\n\n    this.search = event => {\n      this.setState({\n        search: event.currentTarget.value\n      });\n      clearInterval(this.timeInterval);\n      this.timeInterval = setTimeout(() => {\n        this.performSearch();\n      }, 500);\n    };\n\n    this.performSearch = () => {\n      if (this.state.search.length > 0) {\n        const url = this.props.url_training.LIST_TRAINING + `?page=1&size=1500&sort=id&status=&order=desc&keyword=${this.state.search}`;\n        this.props.ajaxUtil.sendRequest(url, {}, trainingList => {\n          this.setState({\n            trainingListPagination: trainingList\n          });\n\n          if (trainingList.hasOwnProperty('data')) {\n            if (trainingList.data != null && trainingList.data.length > 0) {\n              this.setState({\n                trainingList: trainingList.data\n              });\n            }\n\n            if (trainingList.data == null) {\n              this.setState({\n                trainingList: []\n              });\n            }\n          }\n        }, this.props.loadingFunction, {\n          method: 'GET',\n          isShowSuccess: false\n        });\n      } else {\n        this.getTrainingList();\n      }\n    };\n\n    this.state = {\n      id: null,\n      show: false,\n      trainingList: [],\n      trainingListPagination: {},\n      addTrainingTypeModal: false,\n      selectedTrainingType: {\n        training_type: '',\n        description: ''\n      },\n      isUpdate: false,\n      search: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getTrainingList();\n    this.props.setActive('training');\n  }\n\n  render() {\n    const {\n      trainingList,\n      addTrainingTypeModal,\n      isUpdate,\n      selectedTrainingType\n    } = this.state;\n    const {\n      search,\n      resetForm,\n      updateStatus,\n      deleteTrainingType,\n      openUpdateModal,\n      openAddTrainingTypeModal,\n      closeAddTrainingTypeModal,\n      handleChange,\n      addAndUpdateTrainingType\n    } = this;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Sub__tab__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sub__header__left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, \"All Entries | \", trainingList.length), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => openAddTrainingTypeModal(false),\n      className: \"add__training__btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, \"Add Training Type\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sub__header__right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchbox \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: event => search(event),\n      name: \"search\",\n      type: \"search\",\n      placeholder: \"What are you looking for ?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(TrainingListTable, {\n      openUpdateModal: openUpdateModal,\n      updateStatus: updateStatus,\n      deleteTrainingType: deleteTrainingType,\n      trainingList: trainingList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Popup, {\n      type: POPUP_ALIGN.RIGHT,\n      title: !isUpdate ? \"Add Training Type\" : \"Update Training Type\",\n      isOpen: addTrainingTypeModal,\n      close: closeAddTrainingTypeModal,\n      minWidth: \"50%\",\n      component: /*#__PURE__*/React.createElement(AddEditTrainingType, {\n        selectedTrainingType: selectedTrainingType,\n        isUpdate: !isUpdate,\n        handleChange: handleChange,\n        closeForm: closeAddTrainingTypeModal,\n        resetForm: resetForm,\n        addAndUpdateTrainingType: addAndUpdateTrainingType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/alrin/reactproject/kms-ui/src/components/schedule/Training/Master/Components/Training/Training.js"],"names":["React","Component","Fragment","TrainingListTable","Popup","POPUP_ALIGN","AddEditTrainingType","confirmAlert","Training","constructor","props","getTrainingList","url","url_training","LIST_TRAINING","ajaxUtil","sendRequest","trainingList","setState","trainingListPagination","hasOwnProperty","data","length","loadingFunction","method","isShowSuccess","openAddTrainingTypeModal","isUpdate","resetForm","addTrainingTypeModal","closeAddTrainingTypeModal","openUpdateModal","selectedTrainingType","handleChange","event","state","currentTarget","name","value","updateStatus","id","UPDATE_TRAINING_TYPE","status","error","statusCode","setNotification","message","hasError","timestamp","Date","getTime","deleteTrainingType","title","buttons","label","onClick","performDelete","addAndUpdateTrainingType","trainingType","training_type","trim","training_type_name","description","training_type_id","SAVE_TRAINING_TYPE","timeInterval","search","clearInterval","setTimeout","performSearch","show","componentDidMount","setActive","render","RIGHT"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport TrainingListTable from './TrainingListTable';\nimport { Popup, POPUP_ALIGN } from '@6d-ui/popup';\nimport AddEditTrainingType from './AddEditTrainingType';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nexport default class Training extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      show: false,\n      trainingList: [],\n      trainingListPagination: {},\n      addTrainingTypeModal: false,\n      selectedTrainingType: {\n        training_type: '',\n        description: ''\n      },\n      isUpdate: false,\n      search: '',\n    }\n  }\n  componentDidMount() {\n    this.getTrainingList();\n    this.props.setActive('training');\n\n  }\n  getTrainingList = () => {\n    const url = this.props.url_training.LIST_TRAINING + `?page=1&size=1500&sort=id&status=&order=desc&keyword=`;\n    this.props.ajaxUtil.sendRequest(url, {}, trainingList => {\n      this.setState({ trainingListPagination: trainingList })\n      if (trainingList.hasOwnProperty('data')) {\n        if (trainingList.data != null && trainingList.data.length > 0) {\n          this.setState({ trainingList: trainingList.data });\n        }\n      }\n    }, this.props.loadingFunction,\n      { method: 'GET', isShowSuccess: false });\n  }\n  openAddTrainingTypeModal = (isUpdate = false) => {\n    this.setState({ isUpdate })\n    if (!isUpdate) {\n      this.resetForm();\n    }\n    this.setState({ addTrainingTypeModal: true })\n  }\n  closeAddTrainingTypeModal = () => {\n    this.setState({ addTrainingTypeModal: false })\n  }\n  openUpdateModal = (selectedTrainingType) => {\n    this.setState({ selectedTrainingType });\n    this.openAddTrainingTypeModal(true);\n  }\n  handleChange = (event) => {\n    const selectedTrainingType = this.state.selectedTrainingType;\n    selectedTrainingType[event.currentTarget.name] = event.currentTarget.value\n    this.setState({ selectedTrainingType });\n  }\n  updateStatus = (data, id) => {\n    // console.log(id);\n    // return;\n    this.props.ajaxUtil.sendRequest(this.props.url_training.UPDATE_TRAINING_TYPE, {\n      id: id,\n      status: data != \"1\" ? '1' : '0'\n    }, trainingList => {\n      let error = true;\n      if (trainingList.statusCode == 200) {\n        error = false\n        this.getTrainingList();\n      }\n      this.props.setNotification({\n        message: trainingList.message,\n        hasError: error,\n        timestamp: new Date().getTime()\n      })\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  deleteTrainingType = (id) => {\n    confirmAlert({\n      title: 'Are you Sure ?',\n      message: '',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.performDelete(id)\n        },\n        {\n          label: 'No',\n          onClick: () => { }\n        }\n      ]\n    });\n  }\n  performDelete = (id) => {\n    this.props.ajaxUtil.sendRequest(this.props.url_training.UPDATE_TRAINING_TYPE, {\n      id: id,\n      status: '2'\n    }, trainingList => {\n      let error = true;\n      if (trainingList.statusCode == 200) {\n        error = false\n        this.getTrainingList();\n      }\n      this.props.setNotification({\n        message: trainingList.message,\n        hasError: error,\n        timestamp: new Date().getTime()\n      })\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  addAndUpdateTrainingType = () => {\n    let trainingType = {};\n    if (!this.state.isUpdate) {\n      //save form\n      if (this.state.selectedTrainingType.training_type.trim().length <= 0) {\n        this.props.setNotification({\n          message: 'Please fill the form',\n          hasError: true,\n          timestamp: new Date().getTime()\n        });\n        return\n      }\n      trainingType = {\n        training_type_name: this.state.selectedTrainingType.training_type,\n        description: (this.state.selectedTrainingType.description) ? this.state.selectedTrainingType.description : \"\",\n        status: true\n      }\n    } else {\n      trainingType = {\n        training_type_id: this.state.selectedTrainingType.id,\n        training_type_name: this.state.selectedTrainingType.training_type,\n        description: this.state.selectedTrainingType.description,\n        status: this.state.selectedTrainingType.status == \"1\" ? true : false\n      }\n\n    }\n    this.closeAddTrainingTypeModal();\n    this.props.ajaxUtil.sendRequest(this.props.url_training.SAVE_TRAINING_TYPE, trainingType, trainingList => {\n      let error = true;\n      if (trainingList.statusCode == 200) {\n        error = false\n        this.closeAddTrainingTypeModal();\n        this.getTrainingList();\n      } else {\n        this.openAddTrainingTypeModal(this.state.isUpdate);\n      }\n      this.props.setNotification({\n        message: trainingList.message,\n        hasError: error,\n        timestamp: new Date().getTime()\n      });\n    }, this.props.loadingFunction,\n      { method: 'POST', isShowSuccess: false });\n  }\n  resetForm = () => {\n    const selectedTrainingType = {\n      training_type: '',\n      description: ''\n    }\n    this.setState({ selectedTrainingType });\n  }\n  timeInterval = '';\n  search = (event) => {\n    this.setState({ search: event.currentTarget.value });\n    clearInterval(this.timeInterval);\n    this.timeInterval = setTimeout(() => {\n      this.performSearch()\n    }, 500)\n  }\n  performSearch = () => {\n    if (this.state.search.length > 0) {\n      const url = this.props.url_training.LIST_TRAINING + `?page=1&size=1500&sort=id&status=&order=desc&keyword=${this.state.search}`;\n      this.props.ajaxUtil.sendRequest(url, {}, trainingList => {\n        this.setState({ trainingListPagination: trainingList })\n        if (trainingList.hasOwnProperty('data')) {\n          if (trainingList.data != null && trainingList.data.length > 0) {\n            this.setState({ trainingList: trainingList.data });\n          }\n          if (trainingList.data == null) {\n            this.setState({ trainingList: [] })\n          }\n        }\n      }, this.props.loadingFunction,\n        { method: 'GET', isShowSuccess: false });\n    } else {\n      this.getTrainingList();\n    }\n  }\n\n  render() {\n    const { trainingList, addTrainingTypeModal, isUpdate, selectedTrainingType } = this.state;\n    const { search, resetForm, updateStatus, deleteTrainingType, openUpdateModal, openAddTrainingTypeModal, closeAddTrainingTypeModal, handleChange, addAndUpdateTrainingType } = this;\n    return (\n      <Fragment>\n\n        <div className=\"Sub__tab__header\">\n\n          <div className=\"sub__header__left\">\n            <h4>All Entries | {trainingList.length}</h4>\n            <button onClick={() => openAddTrainingTypeModal(false)} className=\"add__training__btn\">\n              Add Training Type\n            </button>\n          </div>\n          <div className=\"sub__header__right\">\n            <div className=\"searchbox \">\n              <input onChange={(event) => search(event)} name=\"search\" type=\"search\" placeholder=\"What are you looking for ?\" />\n              {/* <button className=\"btn\" >\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n              </button> */}\n            </div>\n\n          </div>\n        </div>\n        <TrainingListTable\n          openUpdateModal={openUpdateModal}\n          updateStatus={updateStatus}\n          deleteTrainingType={deleteTrainingType}\n          trainingList={trainingList} />\n        <Popup\n          type={POPUP_ALIGN.RIGHT}\n          title={!isUpdate ? \"Add Training Type\" : \"Update Training Type\"}\n          isOpen={addTrainingTypeModal}\n          close={closeAddTrainingTypeModal}\n          minWidth=\"50%\"\n          component={\n            <AddEditTrainingType\n              selectedTrainingType={selectedTrainingType}\n              isUpdate={!isUpdate}\n              handleChange={handleChange}\n              closeForm={closeAddTrainingTypeModal}\n              resetForm={resetForm}\n              addAndUpdateTrainingType={addAndUpdateTrainingType}\n\n            />\n          }\n        />\n      </Fragment >\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}